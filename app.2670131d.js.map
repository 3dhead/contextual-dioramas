{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/CannonDebugRenderer.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/components/ContextualObject.js","webpack:///./src/components/Building.js","webpack:///./src/components/Cactus.js","webpack:///./src/components/Rock.js","webpack:///./src/components/Tree.js","webpack:///./src/components/Biomes.js","webpack:///./src/components/ContextQuadtree.js","webpack:///./src/lib/meshUtils.js","webpack:///./src/components/Terrain.js","webpack:///./src/components/Water.js","webpack:///./src/components/Diorama.js","webpack:///./src/ui/DioramaControls.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CannonDebugRenderer","scene","world","_classCallCheck","this","tmpVec0","CANNON","Vec3","tmpVec1","tmpVec2","tmpQuat0","_meshes","_material","THREE","color","wireframe","_sphereGeometry","_boxGeometry","_planeGeometry","_cylinderGeometry","bodies","meshes","shapeWorldPosition","shapeWorldQuaternion","meshIndex","body","shapes","shape","_updateMesh","mesh","quaternion","vmult","shapeOffsets","position","vadd","mult","shapeOrientations","copy","visible","remove","index","_typeMatch","_createMesh","_scaleMesh","material","geo","type","Shape","types","SPHERE","BOX","PLANE","CONVEXPOLYHEDRON","vertices","v","x","y","z","faces","face","a","b","computeBoundingSphere","computeFaceNormals","geometryId","id","TRIMESH","indices","getTriangleVertices","HEIGHTFIELD","xi","yi","k","getConvexTrianglePillar","pillarConvex","pillarOffset","ii","add","geometry","Sphere","Box","Plane","ConvexPolyhedron","Trimesh","Heightfield","radius","scale","set","halfExtents","multiplyScalar","WebGLApp","_this","_ref","arguments","undefined","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","options","_objectWithoutProperties","WebGLApp_classCallCheck","_updateListeners","writable","_tmpTarget","_lastTime","_width","WebGLApp_height","resize","_ref2","_ref2$width","width","_ref2$height","height","_ref2$pixelRatio","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","saveDataURI","update","dt","time","xrframe","orbitControls","step","cannonDebugRenderer","forEach","_classPrivateFieldLooseBase","fn","passes","pass","isLastElement","renderToScreen","render","start","isRunning","setAnimationLoop","animate","stop","now","stats","begin","Math","min","maxDeltaTime","end","_len","args","Array","_key","child","_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","shadowMap","enabled","sortObjects","domElement","setClearColor","xr","maxPixelRatio","gl","getContext","performance","addEventListener","touchHandler","createTouches","target","filtered","isDragging","on","ev","pos","postprocessing","EffectComposer","addPass","RenderPass","OrbitControls","showWorldWireframes","showFps","Stats","showPanel","document","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","expanded","closeControls","style","createElement","innerHTML","head","gpu","getGPUTier","glContext","tier","Number","isMobile","toLowerCase","includes","indexOf","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadTexture","_x","_x2","_loadTexture","_callee","url","texture","image","regeneratorRuntime","wrap","_context","prev","next","encoding","setTextureParams","loadImage","crossorigin","sent","needsUpdate","initTexture","abrupt","t0","Error","concat","opt","flipY","mapping","format","isJPEG","search","repeat","wrapS","wrapT","minFilter","magFilter","generateMipmaps","size","renderTarget","outTexture","basePath","extension","urls","equirectangular","pmrem","pmremEquirectangular","highestPowerOfTwo","naturalHeight","fromEquirectangularTexture","dispose","prefix","replace","postfix","Promise","resolve","reject","HDRCubeTextureLoader","load","cubeMap","assignCubemapOptions","pmremGenerator","compileCubemapShader","fromCubemap","pmremCubemap","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","AssetManager","TypeError","AssetManager_classPrivateFieldLooseBase","_cache","_onProgressListeners","AssetManager_objectWithoutProperties","_getQueued","_queue","AssetManager_objectSpread","_extractType","find","item","ext","lastIndexOf","test","itemLoadingStart","Date","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","_this2","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","errors","_logs","filter","groupLog","_ref5","GLTFLoader","err","RGBELoader","fetch","then","response","json","_loadEnvMap","loadEnvMap","arrayBuffer","text","_len2","_key2","_console","groupCollapsed","_console2","_toConsumableArray","groupEnd","lib_AssetManager","ContextualObject","webgl","ContextualObject_classCallCheck","_super","seedrandom","require","rng","seed","constructor","setRotationFromEuler","degToRad","randomAngle","materialOptions","variation","g","roughness","castShadow","receiveShadow","className","distributionOptions","labels","baseDensity","sizeVariation","allowUnderwater","houseGltfKey","assets","Building","Building_classCallCheck","house","clone","isMesh","ground","cactusGltfKey","Cactus","Cactus_classCallCheck","cactus","scaleModifier","baseHeight","Rock","Rock_classCallCheck","baseSize","terrainColor","lerp","isUnderwater","addMesh","shoreline","Tree","Tree_classCallCheck","trunkVerticalOffset","translate","trunkWidth","BIOMES","temperate","terrain","Color","cliff","underwater","side","water","opacity","desert","arctic","Quad","bounds","ContextQuadtree_classCallCheck","boundsSize","getSize","topLeft","topRight","bottomLeft","bottomRight","point","getPoint","containsPoint","isSmallestAllowedSize","halfX","max","halfY","setColor","warn","_i","_quads","quad","getColor","drawDebug","baseColor","numSamples","sample","_i2","_sample","_step","_iterator","_createForOfIteratorHelper","done","tap","e","f","_step2","_iterator2","label","addLabels","minDensity","density","getLabelDensity","bestQuad","bestDensity","quadDensity","findQuadWithMinLabelDensity","maxDensity","findQuadWithMaxLabelDensity","_step3","requireAll","_iterator3","hasLabel","isArray","hasLabels","_i3","_quads2","positionHasLabels","_i4","_quads3","getLabels","box","center","setFromCenterAndSize","helper","generateSideMeshes","group","planeGeometry","xSegments","zSegments","lowestPoint","topVertices","getAttribute","array","computeBoundingBox","boundingBox","newHeight","xSide","sideGeometry","rotateY","PI","stride","Terrain","Terrain_classCallCheck","Terrain_assertThisInitialized","_bottomPadding","generateHeight","rotateX","heightData","waterCurve","getWaterCurve","modifyGeometryForWater","computeVertexNormals","generateTexture","map","sideMaterial","biome","perlin","ImprovedNoise","quality","Float32Array","abs","noise","heightScale","Terrain_classPrivateFieldLooseBase","multiplier","context","imageData","fillStyle","fillRect","getImageData","halfHeight","waterLevel","level","normals","upVector","sandMax","falloff","clamp","normal","cliffSteepness","dot","blend","contextQuadtree","putImageData","canvasScaled","drawImage","points","getPoints","meander","vertex","vertex2D","closest","closestPointToPoint","distance","distanceTo","getWaterVertexHeight","current","calculated","depth","lowest","raycaster","multiply","sub","intersects","intersectObject","hit","tempVec","minDist","xTest","zTest","maxDist","direction","normalize","offset","line","ceil","xPlane","zPlane","endPoint","intersectLine","startPoint","finalPoints","meanderDistance","newVec","at","Water","Water_classCallCheck","Water_possibleConstructorReturn","waterOptions","transparent","reflectivity","generateMesh","Water_assertThisInitialized","hdriKey","Diorama","_THREE$Group","Diorama_inherits","Diorama_createSuper","Diorama_classCallCheck","diorama","halfZ","maxSize","quadBounds","setupLights","waterLineGeometry","setFromPoints","waterLine","Diorama_createForOfIteratorHelper","asset","distributeObjects","createBase","depthTest","elapsed","skylight","setHSL","groundColor","sun","shadow","mapSize","left","right","top","bottom","skyImage","environment","toneMapping","toneMappingExposure","outputEncoding","base","translateY","floorSize","floorGeometry","floorMaterial","floor","classToDistribute","onMesh","setFromObject","numObjects","subVectors","meetsDistributionRequirements","intersectObjects","children","rayColor","getAverageColor","newObject","updateMatrixWorld","arrow","ray","origin","_Object$entries","entries","_Object$entries$_i","_slicedToArray","keys","ranges","InputControl","owner","DioramaControls_classCallCheck","field","innerText","toDisplayString","input","onchange","propertyChanged","parent","display","CheckBoxControl","setAttribute","checked","defaultValue","SliderControl","_this3","_super2","parseFloat","BiomeGroup","_this4","biomeName","div","heading","biomeSelect","_Object$keys","option","selected","biomeChanged","updateControls","selectedIndex","_Object$keys2","control","removeChild","childOptions","optionsObject","valueOverrides","AssetArrayGroup","getValue","DioramaControls_slicedToArray","DioramaControls_createForOfIteratorHelper","assign","_Object$entries2","_Object$entries2$_i","ControlGroup","_i5","_Object$entries3","_Object$entries3$_i","DioramaControls_typeof","isEmpty_default","setVisibility","optionValues","_i6","_Object$entries4","_Object$entries4$_i","_i7","_Object$entries5","_Object$entries5$_i","DioramaControls","controlsDiv","getElementById","dioramaOptions","sessionStorage","setItem","JSON","stringify","toUpperCase","location","querySelector","defaultDioramaOptions","sessionOptions","getItem","parsedOptions","parse","getDefaultDioramaOptions","visibility"],"mappings":"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","file":"app.2670131d.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([286,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable no-underscore-dangle */\nimport * as THREE from 'three'\nimport CANNON from 'cannon'\n\n/**\n * Adds Three.js primitives into the scene where all the Cannon bodies and shapes are.\n * @class CannonDebugRenderer\n * @param {THREE.Scene} scene\n * @param {CANNON.World} world\n */\n\nexport default class CannonDebugRenderer {\n  tmpVec0 = new CANNON.Vec3()\n  tmpVec1 = new CANNON.Vec3()\n  tmpVec2 = new CANNON.Vec3()\n  tmpQuat0 = new CANNON.Vec3()\n\n  constructor(scene, world) {\n    this.scene = scene\n    this.world = world\n\n    this._meshes = []\n\n    this._material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true })\n    this._sphereGeometry = new THREE.SphereGeometry(1)\n    this._boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n    this._planeGeometry = new THREE.PlaneGeometry(10, 10, 10, 10)\n    this._cylinderGeometry = new THREE.CylinderGeometry(1, 1, 10, 10)\n  }\n\n  update() {\n    const { bodies } = this.world\n    const meshes = this._meshes\n    const shapeWorldPosition = this.tmpVec0\n    const shapeWorldQuaternion = this.tmpQuat0\n\n    let meshIndex = 0\n\n    for (let i = 0; i !== bodies.length; i++) {\n      const body = bodies[i]\n\n      for (let j = 0; j !== body.shapes.length; j++) {\n        const shape = body.shapes[j]\n\n        this._updateMesh(meshIndex, body, shape)\n\n        const mesh = meshes[meshIndex]\n\n        if (mesh) {\n          // Get world position\n          body.quaternion.vmult(body.shapeOffsets[j], shapeWorldPosition)\n          body.position.vadd(shapeWorldPosition, shapeWorldPosition)\n\n          // Get world quaternion\n          body.quaternion.mult(body.shapeOrientations[j], shapeWorldQuaternion)\n\n          // Copy to meshes\n          mesh.position.copy(shapeWorldPosition)\n          mesh.quaternion.copy(shapeWorldQuaternion)\n\n          // Change the visiblity\n          if ('visible' in body) {\n            mesh.visible = body.visible\n          }\n        }\n\n        meshIndex += 1\n      }\n    }\n\n    for (let i = meshIndex; i < meshes.length; i++) {\n      const mesh = meshes[i]\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n    }\n\n    meshes.length = meshIndex\n  }\n\n  _updateMesh(index, body, shape) {\n    let mesh = this._meshes[index]\n    if (!this._typeMatch(mesh, shape)) {\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n      mesh = this._meshes[index] = this._createMesh(shape)\n    }\n    this._scaleMesh(mesh, shape)\n  }\n\n  _createMesh(shape) {\n    let mesh\n    const material = this._material\n\n    const geo = new THREE.Geometry()\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh = new THREE.Mesh(this._sphereGeometry, material)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh = new THREE.Mesh(this._boxGeometry, material)\n        break\n\n      case CANNON.Shape.types.PLANE:\n        mesh = new THREE.Mesh(this._planeGeometry, material)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        // Create mesh\n\n        // Add vertices\n        for (let i = 0; i < shape.vertices.length; i++) {\n          const v = shape.vertices[i]\n          geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z))\n        }\n\n        for (let i = 0; i < shape.faces.length; i++) {\n          const face = shape.faces[i]\n\n          // add triangles\n          const a = face[0]\n          for (let j = 1; j < face.length - 1; j++) {\n            const b = face[j]\n            const c = face[j + 1]\n            geo.faces.push(new THREE.Face3(a, b, c))\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        for (let i = 0; i < shape.indices.length / 3; i++) {\n          shape.getTriangleVertices(i, this.tmpVec0, this.tmpVec1, this.tmpVec2)\n          geo.vertices.push(\n            new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n            new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n            new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n          )\n          const j = geo.vertices.length - 3\n          geo.faces.push(new THREE.Face3(j, j + 1, j + 2))\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        for (let xi = 0; xi < shape.data.length - 1; xi++) {\n          for (let yi = 0; yi < shape.data[xi].length - 1; yi++) {\n            for (let k = 0; k < 2; k++) {\n              shape.getConvexTrianglePillar(xi, yi, k === 0)\n              this.tmpVec0.copy(shape.pillarConvex.vertices[0])\n              this.tmpVec1.copy(shape.pillarConvex.vertices[1])\n              this.tmpVec2.copy(shape.pillarConvex.vertices[2])\n              this.tmpVec0.vadd(shape.pillarOffset, this.tmpVec0)\n              this.tmpVec1.vadd(shape.pillarOffset, this.tmpVec1)\n              this.tmpVec2.vadd(shape.pillarOffset, this.tmpVec2)\n              geo.vertices.push(\n                new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n                new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n                new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n              )\n              const ii = geo.vertices.length - 3\n              geo.faces.push(new THREE.Face3(ii, ii + 1, ii + 2))\n            }\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n      default:\n        break\n    }\n\n    if (mesh) {\n      this.scene.add(mesh)\n    }\n\n    return mesh\n  }\n\n  _typeMatch(mesh, shape) {\n    if (!mesh) {\n      return false\n    }\n    const geo = mesh.geometry\n    return (\n      (geo instanceof THREE.SphereGeometry && shape instanceof CANNON.Sphere) ||\n      (geo instanceof THREE.BoxGeometry && shape instanceof CANNON.Box) ||\n      (geo instanceof THREE.PlaneGeometry && shape instanceof CANNON.Plane) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.ConvexPolyhedron) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Trimesh) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Heightfield)\n    )\n  }\n\n  _scaleMesh(mesh, shape) {\n    const { radius } = shape\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh.scale.set(radius, radius, radius)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh.scale.copy(shape.halfExtents)\n        mesh.scale.multiplyScalar(2)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        mesh.scale.set(1, 1, 1)\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        mesh.scale.copy(shape.scale)\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        mesh.scale.set(1, 1, 1)\n        break\n      default:\n        break\n    }\n  }\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\r\n// really awesome dude, give him a follow!\r\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport createTouches from 'touches'\r\nimport dataURIToBlob from 'datauritoblob'\r\nimport Stats from 'stats.js'\r\nimport State from 'controls-state'\r\nimport wrapGUI from 'controls-gui'\r\nimport { getGPUTier } from 'detect-gpu'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport CannonDebugRenderer from './CannonDebugRenderer'\r\n\r\nexport default class WebGLApp {\r\n  #updateListeners = []\r\n  #tmpTarget = new THREE.Vector3()\r\n  #lastTime\r\n  #width\r\n  #height\r\n\r\n  constructor({\r\n    background = '#000',\r\n    backgroundAlpha = 1,\r\n    fov = 40,\r\n    near = 0.1,\r\n    far = 500,\r\n    ...options\r\n  } = {}) {\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: false,\r\n      // enabled for saving screenshots of the canvas,\r\n      // may wish to disable this for perf reasons\r\n      preserveDrawingBuffer: true,\r\n      failIfMajorPerformanceCaveat: true,\r\n      ...options,\r\n    })\r\n\r\n    this.renderer.shadowMap.enabled = true\r\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n    this.renderer.sortObjects = false\r\n    this.canvas = this.renderer.domElement\r\n\r\n    this.renderer.setClearColor(background, backgroundAlpha)\r\n\r\n    if (options.xr) {\r\n      this.renderer.xr.enabled = true\r\n    }\r\n\r\n    // save the fixed dimensions\r\n    this.#width = options.width\r\n    this.#height = options.height\r\n\r\n    // clamp pixel ratio for performance\r\n    this.maxPixelRatio = options.maxPixelRatio || 2\r\n    // clamp delta to stepping anything too far forward\r\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\r\n\r\n    // setup a basic camera\r\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\r\n\r\n    this.scene = new THREE.Scene()\r\n\r\n    this.gl = this.renderer.getContext()\r\n\r\n    this.time = 0\r\n    this.isRunning = false\r\n    this.#lastTime = performance.now()\r\n\r\n    // handle resize events\r\n    window.addEventListener('resize', this.resize)\r\n    window.addEventListener('orientationchange', this.resize)\r\n\r\n    // force an initial resize event\r\n    this.resize()\r\n\r\n    // __________________________ADDONS__________________________\r\n\r\n    // really basic touch handler that propagates through the scene\r\n    this.touchHandler = createTouches(this.canvas, {\r\n      target: this.canvas,\r\n      filtered: true,\r\n    })\r\n    this.isDragging = false\r\n    this.touchHandler.on('start', (ev, pos) => {\r\n      this.isDragging = true\r\n      this.traverse('onPointerDown', ev, pos)\r\n    })\r\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\r\n    this.touchHandler.on('end', (ev, pos) => {\r\n      this.isDragging = false\r\n      this.traverse('onPointerUp', ev, pos)\r\n    })\r\n\r\n    // expose a composer for postprocessing passes\r\n    if (options.postprocessing) {\r\n      this.composer = new EffectComposer(this.renderer)\r\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\r\n    }\r\n\r\n    // set up a simple orbit controller\r\n    if (options.orbitControls) {\r\n      this.camera.position.set(30, 20, 60)\r\n      this.orbitControls = new OrbitControls(this.camera, this.renderer.domElement)\r\n      this.orbitControls.update()\r\n    }\r\n\r\n    // Attach the Cannon physics engine\r\n    if (options.world) {\r\n      this.world = options.world\r\n      if (options.showWorldWireframes) {\r\n        this.cannonDebugRenderer = new CannonDebugRenderer(this.scene, this.world)\r\n      }\r\n    }\r\n\r\n    // show the fps meter\r\n    if (options.showFps) {\r\n      this.stats = new Stats()\r\n      this.stats.showPanel(0)\r\n      document.body.appendChild(this.stats.dom)\r\n    }\r\n\r\n    // initialize the controls-state\r\n    if (options.controls) {\r\n      const controlsState = State(options.controls)\r\n      this.controls = options.hideControls\r\n        ? controlsState\r\n        : wrapGUI(controlsState, { expanded: !options.closeControls })\r\n\r\n      // add the custom controls-gui styles\r\n      if (!options.hideControls) {\r\n        const styles = `\r\n          [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\r\n            content: initial !important;\r\n          }\r\n          [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\r\n            text-indent: 6px !important;\r\n          }\r\n          [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\r\n            content: initial !important;\r\n          }\r\n        `\r\n        const style = document.createElement('style')\r\n        style.type = 'text/css'\r\n        style.innerHTML = styles\r\n        document.head.appendChild(style)\r\n      }\r\n    }\r\n\r\n    // detect the gpu info\r\n    const gpu = getGPUTier({ glContext: this.renderer.getContext() })\r\n    this.gpu = {\r\n      name: gpu.type,\r\n      tier: Number(gpu.tier.slice(-1)),\r\n      isMobile: gpu.tier.toLowerCase().includes('mobile'),\r\n    }\r\n  }\r\n\r\n  get width() {\r\n    return this.#width || window.innerWidth\r\n  }\r\n\r\n  get height() {\r\n    return this.#height || window.innerHeight\r\n  }\r\n\r\n  get pixelRatio() {\r\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\r\n  }\r\n\r\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\r\n    // update pixel ratio if necessary\r\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\r\n      this.renderer.setPixelRatio(pixelRatio)\r\n    }\r\n\r\n    // setup new size & update camera aspect if necessary\r\n    this.renderer.setSize(width, height)\r\n    if (this.camera.isPerspectiveCamera) {\r\n      this.camera.aspect = width / height\r\n    }\r\n    this.camera.updateProjectionMatrix()\r\n\r\n    // resize also the composer\r\n    if (this.composer) {\r\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\r\n    }\r\n\r\n    // recursively tell all child objects to resize\r\n    this.scene.traverse((obj) => {\r\n      if (typeof obj.resize === 'function') {\r\n        obj.resize({\r\n          width,\r\n          height,\r\n          pixelRatio,\r\n        })\r\n      }\r\n    })\r\n\r\n    // draw a frame to ensure the new size has been registered visually\r\n    this.draw()\r\n    return this\r\n  }\r\n\r\n  // convenience function to trigger a PNG download of the canvas\r\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\r\n    // force a specific output size\r\n    this.resize({ width, height, pixelRatio: 1 })\r\n    this.draw()\r\n\r\n    const dataURI = this.canvas.toDataURL('image/png')\r\n\r\n    // reset to default size\r\n    this.resize()\r\n    this.draw()\r\n\r\n    // save\r\n    saveDataURI(fileName, dataURI)\r\n  }\r\n\r\n  update = (dt, time, xrframe) => {\r\n    if (this.orbitControls) {\r\n      this.orbitControls.update()\r\n\r\n      // reposition to orbit controls\r\n      //this.camera.up.fromArray(this.orbitControls.up)\r\n      //this.camera.position.fromArray(this.orbitControls.position)\r\n      //this.#tmpTarget.fromArray(this.orbitControls.target)\r\n      //this.camera.lookAt(this.#tmpTarget)\r\n    }\r\n\r\n    // recursively tell all child objects to update\r\n    this.scene.traverse((obj) => {\r\n      if (typeof obj.update === 'function') {\r\n        obj.update(dt, time, xrframe)\r\n      }\r\n    })\r\n\r\n    if (this.world) {\r\n      // update the Cannon physics engine\r\n      this.world.step(1 / 60, dt)\r\n\r\n      // update the debug wireframe renderer\r\n      if (this.cannonDebugRenderer) {\r\n        this.cannonDebugRenderer.update()\r\n      }\r\n\r\n      // recursively tell all child bodies to update\r\n      this.world.bodies.forEach((body) => {\r\n        if (typeof body.update === 'function') {\r\n          body.update(dt, time)\r\n        }\r\n      })\r\n    }\r\n\r\n    // call the update listeners\r\n    this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\r\n\r\n    return this\r\n  }\r\n\r\n  onUpdate(fn) {\r\n    this.#updateListeners.push(fn)\r\n  }\r\n\r\n  offUpdate(fn) {\r\n    const index = this.#updateListeners.indexOf(fn)\r\n\r\n    // return silently if the function can't be found\r\n    if (index === -1) {\r\n      return\r\n    }\r\n\r\n    this.#updateListeners.splice(index, 1)\r\n  }\r\n\r\n  draw = () => {\r\n    if (this.composer) {\r\n      // make sure to always render the last pass\r\n      this.composer.passes.forEach((pass, i, passes) => {\r\n        const isLastElement = i === passes.length - 1\r\n\r\n        if (isLastElement) {\r\n          pass.renderToScreen = true\r\n        } else {\r\n          pass.renderToScreen = false\r\n        }\r\n      })\r\n\r\n      this.composer.render()\r\n    } else {\r\n      this.renderer.render(this.scene, this.camera)\r\n    }\r\n    return this\r\n  }\r\n\r\n  start = () => {\r\n    if (this.isRunning) return\r\n    this.renderer.setAnimationLoop(this.animate)\r\n    this.isRunning = true\r\n    return this\r\n  }\r\n\r\n  stop = () => {\r\n    if (!this.isRunning) return\r\n    this.renderer.setAnimationLoop(null)\r\n    this.isRunning = false\r\n    return this\r\n  }\r\n\r\n  animate = (now, xrframe) => {\r\n    if (!this.isRunning) return\r\n\r\n    if (this.stats) this.stats.begin()\r\n\r\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\r\n    this.time += dt\r\n    this.#lastTime = now\r\n    this.update(dt, this.time, xrframe)\r\n    this.draw()\r\n\r\n    if (this.stats) this.stats.end()\r\n  }\r\n\r\n  traverse = (fn, ...args) => {\r\n    this.scene.traverse((child) => {\r\n      if (typeof child[fn] === 'function') {\r\n        child[fn].apply(child, args)\r\n      }\r\n    })\r\n  }\r\n\r\n  get cursor() {\r\n    return this.canvas.style.cursor\r\n  }\r\n\r\n  set cursor(cursor) {\r\n    if (cursor) {\r\n      this.canvas.style.cursor = cursor\r\n    } else {\r\n      this.canvas.style.cursor = null\r\n    }\r\n  }\r\n}\r\n\r\nfunction saveDataURI(name, dataURI) {\r\n  const blob = dataURIToBlob(dataURI)\r\n\r\n  // force download\r\n  const link = document.createElement('a')\r\n  link.download = name\r\n  link.href = window.URL.createObjectURL(blob)\r\n  link.onclick = setTimeout(() => {\r\n    window.URL.revokeObjectURL(blob)\r\n    link.removeAttribute('href')\r\n  }, 0)\r\n\r\n  link.click()\r\n}\r\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.initTexture(texture)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport highestPowerOfTwo from 'highest-power-two'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    if (options.pmrem) {\n      return pmremEquirectangular(texture, renderer)\n    } else {\n      const size = highestPowerOfTwo(texture.image.naturalHeight)\n      const renderTarget = new THREE.WebGLCubeRenderTarget(size, {\n        generateMipmaps: true,\n        minFilter: THREE.LinearMipmapLinearFilter,\n        magFilter: THREE.LinearFilter,\n      })\n\n      const outTexture = renderTarget.fromEquirectangularTexture(renderer, texture)\n\n      texture.dispose() // dispose original texture\n      texture.image.data = null // remove image reference\n\n      return outTexture\n    }\n  }\n\n  const basePath = url\n  const extension = options.extension || '.jpg'\n  const urls = generateCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (extension === '.hdr') {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n        null,\n        () => reject(new Error(`Could not load env map: ${basePath}`))\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n      null,\n      () => reject(new Error(`Could not load env map: ${basePath}`))\n    )\n  })\n}\n\nfunction assignCubemapOptions(cubeMap, options) {\n  if (options.encoding) {\n    cubeMap.encoding = options.encoding\n  }\n  if (options.format) {\n    cubeMap.format = options.format\n  }\n  if (options.pmrem) {\n    cubeMap = pmremCubemap(cubeMap, options.renderer)\n  }\n  return cubeMap\n}\n\n// prefilter the environment map for irradiance\nfunction pmremEquirectangular(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileEquirectangularShader()\n\n  const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// prefilter the environment map for irradiance\nfunction pmremCubemap(cubeMap, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileCubemapShader()\n  const renderTarget = pmremGenerator.fromCubemap(cubeMap)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  cubeMap.dispose() // dispose original texture\n  cubeMap.image.data = null // remove image reference\n\n  return renderTarget.texture\n}\n\nfunction generateCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\r\n// really awesome dude, give him a follow!\r\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\r\nimport pMap from 'p-map'\r\nimport prettyMs from 'pretty-ms'\r\nimport loadImage from 'image-promise'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader'\r\nimport loadTexture from './loadTexture'\r\nimport loadEnvMap from './loadEnvMap'\r\n\r\nclass AssetManager {\r\n  #queue = []\r\n  #cache = {}\r\n  #onProgressListeners = []\r\n  #asyncConcurrency = 10\r\n  #logs = []\r\n\r\n  addProgressListener(fn) {\r\n    if (typeof fn !== 'function') {\r\n      throw new TypeError('onProgress must be a function')\r\n    }\r\n    this.#onProgressListeners.push(fn)\r\n  }\r\n\r\n  // Add an asset to be queued, input: { url, type, ...options }\r\n  queue({ url, type, ...options }) {\r\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\r\n    if (!this._getQueued(url)) {\r\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\r\n    }\r\n\r\n    return url\r\n  }\r\n\r\n  _getQueued(url) {\r\n    return this.#queue.find((item) => item.url === url)\r\n  }\r\n\r\n  _extractType(url) {\r\n    const ext = url.slice(url.lastIndexOf('.'))\r\n\r\n    switch (true) {\r\n      case /\\.(gltf|glb)$/i.test(ext):\r\n        return 'gltf'\r\n      case /\\.(hdri|hdr)$/i.test(ext):\r\n        return 'hdri'\r\n      case /\\.json$/i.test(ext):\r\n        return 'json'\r\n      case /\\.svg$/i.test(ext):\r\n        return 'svg'\r\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\r\n        return 'image'\r\n      case /\\.(wav|mp3)$/i.test(ext):\r\n        return 'audio'\r\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\r\n        return 'video'\r\n      default:\r\n        throw new Error(`Could not load ${url}, unknown file extension!`)\r\n    }\r\n  }\r\n\r\n  // Fetch a loaded asset by URL\r\n  get = (url) => {\r\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\r\n\r\n    return this.#cache[url]\r\n  }\r\n\r\n  // Loads a single asset\r\n  async loadSingle({ renderer, ...item }) {\r\n    // renderer is used to load textures and env maps,\r\n    // but require it always since it is an extensible pattern\r\n    if (!renderer) {\r\n      throw new Error('You must provide a renderer to the loadSingle function.')\r\n    }\r\n\r\n    try {\r\n      const itemLoadingStart = Date.now()\r\n\r\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\r\n\r\n      if (window.DEBUG) {\r\n        console.log(\r\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\r\n          'color:blue',\r\n          'color:black'\r\n        )\r\n      }\r\n\r\n      return item.url\r\n    } catch (err) {\r\n      delete this.#cache[item.url]\r\n      console.error(`📦 Asset ${item.url} was not loaded:\\n${err}`)\r\n    }\r\n  }\r\n\r\n  // Loads all queued assets\r\n  async load({ renderer }) {\r\n    // renderer is used to load textures and env maps,\r\n    // but require it always since it is an extensible pattern\r\n    if (!renderer) {\r\n      throw new Error('You must provide a renderer to the load function.')\r\n    }\r\n\r\n    const queue = this.#queue.slice()\r\n    this.#queue.length = 0 // clear queue\r\n\r\n    const total = queue.length\r\n    if (total === 0) {\r\n      // resolve first this functions and then call the progress listeners\r\n      setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\r\n      return\r\n    }\r\n\r\n    const loadingStart = Date.now()\r\n\r\n    await pMap(\r\n      queue,\r\n      async (item, i) => {\r\n        try {\r\n          const itemLoadingStart = Date.now()\r\n\r\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\r\n\r\n          if (window.DEBUG) {\r\n            this.log(\r\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\r\n              'color:blue',\r\n              'color:black'\r\n            )\r\n          }\r\n        } catch (err) {\r\n          this.logError(`Asset ${item.url} was not loaded:\\n${err}`)\r\n        }\r\n\r\n        const percent = (i + 1) / total\r\n        this.#onProgressListeners.forEach((fn) => fn(percent))\r\n      },\r\n      { concurrency: this.#asyncConcurrency }\r\n    )\r\n\r\n    if (window.DEBUG) {\r\n      const errors = this.#logs.filter((log) => log.type === 'error')\r\n\r\n      if (errors.length === 0) {\r\n        this.groupLog(`📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱`)\r\n      } else {\r\n        this.groupLog(\r\n          `📦 %c Could not load ${errors.length} asset${errors.length > 1 ? 's' : ''} `,\r\n          'color:white;background:red;'\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  // Loads a single asset on demand, returning from\r\n  // cache if it exists otherwise adding it to the cache\r\n  // after loading.\r\n  _loadItem({ url, type, renderer, ...options }) {\r\n    if (url in this.#cache) {\r\n      return this.#cache[url]\r\n    }\r\n\r\n    switch (type) {\r\n      case 'gltf':\r\n        return new Promise((resolve, reject) => {\r\n          new GLTFLoader().load(url, resolve, null, (err) =>\r\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\r\n          )\r\n        })\r\n      case 'hdri':\r\n        return new Promise((resolve, reject) => {\r\n          new RGBELoader().load(url, resolve, null, (err) =>\r\n            reject(new Error(`Could not load HDRI asset ${url}:\\n${err}`))\r\n          )\r\n        })\r\n      case 'json':\r\n        return fetch(url).then((response) => response.json())\r\n      case 'env-map':\r\n        return loadEnvMap(url, { renderer, ...options })\r\n      case 'svg':\r\n      case 'image':\r\n        return loadImage(url, { crossorigin: 'anonymous' })\r\n      case 'texture':\r\n        return loadTexture(url, { renderer, ...options })\r\n      case 'audio':\r\n        // You might not want to load big audio files and\r\n        // store them in memory, that might be inefficient.\r\n        // Rather load them outside of the queue\r\n        return fetch(url).then((response) => response.arrayBuffer())\r\n      case 'video':\r\n        // You might not want to load big video files and\r\n        // store them in memory, that might be inefficient.\r\n        // Rather load them outside of the queue\r\n        return fetch(url).then((response) => response.blob())\r\n      default:\r\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\r\n    }\r\n  }\r\n\r\n  log(...text) {\r\n    this.#logs.push({ type: 'log', text })\r\n  }\r\n\r\n  logError(...text) {\r\n    this.#logs.push({ type: 'error', text })\r\n  }\r\n\r\n  groupLog(...text) {\r\n    console.groupCollapsed(...text)\r\n    this.#logs.forEach((log) => {\r\n      console[log.type](...log.text)\r\n    })\r\n    console.groupEnd()\r\n\r\n    this.#logs.length = 0 // clear logs\r\n  }\r\n}\r\n\r\n// asset manager is a singleton, you can require it from\r\n// different files and use the same instance.\r\n// A plain js object would have worked just fine...\r\nexport default new AssetManager()\r\n","import * as THREE from 'three'\r\nimport { degToRad } from 'canvas-sketch-util/math'\r\n\r\nexport default class ContextualObject extends THREE.Group {\r\n  static className = null\r\n  static distributionOptions = {}\r\n  static labels = []\r\n  static baseDensity = 0\r\n  static randomAngle = new THREE.Vector3(0, 0, 0)\r\n  static sizeVariation = 0.5\r\n  static allowUnderwater = false\r\n\r\n  constructor(webgl, options) {\r\n    super(options)\r\n\r\n    this.type = 'ContextualObject'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    const seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.seed)\r\n\r\n    if (this.constructor.hasOwnProperty('randomAngle') === true) {\r\n      this.setRotationFromEuler(\r\n        new THREE.Euler(\r\n          (this.rng() - 0.5) * 2 * degToRad(this.constructor.randomAngle.x),\r\n          (this.rng() - 0.5) * 2 * degToRad(this.constructor.randomAngle.y),\r\n          (this.rng() - 0.5) * 2 * degToRad(this.constructor.randomAngle.z)\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  addMesh(geometry, materialOptions, variation = 0.1) {\r\n    materialOptions.color.r += (this.rng() - 0.5) * variation\r\n    materialOptions.color.g += (this.rng() - 0.5) * variation\r\n    materialOptions.color.b += (this.rng() - 0.5) * variation\r\n    if (materialOptions.roughness === undefined) {\r\n      materialOptions.roughness = 0.6\r\n    }\r\n    materialOptions.roughness += (this.rng() - 0.5) * variation\r\n\r\n    const material = new THREE.MeshPhysicalMaterial(materialOptions)\r\n\r\n    const mesh = new THREE.Mesh(geometry, material)\r\n    mesh.castShadow = true\r\n    mesh.receiveShadow = true\r\n\r\n    this.add(mesh)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport assets from '../lib/AssetManager'\r\nimport ContextualObject from './ContextualObject'\r\n\r\nconst houseGltfKey = assets.queue({\r\n  url: 'models/house_swedish_01.glb',\r\n  type: 'gltf',\r\n})\r\n\r\nexport default class Building extends ContextualObject {\r\n  static className = 'Building'\r\n  static distributionOptions = { ground: 1 }\r\n  static labels = ['building']\r\n  static baseDensity = 0.001\r\n  static randomAngle = new THREE.Vector3(0, 180, 0)\r\n\r\n  constructor(webgl, options) {\r\n    super(webgl, options)\r\n\r\n    this.type = 'Building'\r\n\r\n    const houseGltf = assets.get(houseGltfKey)\r\n    const house = houseGltf.scene.clone()\r\n\r\n    house.traverse((child) => {\r\n      if (child.isMesh) {\r\n        child.castShadow = true\r\n        child.receiveShadow = true\r\n      }\r\n    })\r\n\r\n    this.add(house)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport assets from '../lib/AssetManager'\r\nimport ContextualObject from './ContextualObject'\r\n\r\nconst cactusGltfKey = assets.queue({ url: 'models/cactus_01.glb' })\r\n\r\nexport default class Cactus extends ContextualObject {\r\n  static className = 'Cactus'\r\n  static distributionOptions = { ground: 1 }\r\n  static labels = ['vegetation', 'cactus']\r\n  static baseDensity = 0.015\r\n  static randomAngle = new THREE.Vector3(4, 180, 4)\r\n  static baseHeight = 5\r\n\r\n  constructor(webgl, options) {\r\n    super(webgl, options)\r\n\r\n    this.type = 'Cactus'\r\n\r\n    const cactusGltf = assets.get(cactusGltfKey)\r\n    const cactus = cactusGltf.scene.clone()\r\n\r\n    cactus.traverse((child) => {\r\n      if (child.isMesh) {\r\n        child.material = child.material.clone()\r\n        child.material.color.r += (this.rng() - 0.5) * 0.1\r\n        child.material.color.g += (this.rng() - 0.5) * 0.1\r\n        child.material.color.b += (this.rng() - 0.5) * 0.1\r\n        child.castShadow = true\r\n        child.receiveShadow = true\r\n      }\r\n    })\r\n\r\n    const scaleModifier = (this.rng() - 0.5) * this.constructor.sizeVariation\r\n    this.scale.x += scaleModifier\r\n    this.scale.y += scaleModifier\r\n    this.scale.z += scaleModifier\r\n\r\n    this.add(cactus)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport ContextualObject from './ContextualObject'\r\n\r\nexport default class Rock extends ContextualObject {\r\n  static className = 'Rock'\r\n  static distributionOptions = { shoreline: 1, ground: 0.2 }\r\n  static labels = ['rock']\r\n  static baseDensity = 0.1\r\n  static randomAngle = new THREE.Vector3(15, 90, 15)\r\n  static baseSize = 1\r\n  static allowUnderwater = true\r\n\r\n  constructor(webgl, options) {\r\n    super(webgl, options)\r\n\r\n    this.type = 'Rock'\r\n\r\n    this.size =\r\n      this.constructor.baseSize +\r\n      (this.rng() - 0.5) * this.constructor.baseSize * this.constructor.sizeVariation\r\n\r\n    const geometry = new THREE.SphereGeometry(this.size, 4, 4)\r\n    const color = new THREE.Color(0.4, 0.36, 0.32)\r\n    if (this.options.terrainColor !== null) {\r\n      color.lerp(this.options.terrainColor, 0.5)\r\n    }\r\n    const roughness = this.options.isUnderwater === true ? 0.4 : 0.6\r\n    this.addMesh(geometry, { color: color, roughness: roughness }, 0.05)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport ContextualObject from './ContextualObject'\r\n\r\nexport default class Tree extends ContextualObject {\r\n  static className = 'Tree'\r\n  static distributionOptions = { ground: 1 }\r\n  static labels = ['vegetation', 'tree']\r\n  static baseDensity = 0.025\r\n  static randomAngle = new THREE.Vector3(4, 0, 4)\r\n  static baseHeight = 7\r\n\r\n  constructor(webgl, options) {\r\n    super(webgl, options)\r\n\r\n    this.type = 'Tree'\r\n\r\n    this.height =\r\n      this.constructor.baseHeight +\r\n      (this.rng() - 0.5) * this.constructor.baseHeight * this.constructor.sizeVariation\r\n\r\n    // Foliage\r\n    const trunkVerticalOffset = 0.1 + this.rng() * 0.1\r\n    let geometry = new THREE.CylinderGeometry(0.01, this.height * 0.25, this.height, 32, 4, false)\r\n    geometry.translate(0, this.height * (0.5 + trunkVerticalOffset), 0)\r\n\r\n    let color = new THREE.Color(0.15, 0.24, 0.12)\r\n    this.addMesh(geometry, { color: color }, 0.05)\r\n\r\n    // Trunk\r\n    const trunkWidth = this.height * 0.05\r\n    geometry = new THREE.CylinderGeometry(trunkWidth, trunkWidth, this.height / 4, 32, 1, true)\r\n    geometry.translate(0, (this.height * trunkVerticalOffset) / 2, 0)\r\n\r\n    color = new THREE.Color(0.28, 0.21, 0.12)\r\n    this.addMesh(geometry, { color: color })\r\n  }\r\n}\r\n","import { Color } from 'three'\r\nimport Building from './Building'\r\nimport Cactus from './Cactus'\r\nimport Rock from './Rock'\r\nimport Tree from './Tree'\r\n\r\nexport const BIOMES = {\r\n  temperate: {\r\n    assets: [Building, Tree, Rock],\r\n    terrain: {\r\n      ground: new Color(0.19, 0.35, 0.11),\r\n      shoreline: new Color(0.41, 0.31, 0.15),\r\n      cliff: new Color(0.28, 0.31, 0.29),\r\n      underwater: new Color(0.05, 0.08, 0.08),\r\n      side: new Color(0.42, 0.37, 0.26),\r\n    },\r\n    water: { color: new Color(0.05, 0.06, 0.04), opacity: 0.83 },\r\n  },\r\n  desert: {\r\n    assets: [Cactus, Rock],\r\n    terrain: {\r\n      ground: new Color(0.44, 0.24, 0.14),\r\n      shoreline: new Color(0.56, 0.37, 0.24),\r\n      cliff: new Color(0.34, 0.19, 0.12),\r\n      underwater: new Color(0.05, 0.08, 0.08),\r\n      side: new Color(0.41, 0.28, 0.21),\r\n    },\r\n    water: { color: new Color(0.08, 0.15, 0.11), opacity: 0.75 },\r\n  },\r\n  arctic: {\r\n    assets: [Tree, Rock],\r\n    terrain: {\r\n      ground: new Color(0.82, 0.84, 0.88),\r\n      shoreline: new Color(0.55, 0.51, 0.47),\r\n      cliff: new Color(0.24, 0.26, 0.26),\r\n      underwater: new Color(0.05, 0.08, 0.08),\r\n      side: new Color(0.31, 0.24, 0.18),\r\n    },\r\n    water: { color: new Color(0.04, 0.05, 0.03), opacity: 0.81 },\r\n  },\r\n}\r\n","import * as THREE from 'three'\r\n\r\nconst MIN_QUAD_SIZE = 2\r\n\r\nexport default class Quad {\r\n  constructor(webgl, bounds) {\r\n    this.webgl = webgl\r\n\r\n    this.bounds = bounds\r\n    this.boundsSize = new THREE.Vector2(0, 0)\r\n    this.bounds.getSize(this.boundsSize)\r\n\r\n    this.labels = {}\r\n    this.color = null\r\n\r\n    this.topLeft = null\r\n    this.topRight = null\r\n    this.bottomLeft = null\r\n    this.bottomRight = null\r\n  }\r\n\r\n  isSmallestAllowedSize() {\r\n    return this.boundsSize.x <= MIN_QUAD_SIZE && this.boundsSize.y <= MIN_QUAD_SIZE\r\n  }\r\n\r\n  setColor(color, position) {\r\n    const point = this.getPoint(position)\r\n    if (this.bounds.containsPoint(point) === false) {\r\n      console.warn(`setColor: Bounds did not contain position [${position.x}, ${position.y}]!`)\r\n      return\r\n    }\r\n\r\n    if (this.isSmallestAllowedSize() === true) {\r\n      this.color = color\r\n      return\r\n    }\r\n\r\n    const halfX = (this.bounds.min.x + this.bounds.max.x) / 2,\r\n      halfY = (this.bounds.min.y + this.bounds.max.y) / 2\r\n\r\n    if (halfX >= point.x) {\r\n      // Top left\r\n      if (halfY >= point.y) {\r\n        if (this.topLeft === null) {\r\n          this.topLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min,\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5)\r\n            )\r\n          )\r\n        }\r\n        this.topLeft.setColor(color, point)\r\n      }\r\n      // Bottom left\r\n      else {\r\n        if (this.bottomLeft === null) {\r\n          this.bottomLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2(this.bounds.min.x, (this.bounds.min.y + this.bounds.max.y) / 2),\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.max.y)\r\n            )\r\n          )\r\n        }\r\n        this.bottomLeft.setColor(color, point)\r\n      }\r\n    } else {\r\n      // Top right\r\n      if (halfY >= point.y) {\r\n        if (this.topRight === null) {\r\n          this.topRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.min.y),\r\n              new THREE.Vector2(this.bounds.max.x, (this.bounds.min.y + this.bounds.max.y) / 2)\r\n            )\r\n          )\r\n        }\r\n        this.topRight.setColor(color, point)\r\n      }\r\n      // Bottom right\r\n      else {\r\n        if (this.bottomRight === null) {\r\n          this.bottomRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5),\r\n              this.bounds.max\r\n            )\r\n          )\r\n        }\r\n        this.bottomRight.setColor(color, point)\r\n      }\r\n    }\r\n  }\r\n\r\n  getColor(position) {\r\n    const point = this.getPoint(position)\r\n    if (this.bounds.containsPoint(point) === true) {\r\n      if (this.isSmallestAllowedSize() === true) {\r\n        return this.color\r\n      }\r\n      const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n      for (const quad of quads) {\r\n        if (quad !== null && quad.bounds.containsPoint(point) === true) {\r\n          return quad.getColor(point)\r\n        }\r\n      }\r\n    } else {\r\n      console.warn(`getColor: Bounds did not contain position [${point.x}, ${point.y}]!`)\r\n    }\r\n\r\n    if (window.DEBUG) {\r\n      this.drawDebug(0xff00ff)\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  getAverageColor(position) {\r\n    // TODO: Make this recursive (fake mip-mapping with a \"mip level\" parameter)?\r\n    const point = this.getPoint(position)\r\n    const baseColor = this.getColor(point)\r\n    if (baseColor === null) {\r\n      return null\r\n    }\r\n\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0,\r\n      numSamples = 0\r\n\r\n    const sample = [-1, 0, 1]\r\n    for (const x of sample) {\r\n      for (const y of sample) {\r\n        let color = baseColor\r\n        if (x != 0 && y != 0) {\r\n          const tap = new THREE.Vector2(point.x + MIN_QUAD_SIZE * x, point.y + MIN_QUAD_SIZE * y)\r\n          if (this.bounds.containsPoint(tap) === true) {\r\n            color = this.getColor(tap)\r\n          }\r\n          if (color === null) {\r\n            color = baseColor\r\n          }\r\n        }\r\n        r += color.r\r\n        g += color.g\r\n        b += color.b\r\n        numSamples++\r\n      }\r\n    }\r\n\r\n    return new THREE.Color(\r\n      (baseColor.r + r) / numSamples,\r\n      (baseColor.g + g) / numSamples,\r\n      (baseColor.b + b) / numSamples\r\n    )\r\n  }\r\n\r\n  addLabels(labels, position) {\r\n    const point = this.getPoint(position)\r\n\r\n    if (this.bounds.containsPoint(point) === false) {\r\n      console.warn(`addLabels: Bounds did not contain position [${point.x}, ${point.y}]!`)\r\n      return\r\n    }\r\n\r\n    for (const label of labels) {\r\n      if (label in this.labels) {\r\n        this.labels[label] += 1\r\n      } else {\r\n        this.labels[label] = 1\r\n      }\r\n    }\r\n\r\n    if (this.isSmallestAllowedSize()) {\r\n      return\r\n    }\r\n\r\n    const halfX = (this.bounds.min.x + this.bounds.max.x) / 2,\r\n      halfY = (this.bounds.min.y + this.bounds.max.y) / 2\r\n\r\n    if (halfX >= point.x) {\r\n      // Top left\r\n      if (halfY >= point.y) {\r\n        if (this.topLeft === null) {\r\n          this.topLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min,\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5)\r\n            )\r\n          )\r\n        }\r\n        this.topLeft.addLabels(labels, point)\r\n      }\r\n      // Bottom left\r\n      else {\r\n        if (this.bottomLeft === null) {\r\n          this.bottomLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2(this.bounds.min.x, (this.bounds.min.y + this.bounds.max.y) / 2),\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.max.y)\r\n            )\r\n          )\r\n        }\r\n        this.bottomLeft.addLabels(labels, point)\r\n      }\r\n    } else {\r\n      // Top right\r\n      if (halfY >= point.y) {\r\n        if (this.topRight === null) {\r\n          this.topRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.min.y),\r\n              new THREE.Vector2(this.bounds.max.x, (this.bounds.min.y + this.bounds.max.y) / 2)\r\n            )\r\n          )\r\n        }\r\n        this.topRight.addLabels(labels, point)\r\n      }\r\n      // Bottom right\r\n      else {\r\n        if (this.bottomRight === null) {\r\n          this.bottomRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5),\r\n              this.bounds.max\r\n            )\r\n          )\r\n        }\r\n        this.bottomRight.addLabels(labels, point)\r\n      }\r\n    }\r\n  }\r\n\r\n  findQuadWithMinLabelDensity(label, minDensity) {\r\n    let density = this.getLabelDensity(label)\r\n    if (density <= 0) {\r\n      return null\r\n    }\r\n    if (density >= minDensity) {\r\n      return this\r\n    }\r\n\r\n    if (label in this.labels) {\r\n      let bestQuad = null,\r\n        bestDensity = 0,\r\n        quadDensity = 0\r\n      const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n      quads.forEach((quad) => {\r\n        if (quad !== null) {\r\n          quadDensity = quad.getLabelDensity(label)\r\n          if (quadDensity > bestDensity) {\r\n            bestQuad = quad\r\n            bestDensity = quadDensity\r\n          }\r\n        }\r\n      })\r\n      return bestQuad.findQuadWithMinLabelDensity(label, minDensity)\r\n    }\r\n    return null\r\n  }\r\n\r\n  findQuadWithMaxLabelDensity(label, maxDensity) {\r\n    let density = this.getLabelDensity(label)\r\n    if (density <= maxDensity) {\r\n      console.log(`Found quad with density ${density} for ${label}`)\r\n      return this\r\n    }\r\n    console.log(`This one had ${density} for ${label}, looking in children`)\r\n\r\n    if (label in this.labels) {\r\n      let bestQuad = null,\r\n        bestDensity = maxDensity,\r\n        quadDensity = 0\r\n      const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n      quads.forEach((quad) => {\r\n        if (quad !== null) {\r\n          quadDensity = quad.getLabelDensity(label)\r\n          if (quadDensity < bestDensity) {\r\n            bestQuad = quad\r\n            bestDensity = quadDensity\r\n          }\r\n        }\r\n      })\r\n      return bestQuad.findQuadWithMaxLabelDensity(label, maxDensity)\r\n    }\r\n    return null\r\n  }\r\n\r\n  getLabelDensity(label) {\r\n    if (label in this.labels === true) {\r\n      return this.labels[label] / (this.boundsSize.x * this.boundsSize.y) // TODO: Divide by ratio of 1x1m\r\n    }\r\n    return 0\r\n  }\r\n\r\n  hasLabels(labels, requireAll = false) {\r\n    for (const label of labels) {\r\n      const hasLabel = label in this.labels === true\r\n      if (requireAll === true && hasLabel === false) {\r\n        return false\r\n      } else if (requireAll === false && hasLabel === true) {\r\n        return true\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  positionHasLabels(position, labels) {\r\n    if (Array.isArray(labels) === false) {\r\n      return false\r\n    }\r\n\r\n    let point = this.getPoint(position)\r\n\r\n    if (this.bounds.containsPoint(point) === false || this.hasLabels(labels) === false) {\r\n      return false\r\n    }\r\n\r\n    const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n    for (const quad of quads) {\r\n      if (quad !== null && quad.bounds.containsPoint(point)) {\r\n        return quad.positionHasLabels(point, labels)\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  getLabels(position) {\r\n    const point = this.getPoint(position)\r\n\r\n    if (this.bounds.containsPoint(point) === false) {\r\n      return []\r\n    }\r\n\r\n    if (this.isSmallestAllowedSize() === true) {\r\n      return this.labels\r\n    }\r\n\r\n    const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n    for (const quad of quads) {\r\n      if (quad !== null && quad.bounds.containsPoint(point)) {\r\n        return quad.getLabels(point)\r\n      }\r\n    }\r\n\r\n    return this.labels\r\n  }\r\n\r\n  getPoint(position) {\r\n    if (hasOwnProperty.call(position, 'z')) {\r\n      return new THREE.Vector2(position.x, position.z)\r\n    }\r\n    return position\r\n  }\r\n\r\n  drawDebug(color) {\r\n    const box = new THREE.Box3(),\r\n      center = new THREE.Vector3(\r\n        (this.bounds.min.x + this.bounds.max.x) / 2,\r\n        10,\r\n        (this.bounds.min.y + this.bounds.max.y) / 2\r\n      ),\r\n      end = new THREE.Vector3(this.boundsSize.x, 1, this.boundsSize.y)\r\n    box.setFromCenterAndSize(center, end)\r\n    const helper = new THREE.Box3Helper(box, color)\r\n    this.webgl.scene.add(helper)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport default function generateSideMeshes(\r\n  group,\r\n  planeGeometry,\r\n  material,\r\n  xSegments,\r\n  zSegments,\r\n  lowestPoint\r\n) {\r\n  const topVertices = planeGeometry.getAttribute('position').array\r\n  planeGeometry.computeBoundingBox()\r\n  let bounds = new THREE.Vector3(0, 0, 0)\r\n  planeGeometry.boundingBox.getSize(bounds)\r\n  let newHeight = 0\r\n\r\n  // +X, +Z, -X, -Z\r\n  for (let side = 0; side < 4; side++) {\r\n    const xSide = side % 2 == 1\r\n    const sideGeometry = new THREE.PlaneBufferGeometry(\r\n      xSide ? bounds.x : bounds.z,\r\n      xSide ? bounds.z : bounds.x,\r\n      xSide ? xSegments : zSegments,\r\n      1\r\n    )\r\n    if (xSide) {\r\n      sideGeometry.translate(0, 0, bounds.z / 2)\r\n    } else {\r\n      sideGeometry.rotateY(-Math.PI / 2)\r\n      sideGeometry.translate(-bounds.x / 2, 0, 0)\r\n    }\r\n\r\n    const vertices = sideGeometry.getAttribute('position').array,\r\n      stride = xSide ? xSegments : zSegments\r\n    for (let i = 0, l = vertices.length / 3 / 2; i < l; i++) {\r\n      // Top row, match plane geometry\r\n      if (xSide) {\r\n        if (side < 2) {\r\n          newHeight = topVertices[(i + (xSegments + 1) * zSegments) * 3 + 1]\r\n        } else {\r\n          newHeight = topVertices[i * 3 + 1]\r\n        }\r\n      } else {\r\n        if (side < 2) {\r\n          newHeight = topVertices[i * (xSegments + 1) * 3 + 1]\r\n        } else {\r\n          newHeight = topVertices[(i * (xSegments + 1) + xSegments) * 3 + 1]\r\n        }\r\n      }\r\n      vertices[i * 3 + 1] = newHeight\r\n\r\n      // Bottom row, lowestPoint\r\n      vertices[(i + stride + 1) * 3 + 1] = lowestPoint\r\n    }\r\n\r\n    const mesh = new THREE.Mesh(sideGeometry, material)\r\n    if (side > 1) {\r\n      if (xSide) {\r\n        mesh.scale.z = -1\r\n      } else {\r\n        mesh.scale.x = -1\r\n      }\r\n    }\r\n\r\n    mesh.castShadow = true\r\n    mesh.receiveShadow = true\r\n\r\n    group.add(mesh)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport { ImprovedNoise } from 'three/examples/jsm/math/ImprovedNoise.js'\r\nimport generateSideMeshes from '../lib/meshUtils'\r\nimport { lerp } from 'canvas-sketch-util/math'\r\nimport { BIOMES } from './Biomes'\r\n\r\nexport default class Terrain extends THREE.Group {\r\n  #bottomPadding = 2\r\n\r\n  constructor(webgl, options) {\r\n    super(options)\r\n\r\n    this.type = 'Terrain'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    this.generateHeight(this.options.bounds.x, this.options.bounds.z)\r\n\r\n    const geometry = new THREE.PlaneBufferGeometry(\r\n      this.options.bounds.x,\r\n      this.options.bounds.z,\r\n      this.options.bounds.x - 1,\r\n      this.options.bounds.z - 1\r\n    )\r\n    geometry.rotateX(-Math.PI / 2)\r\n\r\n    let vertices = geometry.getAttribute('position').array\r\n    for (let i = 0, l = vertices.length / 3; i < l; i++) {\r\n      vertices[i * 3 + 1] = this.heightData[i]\r\n    }\r\n\r\n    if (this.options.water.enabled === true) {\r\n      this.waterCurve = this.getWaterCurve(geometry)\r\n      this.modifyGeometryForWater(geometry)\r\n    }\r\n    geometry.computeVertexNormals()\r\n\r\n    const texture = new THREE.CanvasTexture(\r\n      this.generateTexture(geometry, this.options.bounds.x, this.options.bounds.z)\r\n    )\r\n    texture.wrapS = THREE.ClampToEdgeWrapping\r\n    texture.wrapT = THREE.ClampToEdgeWrapping\r\n\r\n    const material = new THREE.MeshPhysicalMaterial({\r\n      map: texture,\r\n      roughness: 0.7,\r\n    })\r\n\r\n    this.mesh = new THREE.Mesh(geometry, material)\r\n\r\n    this.mesh.castShadow = true\r\n    this.mesh.receiveShadow = true\r\n\r\n    this.add(this.mesh)\r\n\r\n    const sideMaterial = new THREE.MeshPhysicalMaterial({\r\n      color: BIOMES[this.options.biome.name].terrain.side,\r\n      roughness: 0.6,\r\n    })\r\n    generateSideMeshes(\r\n      this,\r\n      geometry,\r\n      sideMaterial,\r\n      this.options.bounds.x - 1,\r\n      this.options.bounds.z - 1,\r\n      -this.options.bounds.y / 2\r\n    )\r\n  }\r\n\r\n  generateHeight(width, height) {\r\n    let size = width * height,\r\n      perlin = new ImprovedNoise(),\r\n      quality = 1,\r\n      seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed),\r\n      z = rng()\r\n\r\n    this.heightData = new Float32Array(size)\r\n\r\n    for (let j = 0; j < 4; j++) {\r\n      for (let i = 0; i < size; i++) {\r\n        let x = i % width,\r\n          y = ~~(i / width)\r\n        this.heightData[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75)\r\n      }\r\n\r\n      quality *= 5\r\n    }\r\n\r\n    // Normalize height\r\n    let min = 10000,\r\n      max = -10000\r\n    for (let i = 0; i < size; i++) {\r\n      if (this.heightData[i] < min) {\r\n        min = this.heightData[i]\r\n      }\r\n      if (this.heightData[i] > max) {\r\n        max = this.heightData[i]\r\n      }\r\n    }\r\n\r\n    const heightScale = (this.options.bounds.y - this.#bottomPadding - 2) / this.options.bounds.y,\r\n      multiplier = this.options.bounds.y / max\r\n    for (let i = 0; i < size; i++) {\r\n      this.heightData[i] =\r\n        ((this.heightData[i] - min) * multiplier -\r\n          this.options.bounds.y * 0.5 +\r\n          this.#bottomPadding) *\r\n        heightScale\r\n    }\r\n  }\r\n\r\n  generateTexture(geometry, width, height) {\r\n    let canvas, context, image, imageData\r\n\r\n    canvas = document.createElement('canvas')\r\n    canvas.width = width\r\n    canvas.height = height\r\n\r\n    context = canvas.getContext('2d')\r\n    context.fillStyle = '#000'\r\n    context.fillRect(0, 0, width, height)\r\n\r\n    image = context.getImageData(0, 0, canvas.width, canvas.height)\r\n    imageData = image.data\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed)\r\n\r\n    const halfHeight = this.options.bounds.y / 2,\r\n      waterLevel = lerp(-halfHeight, halfHeight, this.options.water.level),\r\n      vertices = geometry.getAttribute('position').array,\r\n      normals = geometry.getAttribute('normal').array,\r\n      ground = BIOMES[this.options.biome.name].terrain.ground\r\n        .clone()\r\n        .add(new THREE.Color(rng() * 0.05, rng() * 0.05, rng() * 0.05)),\r\n      shoreline = BIOMES[this.options.biome.name].terrain.shoreline\r\n        .clone()\r\n        .add(new THREE.Color(rng() * 0.05, rng() * 0.05, rng() * 0.05)),\r\n      cliff = BIOMES[this.options.biome.name].terrain.cliff\r\n        .clone()\r\n        .add(new THREE.Color(rng() * 0.05, rng() * 0.05, rng() * 0.05)),\r\n      underwater = BIOMES[this.options.biome.name].terrain.underwater\r\n        .clone()\r\n        .add(new THREE.Color(rng() * 0.05, rng() * 0.05, rng() * 0.05)),\r\n      upVector = new THREE.Vector3(0, 1, 0),\r\n      minCliffSteepness = 0.15,\r\n      maxCliffSteepness = 0.2\r\n\r\n    for (let i = 0, l = vertices.length / 3; i < l; i++) {\r\n      let color = ground.clone(),\r\n        labels = ['ground']\r\n      if (this.options.water.enabled) {\r\n        const height = vertices[i * 3 + 1]\r\n        if (height < waterLevel) {\r\n          color = underwater.clone()\r\n          labels = ['shoreline']\r\n        }\r\n        if (this.options.water.shoreline.enabled === true) {\r\n          const sandMax = this.options.water.shoreline.width + this.options.water.shoreline.falloff\r\n          if (height <= waterLevel - this.options.water.shoreline.width) {\r\n            // UNDERWATER TO SHORELINE\r\n            const t = Math.clamp(height / (waterLevel - height), 0, 1)\r\n            color.lerp(shoreline, t)\r\n          } else if (sandMax > 0.001) {\r\n            if (height <= waterLevel + this.options.water.shoreline.width) {\r\n              // SOLID SHORELINE\r\n              color = shoreline.clone()\r\n              labels = ['shoreline']\r\n            } else if (this.options.water.shoreline.falloff > 0.001) {\r\n              // SHORELINE TO GROUND\r\n              const t = Math.clamp(\r\n                (height - waterLevel - this.options.water.shoreline.width) /\r\n                  this.options.water.shoreline.falloff,\r\n                0,\r\n                1\r\n              )\r\n              color = shoreline.clone().lerp(ground, t)\r\n              if (t <= 0.33) {\r\n                labels = ['shoreline']\r\n              } else if (t <= 0.67) {\r\n                labels.push('shoreline')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const normal = new THREE.Vector3(normals[i * 3], normals[i * 3 + 1], normals[i * 3 + 2]),\r\n        cliffSteepness = 1 - Math.abs(normal.dot(upVector))\r\n      // 1 = vertical, 0 = horizontal\r\n      if (cliffSteepness > minCliffSteepness) {\r\n        const blend = Math.min(\r\n          1,\r\n          (cliffSteepness - minCliffSteepness) / (maxCliffSteepness - minCliffSteepness)\r\n        )\r\n        color.lerp(cliff, blend)\r\n        if (blend >= 0.67) {\r\n          labels = ['cliff']\r\n        } else if (blend > 0.33) {\r\n          labels.push('cliff')\r\n        }\r\n      }\r\n\r\n      if (height < waterLevel) {\r\n        labels.push = ['water']\r\n      }\r\n\r\n      imageData[i * 4] = color.r * 255 * (1 - rng() * 0.1)\r\n      imageData[i * 4 + 1] = color.g * 255 * (1 - rng() * 0.1)\r\n      imageData[i * 4 + 2] = color.b * 255 * (1 - rng() * 0.1)\r\n\r\n      // Add terrain context labels\r\n      const position = new THREE.Vector2(vertices[i * 3], vertices[i * 3 + 2])\r\n      this.options.contextQuadtree.addLabels(labels, position)\r\n      this.options.contextQuadtree.setColor(color, position)\r\n    }\r\n\r\n    context.putImageData(image, 0, 0)\r\n\r\n    const canvasScaled = document.createElement('canvas')\r\n    canvasScaled.width = width * 4\r\n    canvasScaled.height = height * 4\r\n\r\n    context = canvasScaled.getContext('2d')\r\n    context.scale(4, 4)\r\n    context.drawImage(canvas, 0, 0)\r\n\r\n    image = context.getImageData(0, 0, canvasScaled.width, canvasScaled.height)\r\n    imageData = image.data\r\n\r\n    // Add some noise\r\n    for (let i = 0, l = imageData.length; i < l; i += 4) {\r\n      let v = ~~((rng() - 0.5) * 8)\r\n\r\n      imageData[i] += v\r\n      imageData[i + 1] += v\r\n      imageData[i + 2] += v\r\n    }\r\n\r\n    context.putImageData(image, 0, 0)\r\n\r\n    return canvasScaled\r\n  }\r\n\r\n  modifyGeometryForWater(geometry) {\r\n    const points = this.waterCurve.getPoints(Math.max(1, this.options.water.meander) * 10)\r\n    let vertices = geometry.getAttribute('position').array\r\n    let test = new THREE.Vector3(0, 0, 0),\r\n      target = new THREE.Vector3(0, 0, 0)\r\n    for (let i = 0, l = vertices.length / 3; i < l; i++) {\r\n      const vertex = new THREE.Vector3(vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2])\r\n      const vertex2D = new THREE.Vector2(vertex.x, vertex.z)\r\n      let closest = 100000\r\n      for (let p = 0; p < points.length - 1; p++) {\r\n        const line = new THREE.Line3(points[p], points[p + 1])\r\n        line.closestPointToPoint(vertex, true, test)\r\n        let distance = vertex2D.distanceTo(new THREE.Vector2(test.x, test.z))\r\n        if (distance < closest) {\r\n          closest = distance\r\n          target = test.clone()\r\n        }\r\n      }\r\n      const distance = vertex2D.distanceTo(new THREE.Vector2(target.x, target.z))\r\n      if (distance < this.options.water.width / 2 + this.options.water.falloff) {\r\n        vertices[i * 3 + 1] = this.getWaterVertexHeight(distance, target.y, vertices[i * 3 + 1])\r\n      }\r\n    }\r\n  }\r\n\r\n  getWaterVertexHeight(distance, target, current) {\r\n    const t = Math.clamp(\r\n      (distance - this.options.water.width / 2) / this.options.water.falloff,\r\n      0,\r\n      1\r\n    )\r\n    const calculated = lerp(target - this.options.water.depth, current, t)\r\n    const lowest = -this.options.bounds.y / 2 + 1\r\n    return Math.max(lowest, calculated)\r\n  }\r\n\r\n  getRandomPointOnTerrain() {\r\n    const raycaster = new THREE.Raycaster()\r\n    let position = new THREE.Vector3(this.rng(), 0, this.rng())\r\n    position.multiply(this.options.bounds)\r\n    position.y = this.options.bounds.y\r\n    position.sub(new THREE.Vector3(0.5, 0.5, 0.5).multiply(this.options.bounds))\r\n    raycaster.set(position, new THREE.Vector3(0, -1, 0))\r\n    const intersects = raycaster.intersectObject(this.mesh)\r\n    if (intersects.length > 0) {\r\n      return { hit: true, position: intersects[0].point }\r\n    }\r\n    return { hit: false, position: null }\r\n  }\r\n\r\n  getWaterCurve(geometry) {\r\n    let points = [new THREE.Vector3(0, 100000, 0), new THREE.Vector3(0, 100000, 0)],\r\n      tempVec = new THREE.Vector3()\r\n    const vertices = geometry.getAttribute('position').array,\r\n      minDist = Math.min(this.options.bounds.x, this.options.bounds.z) / 4\r\n    for (let i = 0; i < vertices.length / 3; i++) {\r\n      for (let j = 0; j < points.length; j++) {\r\n        tempVec.x = vertices[i * 3]\r\n        tempVec.y = vertices[i * 3 + 1]\r\n        tempVec.z = vertices[i * 3 + 2]\r\n        if (tempVec.y < points[j].y) {\r\n          if (j == 0 || tempVec.distanceTo(points[j - 1]) > minDist) {\r\n            points[j].x = tempVec.x\r\n            points[j].y = tempVec.y\r\n            points[j].z = tempVec.z\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const xTest = this.options.bounds.x / 2,\r\n      zTest = this.options.bounds.z / 2,\r\n      maxDist = Math.max(this.options.bounds.x, this.options.bounds.y),\r\n      direction = points[1].clone().sub(points[0]).normalize(),\r\n      offset = direction.clone().multiplyScalar(maxDist)\r\n    let line = new THREE.Line3(points[0].clone().add(offset), points[0].clone().sub(offset))\r\n\r\n    let meander = this.options.water.meander\r\n    if (Math.abs(direction.dot(new THREE.Vector3(1, 0, 0))) >= 0.5) {\r\n      meander *= xTest / 20\r\n    } else {\r\n      meander *= zTest / 20\r\n    }\r\n    meander = Math.ceil(meander)\r\n\r\n    let xPlane = new THREE.Plane(new THREE.Vector3(0, 0, 1), zTest)\r\n    let zPlane = new THREE.Plane(new THREE.Vector3(1, 0, 0), xTest)\r\n\r\n    let endPoint = new THREE.Vector3(0, 0, 0)\r\n    if (\r\n      xPlane.intersectLine(line, endPoint) !== undefined ||\r\n      zPlane.intersectLine(line, endPoint) !== undefined\r\n    ) {\r\n      points[1] = endPoint\r\n    }\r\n\r\n    xPlane = new THREE.Plane(new THREE.Vector3(0, 0, -1), zTest)\r\n    zPlane = new THREE.Plane(new THREE.Vector3(-1, 0, 0), xTest)\r\n\r\n    let startPoint = new THREE.Vector3(0, 0, 0)\r\n    if (\r\n      xPlane.intersectLine(line, startPoint) !== undefined ||\r\n      zPlane.intersectLine(line, startPoint) !== undefined\r\n    ) {\r\n      points[0] = startPoint\r\n    }\r\n\r\n    // Flatten the water\r\n    if (points[0].y > points[1].y) {\r\n      points[0].y = lerp(points[0].y, points[1].y, 0.75)\r\n    } else {\r\n      points[1].y = lerp(points[1].y, points[0].y, 0.75)\r\n    }\r\n\r\n    // Don't let the curve go below the floor\r\n    const lowest = -this.options.bounds.y / 2 + 1\r\n    for (let p = 0; p < points.length; p++) {\r\n      points[p].y = Math.max(lowest, points[p].y)\r\n    }\r\n\r\n    // Add some meandering points\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed),\r\n      finalPoints = [points[0], points[1]],\r\n      meanderDistance = 1.0 / (meander + 1)\r\n    line = new THREE.Line3(points[0], points[1])\r\n    for (let i = 0; i < meander; i++) {\r\n      let newVec = new THREE.Vector3()\r\n      line.at((i + 1) * meanderDistance, newVec)\r\n      newVec.x += ((rng() - 0.5) * maxDist) / 4\r\n      newVec.z += ((rng() - 0.5) * maxDist) / 4\r\n      finalPoints.splice(i + 1, 0, newVec)\r\n    }\r\n\r\n    return new THREE.CatmullRomCurve3(finalPoints)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport generateSideMeshes from '../lib/meshUtils'\r\nimport { lerp } from 'canvas-sketch-util/math'\r\nimport { BIOMES } from './Biomes'\r\n\r\nexport default class Water extends THREE.Group {\r\n  constructor(webgl, options, waterCurve) {\r\n    super(options)\r\n\r\n    this.type = 'WaterMesh'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n    this.waterCurve = waterCurve\r\n\r\n    if (this.options.water.level <= 0.001) {\r\n      return\r\n    }\r\n\r\n    const seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.seed)\r\n    const waterOptions = BIOMES[this.options.biome.name].water\r\n    const color = waterOptions.color\r\n        .clone()\r\n        .add(new THREE.Color(this.rng() * 0.05, this.rng() * 0.05, this.rng() * 0.05)),\r\n      material = new THREE.MeshPhysicalMaterial({\r\n        color: color,\r\n        transparent: true,\r\n        opacity: waterOptions.opacity,\r\n        roughness: 0.01,\r\n        reflectivity: 1,\r\n      }),\r\n      geometry = this.generateMesh()\r\n\r\n    this.mesh = new THREE.Mesh(geometry, material)\r\n\r\n    this.mesh.castShadow = false\r\n    this.mesh.receiveShadow = false\r\n\r\n    this.add(this.mesh)\r\n\r\n    generateSideMeshes(this, geometry, material, 1, 1, -this.options.bounds.y / 2)\r\n  }\r\n\r\n  generateMesh() {\r\n    const geometry = new THREE.PlaneBufferGeometry(\r\n      this.options.bounds.x,\r\n      this.options.bounds.z,\r\n      1,\r\n      1\r\n    )\r\n    geometry.rotateX(-Math.PI / 2)\r\n\r\n    const points = this.waterCurve.getPoints(Math.max(1, this.options.water.meander) * 10)\r\n    const halfHeight = this.options.bounds.y / 2\r\n    let vertices = geometry.getAttribute('position').array\r\n    for (let i = 0, j = 0, l = vertices.length / 3; i < l; i++, j += 3) {\r\n      vertices[j] *= 0.999\r\n      vertices[j + 1] = lerp(-halfHeight, halfHeight, this.options.water.level)\r\n      vertices[j + 2] *= 0.999\r\n    }\r\n\r\n    return geometry\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport assets from '../lib/AssetManager'\r\nimport { BIOMES } from './Biomes'\r\nimport ContextualObject from './ContextualObject'\r\nimport Quad from './ContextQuadtree'\r\nimport Terrain from './Terrain'\r\nimport Water from './Water'\r\n\r\nconst hdriKey = assets.queue({\r\n  url: 'textures/equirectangular/cloud_layers_1k.hdr',\r\n})\r\n\r\nexport class Diorama extends THREE.Group {\r\n  constructor(webgl, options) {\r\n    const start = Date.now()\r\n    super(options)\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    this.type = 'Diorama'\r\n\r\n    if (this.options.diorama.seed === undefined || this.options.diorama.seed === null) {\r\n      this.options.diorama.seed = 0\r\n    }\r\n\r\n    console.log(\r\n      `Creating new diorama (seed=${options.diorama.seed}, bounds=[${options.diorama.bounds.x}, ${options.diorama.bounds.y}, ${options.diorama.bounds.z}])`\r\n    )\r\n\r\n    const halfX = this.options.diorama.bounds.x / 2,\r\n      halfZ = this.options.diorama.bounds.z / 2\r\n    const maxSize = Math.max(halfX, halfZ)\r\n    const quadBounds = new THREE.Box2(\r\n      new THREE.Vector2(-maxSize, -maxSize),\r\n      new THREE.Vector2(maxSize, maxSize)\r\n    )\r\n    this.options.diorama.contextQuadtree = new Quad(webgl, quadBounds)\r\n\r\n    this.setupLights()\r\n\r\n    let seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.diorama.seed)\r\n\r\n    this.terrain = new Terrain(this.webgl, this.options.diorama)\r\n    this.add(this.terrain)\r\n\r\n    this.water = null\r\n    if (this.options.diorama.water.enabled === true) {\r\n      this.water = new Water(this.webgl, this.options.diorama, this.terrain.waterCurve)\r\n      this.add(this.water)\r\n\r\n      if (window.DEBUG) {\r\n        const points = this.terrain.waterCurve.getPoints(\r\n          Math.max(1, this.options.diorama.water.meander) * 10\r\n        )\r\n        const waterLineGeometry = new THREE.BufferGeometry().setFromPoints(points)\r\n        const material = new THREE.LineBasicMaterial({ color: 0xff00ff })\r\n        const waterLine = new THREE.Line(waterLineGeometry, material)\r\n        this.add(waterLine)\r\n      }\r\n    }\r\n\r\n    for (const asset of BIOMES[this.options.diorama.biome.name].assets) {\r\n      this.distributeObjects(asset)\r\n    }\r\n\r\n    this.createBase()\r\n\r\n    if (window.DEBUG) {\r\n      let geometry = new THREE.BoxGeometry(\r\n        this.options.diorama.bounds.x,\r\n        this.options.diorama.bounds.y,\r\n        this.options.diorama.bounds.z\r\n      )\r\n      let wireframe = new THREE.WireframeGeometry(geometry)\r\n\r\n      this.wireframe = new THREE.LineSegments(wireframe)\r\n      this.wireframe.material.depthTest = true\r\n      this.wireframe.material.opacity = 0.2\r\n      this.wireframe.material.transparent = true\r\n      this.add(this.wireframe)\r\n    }\r\n\r\n    const elapsed = Date.now() - start\r\n    console.log(`Generated in ${elapsed / 1000}s`)\r\n  }\r\n\r\n  update(dt, time) {}\r\n\r\n  setupLights() {\r\n    this.skylight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.8)\r\n    this.skylight.color.setHSL(0.56, 0.7, 0.6)\r\n    this.skylight.groundColor.setHSL(0.095, 0.5, 0.5)\r\n    this.skylight.position.set(0, 50, 0)\r\n    this.add(this.skylight)\r\n\r\n    const size =\r\n      Math.max(\r\n        this.options.diorama.bounds.x,\r\n        this.options.diorama.bounds.y,\r\n        this.options.diorama.bounds.z\r\n      ) / 2\r\n\r\n    this.sun = new THREE.DirectionalLight(0xffffff, 1)\r\n    this.sun.color.setHSL(0.1, 1, 0.95)\r\n    this.sun.position.set(-0.5, 1, 0.375)\r\n    this.sun.position.multiplyScalar(size)\r\n    this.sun.castShadow = true\r\n    this.sun.shadow.mapSize.width = 1024\r\n    this.sun.shadow.mapSize.height = 1024\r\n    this.sun.shadow.camera.left = -size * 1.5\r\n    this.sun.shadow.camera.right = size * 1.5\r\n    this.sun.shadow.camera.top = size * 1.5\r\n    this.sun.shadow.camera.bottom = -size * 1.5\r\n    this.sun.shadow.camera.near = 0.1\r\n    this.sun.shadow.camera.far = size * 3\r\n    this.add(this.sun)\r\n\r\n    if (window.DEBUG) {\r\n      const helper = new THREE.CameraHelper(this.sun.shadow.camera)\r\n      this.add(helper)\r\n    }\r\n\r\n    const pmremGenerator = new THREE.PMREMGenerator(this.webgl.renderer)\r\n    pmremGenerator.compileEquirectangularShader()\r\n\r\n    const scene = this.webgl.scene\r\n\r\n    const skyImage = assets.get(hdriKey)\r\n    this.webgl.scene.environment = pmremGenerator.fromEquirectangular(skyImage).texture\r\n\r\n    skyImage.dispose()\r\n    pmremGenerator.dispose()\r\n\r\n    this.webgl.renderer.toneMapping = THREE.ACESFilmicToneMapping\r\n    this.webgl.renderer.toneMappingExposure = 0.25\r\n    this.webgl.renderer.outputEncoding = THREE.sRGBEncoding\r\n  }\r\n\r\n  createBase() {\r\n    // Base\r\n    const basePadding = 4\r\n    const baseHeight = 2\r\n    const geometry = new THREE.BoxGeometry(\r\n      this.options.diorama.bounds.x + basePadding,\r\n      baseHeight,\r\n      this.options.diorama.bounds.z + basePadding\r\n    )\r\n    const material = new THREE.MeshPhysicalMaterial({\r\n      color: new THREE.Color(0.2, 0.2, 0.2),\r\n      roughness: 0.25,\r\n    })\r\n    const base = new THREE.Mesh(geometry, material)\r\n    base.translateY(-this.options.diorama.bounds.y / 2 - baseHeight / 2)\r\n    base.castShadow = true\r\n    base.receiveShadow = true\r\n    this.add(base)\r\n\r\n    // Floor plane\r\n    const floorSize = Math.max(this.options.diorama.bounds.x, this.options.diorama.bounds.z) * 2\r\n    const floorGeometry = new THREE.PlaneGeometry(floorSize, floorSize)\r\n    floorGeometry.rotateX(-Math.PI / 2)\r\n    floorGeometry.translate(0, -this.options.diorama.bounds.y / 2 - baseHeight, 0)\r\n    const floorMaterial = new THREE.ShadowMaterial({ opacity: 0.25 })\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial)\r\n    floor.receiveShadow = true\r\n    this.add(floor)\r\n  }\r\n\r\n  /**\r\n   * Distributes objects based on their contextual requirements.\r\n   * @param {ContextualObject} classToDistribute The class of Contextual Object to distribute\r\n   * @param {THREE.Mesh} onMesh Mesh to distribute objects on - if not specified, the terrain mesh is used\r\n   */\r\n  distributeObjects(classToDistribute, onMesh = undefined) {\r\n    if (onMesh === undefined) {\r\n      onMesh = this.terrain.mesh\r\n    }\r\n\r\n    const bounds = new THREE.Box3().setFromObject(onMesh),\r\n      className = classToDistribute.prototype.constructor.className\r\n\r\n    let numObjects = (bounds.max.x - bounds.min.x) * (bounds.max.z - bounds.min.z)\r\n\r\n    if (\r\n      this.options.diorama.biome.assets !== undefined &&\r\n      className in this.options.diorama.biome.assets\r\n    ) {\r\n      numObjects *= this.options.diorama.biome.assets[className]\r\n    }\r\n\r\n    if (hasOwnProperty.call(classToDistribute, 'baseDensity')) {\r\n      numObjects *= classToDistribute.baseDensity\r\n    } else {\r\n      console.warn(`Class '${className}' had no baseDensity property!`)\r\n    }\r\n\r\n    numObjects = Math.floor(numObjects)\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.diorama.seed),\r\n      raycaster = new THREE.Raycaster()\r\n\r\n    const options = { bounds: this.options.diorama.bounds }\r\n    for (let i = 0; i < numObjects; i++) {\r\n      let position = new THREE.Vector3(rng(), 0, rng())\r\n      position.multiply(new THREE.Vector3().subVectors(bounds.max, bounds.min))\r\n      position.add(new THREE.Vector3(-0.5, 1, -0.5).multiply(this.options.diorama.bounds))\r\n      raycaster.set(position, new THREE.Vector3(0, -1, 0))\r\n\r\n      const labels = this.options.diorama.contextQuadtree.getLabels(position)\r\n      if (this.meetsDistributionRequirements(classToDistribute, rng, labels) === false) {\r\n        // This location doesn't meet our object's requirements\r\n        continue\r\n      }\r\n\r\n      let intersects = raycaster.intersectObjects(this.children, true)\r\n      let rayColor = 0xff0000\r\n      if (intersects.length > 0) {\r\n        rayColor = 0x0000ff\r\n\r\n        options.isUnderwater = false\r\n        if (classToDistribute.allowUnderwater === true && this.water !== null) {\r\n          if (intersects[0].object === this.water.mesh) {\r\n            // TODO: Maybe need a bounds against water level check for if the object is *entirely* underwater?\r\n            options.isUnderwater = true\r\n            intersects[0] = intersects[1] // Skip the water hit\r\n          }\r\n        }\r\n\r\n        if (intersects[0].object === onMesh) {\r\n          rayColor = 0x00ff00\r\n          position = intersects[0].point\r\n\r\n          options.seed = this.options.diorama.seed + i\r\n          options.labels = this.options.diorama.contextQuadtree.getLabels(position)\r\n          options.terrainColor = this.options.diorama.contextQuadtree.getAverageColor(position)\r\n          const newObject = new classToDistribute(this.webgl, options)\r\n          newObject.position.set(position.x, position.y, position.z)\r\n          newObject.updateMatrixWorld()\r\n          this.add(newObject)\r\n\r\n          if (hasOwnProperty.call(classToDistribute, 'labels')) {\r\n            if (classToDistribute.labels.length > 0) {\r\n              this.options.diorama.contextQuadtree.addLabels(classToDistribute.labels, position)\r\n            } else {\r\n              console.warn(`No labels defined for class ${newObject.type}`)\r\n            }\r\n          } else {\r\n            console.warn(`Failed to find labels property on class ${newObject.type}`)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (window.DEBUG) {\r\n        const arrow = new THREE.ArrowHelper(\r\n          raycaster.ray.direction,\r\n          raycaster.ray.origin,\r\n          this.options.diorama.bounds.y * 1.5,\r\n          rayColor,\r\n          1,\r\n          0.5\r\n        )\r\n        this.add(arrow)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if a label array meets requirements set by the ContextualObject class, otherwise false\r\n   * @param {ContextualObject} objectClass The class of Contextual Object to check\r\n   * @param {seedrandom.prng} rng Seeded random number generator object\r\n   * @param {string[]} labels Array of labels representing the context to check against\r\n   * @returns Value representing if the requirements were met\r\n   */\r\n  meetsDistributionRequirements(object, rng, labels) {\r\n    for (const [key, value] of Object.entries(object.distributionOptions)) {\r\n      if (Object.keys(labels).includes(key) === true) {\r\n        if (rng() <= value) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getDefaultDioramaOptions() {\r\n  const defaultDioramaOptions = {\r\n    seed: 2655,\r\n    bounds: new THREE.Vector3(60, 16, 32),\r\n    biome: { name: Object.keys(BIOMES)[0] },\r\n    water: {\r\n      enabled: true,\r\n      level: 0.25,\r\n      depth: 1,\r\n      width: 2,\r\n      falloff: 4,\r\n      meander: 2,\r\n      shoreline: {\r\n        enabled: true,\r\n        width: 1,\r\n        falloff: 2,\r\n      },\r\n    },\r\n  }\r\n\r\n  function getAssetClassDefaults() {\r\n    const result = {}\r\n    for (const assetClass of defaultDioramaOptions.biome) {\r\n      result[assetClass.prototype.constructor.className] = 1\r\n    }\r\n    return result\r\n  }\r\n\r\n  // Load previous session settings if available\r\n  const sessionOptions = sessionStorage.getItem('dioramaOptions')\r\n  if (sessionOptions !== null) {\r\n    let parsedOptions = {}\r\n    try {\r\n      parsedOptions = JSON.parse(sessionOptions)\r\n    } catch (err) {\r\n      console.log('Error when parsing session options!')\r\n    }\r\n    Object.assign(defaultDioramaOptions, parsedOptions)\r\n  }\r\n\r\n  return defaultDioramaOptions\r\n}\r\n","import { Diorama } from '../components/Diorama'\r\nimport { BIOMES } from '../components/Biomes'\r\nimport { isEmpty } from 'lodash'\r\n\r\n/** Default ranges for option sliders */\r\nconst ranges = {\r\n  options: {\r\n    seed: { max: 10000 },\r\n  },\r\n  bounds: {\r\n    x: { min: 5, max: 80 },\r\n    y: { min: 5, max: 40 },\r\n    z: { min: 5, max: 80 },\r\n  },\r\n  water: {\r\n    level: { max: 1, step: 0.01 },\r\n    depth: { max: 10, step: 0.5 },\r\n    width: { min: 0.5, max: 20, step: 0.5 },\r\n    falloff: { min: 0.5, max: 20, step: 0.5 },\r\n    meander: { max: 5 },\r\n  },\r\n  shoreline: {\r\n    width: { max: 10, step: 0.5 },\r\n    falloff: { max: 10, step: 0.5 },\r\n  },\r\n}\r\n\r\nclass InputControl {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.field = document.createElement('div')\r\n\r\n    this.label = document.createElement('label')\r\n    this.label.innerText = toDisplayString(options.name)\r\n    this.field.appendChild(this.label)\r\n\r\n    this.input = document.createElement('input')\r\n    this.input.onchange = () => this.propertyChanged()\r\n    this.field.appendChild(this.input)\r\n\r\n    options.parent.appendChild(this.field)\r\n  }\r\n\r\n  propertyChanged() {\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  setVisibility(visible) {\r\n    this.field.style.display = visible ? 'block' : 'none'\r\n  }\r\n}\r\n\r\nclass CheckBoxControl extends InputControl {\r\n  constructor(owner, options) {\r\n    super(owner, options)\r\n\r\n    this.input.setAttribute('type', 'checkbox')\r\n    this.input.checked = options.defaultValue == true\r\n  }\r\n\r\n  getValue() {\r\n    return this.input.checked\r\n  }\r\n}\r\n\r\nclass SliderControl extends InputControl {\r\n  constructor(owner, options) {\r\n    super(owner, options)\r\n\r\n    this.input.setAttribute('type', 'range')\r\n    this.input.setAttribute('min', options.min)\r\n    this.input.setAttribute('max', options.max)\r\n    this.input.setAttribute('step', options.step)\r\n    this.input.value = options.defaultValue\r\n  }\r\n\r\n  getValue() {\r\n    return parseFloat(this.input.value)\r\n  }\r\n}\r\n\r\nclass BiomeGroup {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.biomeName = options.defaultValue.name\r\n\r\n    this.div = document.createElement('div')\r\n    this.heading = document.createElement('h' + options.depth)\r\n    this.heading.innerText = 'Biome'\r\n    this.div.appendChild(this.heading)\r\n\r\n    this.biomeSelect = document.createElement('select')\r\n    for (const biomeName of Object.keys(BIOMES)) {\r\n      const option = document.createElement('option')\r\n      option.value = biomeName\r\n      option.innerText = toDisplayString(biomeName)\r\n      if (biomeName === this.biomeName) {\r\n        option.selected = true\r\n      }\r\n      this.biomeSelect.appendChild(option)\r\n    }\r\n    this.biomeSelect.onchange = () => this.biomeChanged()\r\n    this.heading.appendChild(this.biomeSelect)\r\n\r\n    this.controls = {}\r\n    this.updateControls()\r\n\r\n    options.parent.appendChild(this.div)\r\n  }\r\n\r\n  biomeChanged() {\r\n    this.biomeName = this.biomeSelect.options[this.biomeSelect.selectedIndex].value\r\n    this.updateControls()\r\n    this.propertyChanged()\r\n  }\r\n\r\n  updateControls() {\r\n    for (const control of Object.keys(this.controls)) {\r\n      this.div.removeChild(this.controls[control].div)\r\n    }\r\n\r\n    this.controls = {}\r\n    let childOptions = {\r\n      name: 'assets',\r\n      optionsObject: BIOMES[this.biomeName].assets,\r\n      valueOverrides: this.options.optionsObject.assets,\r\n      parent: this.div,\r\n      depth: this.options.depth + 1,\r\n    }\r\n    this.controls['assets'] = new AssetArrayGroup(this, childOptions)\r\n  }\r\n\r\n  propertyChanged() {\r\n    this.options.optionsObject.assets = this.controls['assets'].getValue()\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  getValue() {\r\n    const options = { name: this.biomeName }\r\n    for (const [key, value] of Object.entries(this.controls)) {\r\n      options[key] = value.getValue()\r\n    }\r\n    return options\r\n  }\r\n}\r\n\r\nclass AssetArrayGroup {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.div = document.createElement('div')\r\n\r\n    this.controls = {}\r\n\r\n    const childOptions = {\r\n      parent: this.div,\r\n      min: 0,\r\n      max: 3,\r\n      step: 0.1,\r\n    }\r\n\r\n    for (const object of options.optionsObject) {\r\n      const name = object.prototype.constructor.className\r\n      let defaultValue = 1\r\n      if (\r\n        this.options.valueOverrides !== undefined &&\r\n        Object.keys(this.options.valueOverrides).indexOf(name) > -1\r\n      ) {\r\n        defaultValue = this.options.valueOverrides[name]\r\n      }\r\n      Object.assign(childOptions, {\r\n        name: name,\r\n        defaultValue: defaultValue,\r\n      })\r\n      this.controls[name] = new SliderControl(this, childOptions)\r\n    }\r\n\r\n    options.parent.appendChild(this.div)\r\n  }\r\n\r\n  propertyChanged() {\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  getValue() {\r\n    const options = {}\r\n    for (const [key, value] of Object.entries(this.controls)) {\r\n      options[key] = value.getValue()\r\n    }\r\n    return options\r\n  }\r\n}\r\n\r\nclass ControlGroup {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.div = document.createElement('div')\r\n    this.heading = document.createElement('h' + options.depth)\r\n    this.heading.innerText = toDisplayString(options.name)\r\n    this.div.appendChild(this.heading)\r\n\r\n    this.controls = {}\r\n\r\n    for (const [key, value] of Object.entries(options.optionsObject)) {\r\n      let childOptions = { name: key, defaultValue: value, parent: this.div }\r\n      switch (typeof value) {\r\n        case 'boolean':\r\n          this.controls[key] = new CheckBoxControl(this, childOptions)\r\n          break\r\n        case 'number':\r\n          Object.assign(childOptions, { min: 0, max: 100, step: 1 })\r\n          if (options.name in ranges && key in ranges[options.name]) {\r\n            Object.assign(childOptions, ranges[options.name][key])\r\n          }\r\n          this.controls[key] = new SliderControl(this, childOptions)\r\n          break\r\n        case 'object':\r\n          if (isEmpty(value) === false) {\r\n            Object.assign(childOptions, { optionsObject: value, depth: options.depth + 1 })\r\n            if (key === 'biome') {\r\n              this.controls[key] = new BiomeGroup(this, childOptions)\r\n            } else {\r\n              this.controls[key] = new ControlGroup(this, childOptions)\r\n            }\r\n          }\r\n          break\r\n      }\r\n    }\r\n\r\n    options.parent.appendChild(this.div)\r\n  }\r\n\r\n  propertyChanged() {\r\n    if ('enabled' in this.controls) {\r\n      this.setVisibility(this.controls.enabled.getValue())\r\n    }\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  getValue() {\r\n    let optionValues = {}\r\n    for (const [key, control] of Object.entries(this.controls)) {\r\n      optionValues[key] = control.getValue()\r\n    }\r\n    return optionValues\r\n  }\r\n\r\n  setVisibility(visible) {\r\n    for (const [key, control] of Object.entries(this.controls)) {\r\n      if (key !== 'enabled') {\r\n        this.controls[key].setVisibility(visible)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default class DioramaControls {\r\n  constructor(webgl, options) {\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    const controlsDiv = document.getElementById('controls')\r\n\r\n    this.controls = new ControlGroup(this, {\r\n      name: 'options',\r\n      optionsObject: this.options,\r\n      depth: 1,\r\n      parent: controlsDiv,\r\n    })\r\n  }\r\n\r\n  propertyChanged() {\r\n    if (this.webgl.scene.diorama !== undefined) {\r\n      this.webgl.scene.remove(this.webgl.scene.diorama)\r\n      this.webgl.scene.diorama = undefined\r\n    }\r\n\r\n    const dioramaOptions = this.controls.getValue()\r\n    sessionStorage.setItem('dioramaOptions', JSON.stringify(dioramaOptions))\r\n\r\n    this.webgl.scene.diorama = new Diorama(this.webgl, { diorama: dioramaOptions })\r\n    this.webgl.scene.add(this.webgl.scene.diorama)\r\n  }\r\n}\r\n\r\nfunction toDisplayString(name) {\r\n  return isEmpty(name) ? name : name[0].toUpperCase() + name.slice(1)\r\n}\r\n","import WebGLApp from './lib/WebGLApp'\r\nimport assets from './lib/AssetManager'\r\nimport { Diorama, getDefaultDioramaOptions } from './components/Diorama'\r\nimport DioramaControls from './ui/DioramaControls'\r\n\r\nwindow.DEBUG = window.location.search.includes('debug')\r\n\r\nconst canvas = document.querySelector('#app')\r\n\r\nconst webgl = new WebGLApp({\r\n  canvas,\r\n  alpha: true,\r\n  background: '#ABC',\r\n  backgroundAlpha: 1,\r\n  showFps: window.DEBUG,\r\n  orbitControls: true,\r\n})\r\n\r\nif (window.DEBUG) {\r\n  window.webgl = webgl\r\n}\r\n\r\nconst defaultDioramaOptions = getDefaultDioramaOptions()\r\n\r\nnew DioramaControls(webgl, defaultDioramaOptions)\r\n\r\n// Hide canvas until assets are loaded\r\nwebgl.canvas.style.visibility = 'hidden'\r\n\r\n// Load any queued assets\r\nassets.load({ renderer: webgl.renderer }).then(() => {\r\n  webgl.scene.diorama = new Diorama(webgl, { diorama: defaultDioramaOptions })\r\n  webgl.scene.add(webgl.scene.diorama)\r\n\r\n  webgl.canvas.style.visibility = ''\r\n\r\n  // Rotate camera target slightly below the center\r\n  webgl.orbitControls.target.set(0, -defaultDioramaOptions.bounds.y / 5, 0)\r\n\r\n  webgl.start()\r\n  webgl.draw()\r\n})\r\n"],"sourceRoot":""}