{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/CannonDebugRenderer.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/components/Building.js","webpack:///./src/lib/meshUtils.js","webpack:///./src/components/Terrain.js","webpack:///./src/components/Tree.js","webpack:///./src/components/Water.js","webpack:///./src/components/Diorama.js","webpack:///./src/ui/DioramaControls.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CannonDebugRenderer","scene","world","_classCallCheck","this","tmpVec0","CANNON","Vec3","tmpVec1","tmpVec2","tmpQuat0","_meshes","_material","THREE","color","wireframe","_sphereGeometry","_boxGeometry","_planeGeometry","_cylinderGeometry","bodies","meshes","shapeWorldPosition","shapeWorldQuaternion","meshIndex","body","shapes","shape","_updateMesh","mesh","quaternion","vmult","shapeOffsets","position","vadd","mult","shapeOrientations","copy","visible","remove","index","_typeMatch","_createMesh","_scaleMesh","material","geo","type","Shape","types","SPHERE","BOX","PLANE","CONVEXPOLYHEDRON","vertices","v","x","y","z","faces","face","a","b","computeBoundingSphere","computeFaceNormals","geometryId","id","TRIMESH","indices","getTriangleVertices","HEIGHTFIELD","xi","yi","k","getConvexTrianglePillar","pillarConvex","pillarOffset","ii","add","geometry","Sphere","Box","Plane","ConvexPolyhedron","Trimesh","Heightfield","radius","scale","set","halfExtents","multiplyScalar","WebGLApp","_this","_ref","arguments","undefined","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","options","_objectWithoutProperties","WebGLApp_classCallCheck","_updateListeners","writable","_tmpTarget","_lastTime","_width","WebGLApp_height","resize","_ref2","_ref2$width","width","_ref2$height","height","_ref2$pixelRatio","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","saveDataURI","update","dt","time","xrframe","orbitControls","step","cannonDebugRenderer","forEach","_classPrivateFieldLooseBase","fn","passes","pass","isLastElement","renderToScreen","render","start","isRunning","setAnimationLoop","animate","stop","now","stats","begin","Math","min","maxDeltaTime","end","_len","args","Array","_key","child","_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","shadowMap","enabled","sortObjects","domElement","setClearColor","xr","maxPixelRatio","gl","getContext","performance","addEventListener","touchHandler","createTouches","target","filtered","isDragging","on","ev","pos","postprocessing","EffectComposer","addPass","RenderPass","OrbitControls","showWorldWireframes","showFps","Stats","showPanel","document","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","expanded","closeControls","style","createElement","innerHTML","head","gpu","getGPUTier","glContext","tier","Number","isMobile","toLowerCase","includes","indexOf","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadTexture","_x","_x2","_loadTexture","_callee","url","texture","image","regeneratorRuntime","wrap","_context","prev","next","encoding","setTextureParams","loadImage","crossorigin","sent","needsUpdate","initTexture","abrupt","t0","Error","concat","opt","flipY","mapping","format","isJPEG","search","repeat","wrapS","wrapT","minFilter","magFilter","generateMipmaps","size","renderTarget","outTexture","basePath","extension","urls","equirectangular","pmrem","pmremEquirectangular","highestPowerOfTwo","naturalHeight","fromEquirectangularTexture","dispose","prefix","replace","postfix","Promise","resolve","reject","HDRCubeTextureLoader","load","cubeMap","assignCubemapOptions","pmremGenerator","compileCubemapShader","fromCubemap","pmremCubemap","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","AssetManager","TypeError","AssetManager_classPrivateFieldLooseBase","_cache","_onProgressListeners","AssetManager_objectWithoutProperties","_getQueued","_queue","AssetManager_objectSpread","_extractType","find","item","ext","lastIndexOf","test","itemLoadingStart","Date","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","_this2","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","errors","_logs","filter","groupLog","_ref5","GLTFLoader","err","fetch","then","response","json","_loadEnvMap","loadEnvMap","arrayBuffer","text","_len2","_key2","_console","groupCollapsed","_console2","_toConsumableArray","groupEnd","lib_AssetManager","Building","webgl","Building_classCallCheck","_super","rng","require","seedrandom","seed","bounds","translate","rx","ry","rz","box","castShadow","receiveShadow","generateSideMeshes","group","planeGeometry","xSegments","zSegments","lowestPoint","topVertices","getAttribute","array","computeBoundingBox","boundingBox","getSize","newHeight","side","xSide","sideGeometry","rotateY","PI","stride","Terrain","Terrain_classCallCheck","Terrain_assertThisInitialized","_bottomPadding","generateHeight","rotateX","heightData","water","waterCurve","getWaterCurve","modifyGeometryForWater","computeVertexNormals","generateTexture","map","envMap","environment","sideMaterial","perlin","ImprovedNoise","quality","Float32Array","abs","noise","max","heightScale","Terrain_classPrivateFieldLooseBase","multiplier","context","imageData","fillStyle","fillRect","getImageData","halfHeight","waterLevel","lerp","level","grass","sand","underwater","col","clone","sandMax","falloff","clamp","g","putImageData","points","getPoints","vertex","vertex2D","closest","closestPointToPoint","distance","distanceTo","getWaterVertexHeight","current","calculated","depth","lowest","raycaster","multiply","sub","intersects","intersectObject","hit","point","tempVec","minDist","xTest","zTest","line","xPlane","zPlane","endPoint","intersectLine","startPoint","Tree","Tree_classCallCheck","Water","Water_classCallCheck","Water_possibleConstructorReturn","transparent","opacity","roughness","reflectivity","generateMesh","Water_assertThisInitialized","Diorama","_THREE$Group","Diorama_inherits","Diorama_createSuper","Diorama_classCallCheck","diorama","setupLights","terrain","waterLineGeometry","setFromPoints","waterLine","buildingOptions","density","buildings","distributeObjects","treeOptions","vegetation","createBase","depthTest","elapsed","skylight","setHSL","groundColor","sun","shadow","mapSize","left","right","top","bottom","helper","sky","Sky","setScalar","uniforms","fromScene","base","translateY","baseHeight","floorSize","floorGeometry","floorMaterial","floor","classToDistribute","onObject","setFromObject","numObjects","subVectors","intersectObjects","children","rayColor","newObject","updateMatrixWorld","arrow","ray","direction","origin","ranges","InputControl","owner","DioramaControls_classCallCheck","field","label","innerText","toDisplayString","input","onchange","propertyChanged","parent","display","CheckBoxControl","setAttribute","checked","defaultValue","SliderControl","_this3","_super2","parseFloat","ControlGroup","div","heading","_i","_Object$entries","entries","optionsObject","_Object$entries$_i","_slicedToArray","childOptions","DioramaControls_typeof","assign","isEmpty_default","setVisibility","getValue","optionValues","_i2","_Object$entries2","_Object$entries2$_i","control","_i3","_Object$entries3","_Object$entries3$_i","DioramaControls","controlsDiv","getElementById","dioramaOptions","sessionStorage","setItem","JSON","stringify","toUpperCase","location","querySelector","defaultDioramaOptions","biome","sessionOptions","getItem","parsedOptions","parse","getDefaultDioramaOptions","visibility","assets"],"mappings":"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","file":"app.caa9d120.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([285,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable no-underscore-dangle */\nimport * as THREE from 'three'\nimport CANNON from 'cannon'\n\n/**\n * Adds Three.js primitives into the scene where all the Cannon bodies and shapes are.\n * @class CannonDebugRenderer\n * @param {THREE.Scene} scene\n * @param {CANNON.World} world\n */\n\nexport default class CannonDebugRenderer {\n  tmpVec0 = new CANNON.Vec3()\n  tmpVec1 = new CANNON.Vec3()\n  tmpVec2 = new CANNON.Vec3()\n  tmpQuat0 = new CANNON.Vec3()\n\n  constructor(scene, world) {\n    this.scene = scene\n    this.world = world\n\n    this._meshes = []\n\n    this._material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true })\n    this._sphereGeometry = new THREE.SphereGeometry(1)\n    this._boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n    this._planeGeometry = new THREE.PlaneGeometry(10, 10, 10, 10)\n    this._cylinderGeometry = new THREE.CylinderGeometry(1, 1, 10, 10)\n  }\n\n  update() {\n    const { bodies } = this.world\n    const meshes = this._meshes\n    const shapeWorldPosition = this.tmpVec0\n    const shapeWorldQuaternion = this.tmpQuat0\n\n    let meshIndex = 0\n\n    for (let i = 0; i !== bodies.length; i++) {\n      const body = bodies[i]\n\n      for (let j = 0; j !== body.shapes.length; j++) {\n        const shape = body.shapes[j]\n\n        this._updateMesh(meshIndex, body, shape)\n\n        const mesh = meshes[meshIndex]\n\n        if (mesh) {\n          // Get world position\n          body.quaternion.vmult(body.shapeOffsets[j], shapeWorldPosition)\n          body.position.vadd(shapeWorldPosition, shapeWorldPosition)\n\n          // Get world quaternion\n          body.quaternion.mult(body.shapeOrientations[j], shapeWorldQuaternion)\n\n          // Copy to meshes\n          mesh.position.copy(shapeWorldPosition)\n          mesh.quaternion.copy(shapeWorldQuaternion)\n\n          // Change the visiblity\n          if ('visible' in body) {\n            mesh.visible = body.visible\n          }\n        }\n\n        meshIndex += 1\n      }\n    }\n\n    for (let i = meshIndex; i < meshes.length; i++) {\n      const mesh = meshes[i]\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n    }\n\n    meshes.length = meshIndex\n  }\n\n  _updateMesh(index, body, shape) {\n    let mesh = this._meshes[index]\n    if (!this._typeMatch(mesh, shape)) {\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n      mesh = this._meshes[index] = this._createMesh(shape)\n    }\n    this._scaleMesh(mesh, shape)\n  }\n\n  _createMesh(shape) {\n    let mesh\n    const material = this._material\n\n    const geo = new THREE.Geometry()\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh = new THREE.Mesh(this._sphereGeometry, material)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh = new THREE.Mesh(this._boxGeometry, material)\n        break\n\n      case CANNON.Shape.types.PLANE:\n        mesh = new THREE.Mesh(this._planeGeometry, material)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        // Create mesh\n\n        // Add vertices\n        for (let i = 0; i < shape.vertices.length; i++) {\n          const v = shape.vertices[i]\n          geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z))\n        }\n\n        for (let i = 0; i < shape.faces.length; i++) {\n          const face = shape.faces[i]\n\n          // add triangles\n          const a = face[0]\n          for (let j = 1; j < face.length - 1; j++) {\n            const b = face[j]\n            const c = face[j + 1]\n            geo.faces.push(new THREE.Face3(a, b, c))\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        for (let i = 0; i < shape.indices.length / 3; i++) {\n          shape.getTriangleVertices(i, this.tmpVec0, this.tmpVec1, this.tmpVec2)\n          geo.vertices.push(\n            new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n            new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n            new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n          )\n          const j = geo.vertices.length - 3\n          geo.faces.push(new THREE.Face3(j, j + 1, j + 2))\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        for (let xi = 0; xi < shape.data.length - 1; xi++) {\n          for (let yi = 0; yi < shape.data[xi].length - 1; yi++) {\n            for (let k = 0; k < 2; k++) {\n              shape.getConvexTrianglePillar(xi, yi, k === 0)\n              this.tmpVec0.copy(shape.pillarConvex.vertices[0])\n              this.tmpVec1.copy(shape.pillarConvex.vertices[1])\n              this.tmpVec2.copy(shape.pillarConvex.vertices[2])\n              this.tmpVec0.vadd(shape.pillarOffset, this.tmpVec0)\n              this.tmpVec1.vadd(shape.pillarOffset, this.tmpVec1)\n              this.tmpVec2.vadd(shape.pillarOffset, this.tmpVec2)\n              geo.vertices.push(\n                new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n                new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n                new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n              )\n              const ii = geo.vertices.length - 3\n              geo.faces.push(new THREE.Face3(ii, ii + 1, ii + 2))\n            }\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n      default:\n        break\n    }\n\n    if (mesh) {\n      this.scene.add(mesh)\n    }\n\n    return mesh\n  }\n\n  _typeMatch(mesh, shape) {\n    if (!mesh) {\n      return false\n    }\n    const geo = mesh.geometry\n    return (\n      (geo instanceof THREE.SphereGeometry && shape instanceof CANNON.Sphere) ||\n      (geo instanceof THREE.BoxGeometry && shape instanceof CANNON.Box) ||\n      (geo instanceof THREE.PlaneGeometry && shape instanceof CANNON.Plane) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.ConvexPolyhedron) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Trimesh) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Heightfield)\n    )\n  }\n\n  _scaleMesh(mesh, shape) {\n    const { radius } = shape\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh.scale.set(radius, radius, radius)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh.scale.copy(shape.halfExtents)\n        mesh.scale.multiplyScalar(2)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        mesh.scale.set(1, 1, 1)\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        mesh.scale.copy(shape.scale)\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        mesh.scale.set(1, 1, 1)\n        break\n      default:\n        break\n    }\n  }\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport createTouches from 'touches'\nimport dataURIToBlob from 'datauritoblob'\nimport Stats from 'stats.js'\nimport State from 'controls-state'\nimport wrapGUI from 'controls-gui'\nimport { getGPUTier } from 'detect-gpu'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport CannonDebugRenderer from './CannonDebugRenderer'\n\nexport default class WebGLApp {\n  #updateListeners = []\n  #tmpTarget = new THREE.Vector3()\n  #lastTime\n  #width\n  #height\n\n  constructor({\n    background = '#000',\n    backgroundAlpha = 1,\n    fov = 45,\n    near = 0.1,\n    far = 500,\n    ...options\n  } = {}) {\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: false,\n      // enabled for saving screenshots of the canvas,\n      // may wish to disable this for perf reasons\n      preserveDrawingBuffer: true,\n      failIfMajorPerformanceCaveat: true,\n      ...options,\n    })\n\n    this.renderer.shadowMap.enabled = true\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\n    this.renderer.sortObjects = false\n    this.canvas = this.renderer.domElement\n\n    this.renderer.setClearColor(background, backgroundAlpha)\n\n    if (options.xr) {\n      this.renderer.xr.enabled = true\n    }\n\n    // save the fixed dimensions\n    this.#width = options.width\n    this.#height = options.height\n\n    // clamp pixel ratio for performance\n    this.maxPixelRatio = options.maxPixelRatio || 2\n    // clamp delta to stepping anything too far forward\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\n\n    // setup a basic camera\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\n\n    this.scene = new THREE.Scene()\n\n    this.gl = this.renderer.getContext()\n\n    this.time = 0\n    this.isRunning = false\n    this.#lastTime = performance.now()\n\n    // handle resize events\n    window.addEventListener('resize', this.resize)\n    window.addEventListener('orientationchange', this.resize)\n\n    // force an initial resize event\n    this.resize()\n\n    // __________________________ADDONS__________________________\n\n    // really basic touch handler that propagates through the scene\n    this.touchHandler = createTouches(this.canvas, {\n      target: this.canvas,\n      filtered: true,\n    })\n    this.isDragging = false\n    this.touchHandler.on('start', (ev, pos) => {\n      this.isDragging = true\n      this.traverse('onPointerDown', ev, pos)\n    })\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\n    this.touchHandler.on('end', (ev, pos) => {\n      this.isDragging = false\n      this.traverse('onPointerUp', ev, pos)\n    })\n\n    // expose a composer for postprocessing passes\n    if (options.postprocessing) {\n      this.composer = new EffectComposer(this.renderer)\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\n    }\n\n    // set up a simple orbit controller\n    if (options.orbitControls) {\n      this.camera.position.set(40, 20, -50)\n      this.orbitControls = new OrbitControls(this.camera, this.renderer.domElement)\n      this.orbitControls.update()\n    }\n\n    // Attach the Cannon physics engine\n    if (options.world) {\n      this.world = options.world\n      if (options.showWorldWireframes) {\n        this.cannonDebugRenderer = new CannonDebugRenderer(this.scene, this.world)\n      }\n    }\n\n    // show the fps meter\n    if (options.showFps) {\n      this.stats = new Stats()\n      this.stats.showPanel(0)\n      document.body.appendChild(this.stats.dom)\n    }\n\n    // initialize the controls-state\n    if (options.controls) {\n      const controlsState = State(options.controls)\n      this.controls = options.hideControls\n        ? controlsState\n        : wrapGUI(controlsState, { expanded: !options.closeControls })\n\n      // add the custom controls-gui styles\n      if (!options.hideControls) {\n        const styles = `\n          [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\n            content: initial !important;\n          }\n          [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\n            text-indent: 6px !important;\n          }\n          [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\n            content: initial !important;\n          }\n        `\n        const style = document.createElement('style')\n        style.type = 'text/css'\n        style.innerHTML = styles\n        document.head.appendChild(style)\n      }\n    }\n\n    // detect the gpu info\n    const gpu = getGPUTier({ glContext: this.renderer.getContext() })\n    this.gpu = {\n      name: gpu.type,\n      tier: Number(gpu.tier.slice(-1)),\n      isMobile: gpu.tier.toLowerCase().includes('mobile'),\n    }\n  }\n\n  get width() {\n    return this.#width || window.innerWidth\n  }\n\n  get height() {\n    return this.#height || window.innerHeight\n  }\n\n  get pixelRatio() {\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\n  }\n\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\n    // update pixel ratio if necessary\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\n      this.renderer.setPixelRatio(pixelRatio)\n    }\n\n    // setup new size & update camera aspect if necessary\n    this.renderer.setSize(width, height)\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = width / height\n    }\n    this.camera.updateProjectionMatrix()\n\n    // resize also the composer\n    if (this.composer) {\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\n    }\n\n    // recursively tell all child objects to resize\n    this.scene.traverse((obj) => {\n      if (typeof obj.resize === 'function') {\n        obj.resize({\n          width,\n          height,\n          pixelRatio,\n        })\n      }\n    })\n\n    // draw a frame to ensure the new size has been registered visually\n    this.draw()\n    return this\n  }\n\n  // convenience function to trigger a PNG download of the canvas\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\n    // force a specific output size\n    this.resize({ width, height, pixelRatio: 1 })\n    this.draw()\n\n    const dataURI = this.canvas.toDataURL('image/png')\n\n    // reset to default size\n    this.resize()\n    this.draw()\n\n    // save\n    saveDataURI(fileName, dataURI)\n  }\n\n  update = (dt, time, xrframe) => {\n    if (this.orbitControls) {\n      this.orbitControls.update()\n\n      // reposition to orbit controls\n      //this.camera.up.fromArray(this.orbitControls.up)\n      //this.camera.position.fromArray(this.orbitControls.position)\n      //this.#tmpTarget.fromArray(this.orbitControls.target)\n      //this.camera.lookAt(this.#tmpTarget)\n    }\n\n    // recursively tell all child objects to update\n    this.scene.traverse((obj) => {\n      if (typeof obj.update === 'function') {\n        obj.update(dt, time, xrframe)\n      }\n    })\n\n    if (this.world) {\n      // update the Cannon physics engine\n      this.world.step(1 / 60, dt)\n\n      // update the debug wireframe renderer\n      if (this.cannonDebugRenderer) {\n        this.cannonDebugRenderer.update()\n      }\n\n      // recursively tell all child bodies to update\n      this.world.bodies.forEach((body) => {\n        if (typeof body.update === 'function') {\n          body.update(dt, time)\n        }\n      })\n    }\n\n    // call the update listeners\n    this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\n\n    return this\n  }\n\n  onUpdate(fn) {\n    this.#updateListeners.push(fn)\n  }\n\n  offUpdate(fn) {\n    const index = this.#updateListeners.indexOf(fn)\n\n    // return silently if the function can't be found\n    if (index === -1) {\n      return\n    }\n\n    this.#updateListeners.splice(index, 1)\n  }\n\n  draw = () => {\n    if (this.composer) {\n      // make sure to always render the last pass\n      this.composer.passes.forEach((pass, i, passes) => {\n        const isLastElement = i === passes.length - 1\n\n        if (isLastElement) {\n          pass.renderToScreen = true\n        } else {\n          pass.renderToScreen = false\n        }\n      })\n\n      this.composer.render()\n    } else {\n      this.renderer.render(this.scene, this.camera)\n    }\n    return this\n  }\n\n  start = () => {\n    if (this.isRunning) return\n    this.renderer.setAnimationLoop(this.animate)\n    this.isRunning = true\n    return this\n  }\n\n  stop = () => {\n    if (!this.isRunning) return\n    this.renderer.setAnimationLoop(null)\n    this.isRunning = false\n    return this\n  }\n\n  animate = (now, xrframe) => {\n    if (!this.isRunning) return\n\n    if (this.stats) this.stats.begin()\n\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\n    this.time += dt\n    this.#lastTime = now\n    this.update(dt, this.time, xrframe)\n    this.draw()\n\n    if (this.stats) this.stats.end()\n  }\n\n  traverse = (fn, ...args) => {\n    this.scene.traverse((child) => {\n      if (typeof child[fn] === 'function') {\n        child[fn].apply(child, args)\n      }\n    })\n  }\n\n  get cursor() {\n    return this.canvas.style.cursor\n  }\n\n  set cursor(cursor) {\n    if (cursor) {\n      this.canvas.style.cursor = cursor\n    } else {\n      this.canvas.style.cursor = null\n    }\n  }\n}\n\nfunction saveDataURI(name, dataURI) {\n  const blob = dataURIToBlob(dataURI)\n\n  // force download\n  const link = document.createElement('a')\n  link.download = name\n  link.href = window.URL.createObjectURL(blob)\n  link.onclick = setTimeout(() => {\n    window.URL.revokeObjectURL(blob)\n    link.removeAttribute('href')\n  }, 0)\n\n  link.click()\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.initTexture(texture)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport highestPowerOfTwo from 'highest-power-two'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    if (options.pmrem) {\n      return pmremEquirectangular(texture, renderer)\n    } else {\n      const size = highestPowerOfTwo(texture.image.naturalHeight)\n      const renderTarget = new THREE.WebGLCubeRenderTarget(size, {\n        generateMipmaps: true,\n        minFilter: THREE.LinearMipmapLinearFilter,\n        magFilter: THREE.LinearFilter,\n      })\n\n      const outTexture = renderTarget.fromEquirectangularTexture(renderer, texture)\n\n      texture.dispose() // dispose original texture\n      texture.image.data = null // remove image reference\n\n      return outTexture\n    }\n  }\n\n  const basePath = url\n  const extension = options.extension || '.jpg'\n  const urls = generateCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (extension === '.hdr') {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n        null,\n        () => reject(new Error(`Could not load env map: ${basePath}`))\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n      null,\n      () => reject(new Error(`Could not load env map: ${basePath}`))\n    )\n  })\n}\n\nfunction assignCubemapOptions(cubeMap, options) {\n  if (options.encoding) {\n    cubeMap.encoding = options.encoding\n  }\n  if (options.format) {\n    cubeMap.format = options.format\n  }\n  if (options.pmrem) {\n    cubeMap = pmremCubemap(cubeMap, options.renderer)\n  }\n  return cubeMap\n}\n\n// prefilter the environment map for irradiance\nfunction pmremEquirectangular(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileEquirectangularShader()\n\n  const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// prefilter the environment map for irradiance\nfunction pmremCubemap(cubeMap, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileCubemapShader()\n  const renderTarget = pmremGenerator.fromCubemap(cubeMap)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  cubeMap.dispose() // dispose original texture\n  cubeMap.image.data = null // remove image reference\n\n  return renderTarget.texture\n}\n\nfunction generateCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find((item) => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = (url) => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦 Asset ${item.url} was not loaded:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Asset ${item.url} was not loaded:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach((fn) => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter((log) => log.type === 'error')\n\n      if (errors.length === 0) {\n        this.groupLog(`📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱`)\n      } else {\n        this.groupLog(\n          `📦 %c Could not load ${errors.length} asset${errors.length > 1 ? 's' : ''} `,\n          'color:white;background:red;'\n        )\n      }\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, (err) =>\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n          )\n        })\n      case 'json':\n        return fetch(url).then((response) => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach((log) => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine...\nexport default new AssetManager()\n","import * as THREE from 'three'\r\n\r\nexport default class Building extends THREE.Group {\r\n  constructor(webgl, options) {\r\n    super(options)\r\n\r\n    this.type = 'Building'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed)\r\n\r\n    const geometry = new THREE.BoxGeometry(\r\n      this.options.bounds.x * 0.25,\r\n      this.options.bounds.y * 0.25,\r\n      this.options.bounds.z * 0.25\r\n    )\r\n    geometry.translate(0, this.options.bounds.y * 0.25 * 0.5, 0)\r\n\r\n    const rx = rng() * 0.1,\r\n      ry = rng() * 0.1,\r\n      rz = rng() * 0.1,\r\n      color = new THREE.Color(0.5 + rx, 0.4 + ry, 0.3 + rz)\r\n    const material = new THREE.MeshStandardMaterial({ color: color })\r\n\r\n    this.box = new THREE.Mesh(geometry, material)\r\n    this.box.name = 'Building'\r\n    this.box.castShadow = true\r\n    this.box.receiveShadow = true\r\n\r\n    this.add(this.box)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport default function generateSideMeshes(\r\n  group,\r\n  planeGeometry,\r\n  material,\r\n  xSegments,\r\n  zSegments,\r\n  lowestPoint\r\n) {\r\n  const topVertices = planeGeometry.getAttribute('position').array\r\n  planeGeometry.computeBoundingBox()\r\n  let bounds = new THREE.Vector3(0, 0, 0)\r\n  planeGeometry.boundingBox.getSize(bounds)\r\n  let newHeight = 0\r\n\r\n  // +X, +Z, -X, -Z\r\n  for (let side = 0; side < 4; side++) {\r\n    const xSide = side % 2 == 1\r\n    const sideGeometry = new THREE.PlaneBufferGeometry(\r\n      xSide ? bounds.x : bounds.z,\r\n      xSide ? bounds.z : bounds.x,\r\n      xSide ? xSegments : zSegments,\r\n      1\r\n    )\r\n    if (xSide) {\r\n      sideGeometry.translate(0, 0, bounds.z / 2)\r\n    } else {\r\n      sideGeometry.rotateY(-Math.PI / 2)\r\n      sideGeometry.translate(-bounds.x / 2, 0, 0)\r\n    }\r\n\r\n    const vertices = sideGeometry.getAttribute('position').array,\r\n      stride = xSide ? xSegments : zSegments\r\n    for (let i = 0, l = vertices.length / 3 / 2; i < l; i++) {\r\n      // Top row, match plane geometry\r\n      if (xSide) {\r\n        if (side < 2) {\r\n          newHeight = topVertices[(i + (xSegments + 1) * zSegments) * 3 + 1]\r\n        } else {\r\n          newHeight = topVertices[i * 3 + 1]\r\n        }\r\n      } else {\r\n        if (side < 2) {\r\n          newHeight = topVertices[i * (xSegments + 1) * 3 + 1]\r\n        } else {\r\n          newHeight = topVertices[(i * (xSegments + 1) + xSegments) * 3 + 1]\r\n        }\r\n      }\r\n      vertices[i * 3 + 1] = newHeight\r\n\r\n      // Bottom row, lowestPoint\r\n      vertices[(i + stride + 1) * 3 + 1] = lowestPoint\r\n    }\r\n\r\n    const mesh = new THREE.Mesh(sideGeometry, material)\r\n    if (side > 1) {\r\n      if (xSide) {\r\n        mesh.scale.z = -1\r\n      } else {\r\n        mesh.scale.x = -1\r\n      }\r\n    }\r\n\r\n    mesh.castShadow = true\r\n    mesh.receiveShadow = true\r\n\r\n    group.add(mesh)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport { ImprovedNoise } from 'three/examples/jsm/math/ImprovedNoise.js'\r\nimport generateSideMeshes from '../lib/meshUtils'\r\nimport { lerp } from 'canvas-sketch-util/math'\r\n\r\nexport default class Terrain extends THREE.Group {\r\n  #bottomPadding = 2\r\n\r\n  constructor(webgl, options) {\r\n    super(options)\r\n\r\n    this.type = 'Terrain'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    this.generateHeight(this.options.bounds.x, this.options.bounds.z)\r\n\r\n    const geometry = new THREE.PlaneBufferGeometry(\r\n      this.options.bounds.x,\r\n      this.options.bounds.z,\r\n      this.options.bounds.x - 1,\r\n      this.options.bounds.z - 1\r\n    )\r\n    geometry.rotateX(-Math.PI / 2)\r\n\r\n    let vertices = geometry.getAttribute('position').array\r\n    for (let i = 0, l = vertices.length; i < l; i++) {\r\n      vertices[i * 3 + 1] = this.heightData[i]\r\n    }\r\n\r\n    if (this.options.water.enabled === true) {\r\n      this.waterCurve = this.getWaterCurve(geometry)\r\n      this.modifyGeometryForWater(geometry)\r\n    }\r\n    geometry.computeVertexNormals()\r\n\r\n    const texture = new THREE.CanvasTexture(\r\n      this.generateTexture(geometry, this.options.bounds.x, this.options.bounds.z)\r\n    )\r\n    texture.wrapS = THREE.ClampToEdgeWrapping\r\n    texture.wrapT = THREE.ClampToEdgeWrapping\r\n\r\n    const material = new THREE.MeshStandardMaterial({\r\n      map: texture,\r\n      envMap: this.webgl.scene.environment,\r\n    })\r\n\r\n    this.mesh = new THREE.Mesh(geometry, material)\r\n\r\n    this.mesh.castShadow = true\r\n    this.mesh.receiveShadow = true\r\n\r\n    this.add(this.mesh)\r\n\r\n    const sideMaterial = new THREE.MeshStandardMaterial({ color: 0x554928 })\r\n    generateSideMeshes(\r\n      this,\r\n      geometry,\r\n      sideMaterial,\r\n      this.options.bounds.x - 1,\r\n      this.options.bounds.z - 1,\r\n      -this.options.bounds.y / 2\r\n    )\r\n  }\r\n\r\n  generateHeight(width, height) {\r\n    let size = width * height,\r\n      perlin = new ImprovedNoise(),\r\n      quality = 1,\r\n      seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed),\r\n      z = rng()\r\n\r\n    this.heightData = new Float32Array(size)\r\n\r\n    for (let j = 0; j < 4; j++) {\r\n      for (let i = 0; i < size; i++) {\r\n        let x = i % width,\r\n          y = ~~(i / width)\r\n        this.heightData[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75)\r\n      }\r\n\r\n      quality *= 5\r\n    }\r\n\r\n    // Normalize height\r\n    let min = 10000,\r\n      max = -10000\r\n    for (let i = 0; i < size; i++) {\r\n      if (this.heightData[i] < min) {\r\n        min = this.heightData[i]\r\n      }\r\n      if (this.heightData[i] > max) {\r\n        max = this.heightData[i]\r\n      }\r\n    }\r\n\r\n    const heightScale = (this.options.bounds.y - this.#bottomPadding - 2) / this.options.bounds.y,\r\n      multiplier = this.options.bounds.y / max\r\n    for (let i = 0; i < size; i++) {\r\n      this.heightData[i] =\r\n        ((this.heightData[i] - min) * multiplier -\r\n          this.options.bounds.y * 0.5 +\r\n          this.#bottomPadding) *\r\n        heightScale\r\n    }\r\n  }\r\n\r\n  generateTexture(geometry, width, height) {\r\n    var canvas, context, image, imageData\r\n\r\n    canvas = document.createElement('canvas')\r\n    canvas.width = width\r\n    canvas.height = height\r\n\r\n    context = canvas.getContext('2d')\r\n    context.fillStyle = '#000'\r\n    context.fillRect(0, 0, width, height)\r\n\r\n    image = context.getImageData(0, 0, canvas.width, canvas.height)\r\n    imageData = image.data\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed)\r\n\r\n    const halfHeight = this.options.bounds.y / 2,\r\n      waterLevel = lerp(-halfHeight, halfHeight, this.options.water.level),\r\n      vertices = geometry.getAttribute('position').array,\r\n      grass = new THREE.Color(0.22 + rng() * 0.1, 0.48 + rng() * 0.1, 0.22 + rng() * 0.1),\r\n      sand = new THREE.Color(0.63 + rng() * 0.05, 0.52 + rng() * 0.05, 0.33 + rng() * 0.05),\r\n      underwater = new THREE.Color(0.1, 0.2, 0.2)\r\n    for (let i = 0, l = vertices.length; i < l; i++) {\r\n      let col = grass.clone()\r\n      if (this.options.water.enabled) {\r\n        const height = vertices[i * 3 + 1]\r\n        if (height < waterLevel) {\r\n          col = underwater.clone()\r\n        }\r\n        if (this.options.water.sand.enabled === true) {\r\n          const sandMax = this.options.water.sand.width + this.options.water.sand.falloff\r\n          if (height <= waterLevel - this.options.water.sand.width) {\r\n            // UNDERWATER TO SAND\r\n            const t = Math.clamp(height / (waterLevel - height), 0, 1)\r\n            col.lerp(sand, t)\r\n          } else if (sandMax > 0.001) {\r\n            if (height <= waterLevel + this.options.water.sand.width) {\r\n              // SOLID SAND\r\n              col = sand.clone()\r\n            } else if (this.options.water.sand.falloff > 0.001) {\r\n              // SAND TO GRASS\r\n              const t = Math.clamp(\r\n                (height - waterLevel - this.options.water.sand.width) /\r\n                  this.options.water.sand.falloff,\r\n                0,\r\n                1\r\n              )\r\n              col = sand.clone().lerp(grass, t)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      imageData[i * 4] = col.r * 255 * (1 - rng() * 0.1)\r\n      imageData[i * 4 + 1] = col.g * 255 * (1 - rng() * 0.1)\r\n      imageData[i * 4 + 2] = col.b * 255 * (1 - rng() * 0.1)\r\n    }\r\n\r\n    context.putImageData(image, 0, 0)\r\n\r\n    return canvas\r\n  }\r\n\r\n  modifyGeometryForWater(geometry) {\r\n    const points = this.waterCurve.getPoints(10)\r\n    let vertices = geometry.getAttribute('position').array\r\n    let test = new THREE.Vector3(0, 0, 0),\r\n      target = new THREE.Vector3(0, 0, 0)\r\n    for (let i = 0, l = vertices.length; i < l; i++) {\r\n      const vertex = new THREE.Vector3(vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2])\r\n      const vertex2D = new THREE.Vector2(vertex.x, vertex.z)\r\n      let closest = 100000\r\n      for (let p = 0; p < points.length - 1; p++) {\r\n        const line = new THREE.Line3(points[p], points[p + 1])\r\n        line.closestPointToPoint(vertex, true, test)\r\n        let distance = vertex2D.distanceTo(new THREE.Vector2(test.x, test.z))\r\n        if (distance < closest) {\r\n          closest = distance\r\n          target = test.clone()\r\n        }\r\n      }\r\n      const distance = vertex2D.distanceTo(new THREE.Vector2(target.x, target.z))\r\n      if (distance < this.options.water.width / 2 + this.options.water.falloff) {\r\n        vertices[i * 3 + 1] = this.getWaterVertexHeight(distance, target.y, vertices[i * 3 + 1])\r\n      }\r\n    }\r\n  }\r\n\r\n  getWaterVertexHeight(distance, target, current) {\r\n    const t = Math.clamp(\r\n      (distance - this.options.water.width / 2) / this.options.water.falloff,\r\n      0,\r\n      1\r\n    )\r\n    const calculated = lerp(target - this.options.water.depth, current, t)\r\n    const lowest = -this.options.bounds.y / 2 + 1\r\n    return Math.max(lowest, calculated)\r\n  }\r\n\r\n  getRandomPointOnTerrain() {\r\n    const raycaster = new THREE.Raycaster()\r\n    let position = new THREE.Vector3(this.rng(), 0, this.rng())\r\n    position.multiply(this.options.bounds)\r\n    position.y = this.options.bounds.y\r\n    position.sub(new THREE.Vector3(0.5, 0.5, 0.5).multiply(this.options.bounds))\r\n    raycaster.set(position, new THREE.Vector3(0, -1, 0))\r\n    const intersects = raycaster.intersectObject(this.mesh)\r\n    if (intersects.length > 0) {\r\n      return { hit: true, position: intersects[0].point }\r\n    }\r\n    return { hit: false, position: null }\r\n  }\r\n\r\n  getWaterCurve(geometry) {\r\n    var points = [new THREE.Vector3(0, 100000, 0), new THREE.Vector3(0, 100000, 0)],\r\n      tempVec = new THREE.Vector3()\r\n    const vertices = geometry.getAttribute('position').array,\r\n      minDist = Math.min(this.options.bounds.x, this.options.bounds.z) / 4\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      for (let j = 0; j < points.length; j++) {\r\n        tempVec.x = vertices[i * 3]\r\n        tempVec.y = vertices[i * 3 + 1]\r\n        tempVec.z = vertices[i * 3 + 2]\r\n        if (tempVec.y < points[j].y) {\r\n          if (j == 0 || tempVec.distanceTo(points[j - 1]) > minDist) {\r\n            points[j].x = tempVec.x\r\n            points[j].y = tempVec.y\r\n            points[j].z = tempVec.z\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const xTest = this.options.bounds.x / 2,\r\n      zTest = this.options.bounds.z / 2\r\n    const line = new THREE.Line3(\r\n      points[0].clone().add(points[1].clone().sub(points[0]).multiplyScalar(-10)),\r\n      points[0].clone().add(points[1].clone().sub(points[0]).multiplyScalar(10))\r\n    )\r\n\r\n    let xPlane = new THREE.Plane(new THREE.Vector3(0, 0, 1), zTest)\r\n    let zPlane = new THREE.Plane(new THREE.Vector3(1, 0, 0), xTest)\r\n\r\n    let endPoint = new THREE.Vector3(0, 0, 0)\r\n    if (\r\n      xPlane.intersectLine(line, endPoint) !== undefined ||\r\n      zPlane.intersectLine(line, endPoint) !== undefined\r\n    ) {\r\n      points[1] = endPoint\r\n    }\r\n\r\n    xPlane = new THREE.Plane(new THREE.Vector3(0, 0, -1), zTest)\r\n    zPlane = new THREE.Plane(new THREE.Vector3(-1, 0, 0), xTest)\r\n\r\n    let startPoint = new THREE.Vector3(0, 0, 0)\r\n    if (\r\n      xPlane.intersectLine(line, startPoint) !== undefined ||\r\n      zPlane.intersectLine(line, startPoint) !== undefined\r\n    ) {\r\n      points[0] = startPoint\r\n    }\r\n\r\n    // Flatten the water\r\n    if (points[0].y > points[1].y) {\r\n      points[0].y = lerp(points[0].y, points[1].y, 0.75)\r\n    } else {\r\n      points[1].y = lerp(points[1].y, points[0].y, 0.75)\r\n    }\r\n\r\n    // Don't let the curve go below the floor\r\n    const lowest = -this.options.bounds.y / 2 + 1\r\n    for (let p = 0; p < points.length; p++) {\r\n      points[p].y = Math.max(lowest, points[p].y)\r\n    }\r\n\r\n    return new THREE.CatmullRomCurve3([points[0], points[1]])\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport default class Tree extends THREE.Mesh {\r\n  constructor(webgl, options) {\r\n    super(options)\r\n\r\n    this.type = 'TreeMesh'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed)\r\n\r\n    this.height = this.options.height + rng() * this.options.height * 0.5\r\n\r\n    this.geometry = new THREE.CylinderGeometry(0.01, this.height * 0.25, this.height, 32, 4, false)\r\n    this.geometry.translate(0, this.height * 0.5, 0)\r\n\r\n    const rx = rng() * 0.1,\r\n      ry = rng() * 0.1,\r\n      rz = rng() * 0.1,\r\n      color = new THREE.Color(0.1 + rx, 0.4 + ry, 0.2 + rz)\r\n    this.material = new THREE.MeshStandardMaterial({ color: color })\r\n\r\n    this.castShadow = true\r\n    this.receiveShadow = true\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport generateSideMeshes from '../lib/meshUtils'\r\nimport { lerp } from 'canvas-sketch-util/math'\r\n\r\nexport default class Water extends THREE.Group {\r\n  constructor(webgl, options, waterCurve) {\r\n    super(options)\r\n\r\n    this.type = 'WaterMesh'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n    this.waterCurve = waterCurve\r\n\r\n    if (this.options.water.level <= 0.001) {\r\n      return\r\n    }\r\n\r\n    const seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.seed)\r\n    const rx = this.rng() * 0.1,\r\n      ry = this.rng() * 0.1,\r\n      rz = this.rng() * 0.1,\r\n      color = new THREE.Color(0.1 + rx, 0.15 + ry, 0.2 + rz),\r\n      material = new THREE.MeshPhysicalMaterial({\r\n        color: color,\r\n        transparent: true,\r\n        opacity: 0.8,\r\n        roughness: 0.1,\r\n        reflectivity: 1,\r\n        envMap: this.webgl.scene.environment,\r\n      }),\r\n      geometry = this.generateMesh()\r\n\r\n    this.mesh = new THREE.Mesh(geometry, material)\r\n\r\n    this.mesh.castShadow = false\r\n    this.mesh.receiveShadow = false\r\n\r\n    this.add(this.mesh)\r\n\r\n    generateSideMeshes(this, geometry, material, 1, 1, -this.options.bounds.y / 2)\r\n  }\r\n\r\n  generateMesh() {\r\n    const geometry = new THREE.PlaneBufferGeometry(\r\n      this.options.bounds.x,\r\n      this.options.bounds.z,\r\n      1,\r\n      1\r\n    )\r\n    geometry.rotateX(-Math.PI / 2)\r\n\r\n    const points = this.waterCurve.getPoints(10)\r\n    const halfHeight = this.options.bounds.y / 2\r\n    let vertices = geometry.getAttribute('position').array\r\n    for (let i = 0, j = 0, l = vertices.length; i < l; i++, j += 3) {\r\n      vertices[j] *= 0.999\r\n      vertices[j + 1] = lerp(-halfHeight, halfHeight, this.options.water.level)\r\n      vertices[j + 2] *= 0.999\r\n    }\r\n\r\n    return geometry\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport Building from './Building'\r\nimport Terrain from './Terrain'\r\nimport Tree from './Tree'\r\nimport Water from './Water'\r\nimport { Sky } from 'three/examples/jsm/objects/Sky'\r\n\r\nexport class Diorama extends THREE.Group {\r\n  constructor(webgl, options) {\r\n    const start = Date.now()\r\n    super(options)\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    this.type = 'Diorama'\r\n\r\n    if (this.options.diorama.seed === undefined || this.options.diorama.seed === null) {\r\n      this.options.diorama.seed = 0\r\n    }\r\n\r\n    console.log(\r\n      `Creating new diorama (seed=${options.diorama.seed}, bounds=[${options.diorama.bounds.x}, ${options.diorama.bounds.y}, ${options.diorama.bounds.z}])`\r\n    )\r\n\r\n    this.setupLights()\r\n\r\n    let seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.diorama.seed)\r\n\r\n    this.terrain = new Terrain(this.webgl, this.options.diorama)\r\n    this.add(this.terrain)\r\n\r\n    this.water = null\r\n    if (this.options.diorama.water.enabled === true) {\r\n      this.water = new Water(this.webgl, this.options.diorama, this.terrain.waterCurve)\r\n      this.add(this.water)\r\n\r\n      if (window.DEBUG) {\r\n        const points = this.terrain.waterCurve.getPoints(10)\r\n        const waterLineGeometry = new THREE.BufferGeometry().setFromPoints(points)\r\n        const material = new THREE.LineBasicMaterial({ color: 0xff00ff })\r\n        const waterLine = new THREE.Line(waterLineGeometry, material)\r\n        this.add(waterLine)\r\n      }\r\n    }\r\n\r\n    const buildingOptions = {\r\n      bounds: this.options.diorama.bounds,\r\n      density: 0.01 * this.options.diorama.buildings,\r\n    }\r\n    this.distributeObjects(Building, buildingOptions, this.terrain)\r\n\r\n    const treeOptions = {\r\n      density: 0.1 * this.options.diorama.vegetation,\r\n      height: 3,\r\n    }\r\n    this.distributeObjects(Tree, treeOptions, this.terrain)\r\n\r\n    this.createBase()\r\n\r\n    if (window.DEBUG) {\r\n      let geometry = new THREE.BoxGeometry(\r\n        this.options.diorama.bounds.x,\r\n        this.options.diorama.bounds.y,\r\n        this.options.diorama.bounds.z\r\n      )\r\n      let wireframe = new THREE.WireframeGeometry(geometry)\r\n\r\n      this.wireframe = new THREE.LineSegments(wireframe)\r\n      this.wireframe.material.depthTest = true\r\n      this.wireframe.material.opacity = 0.2\r\n      this.wireframe.material.transparent = true\r\n      this.add(this.wireframe)\r\n    }\r\n\r\n    const elapsed = Date.now() - start\r\n    console.log(`Generated in ${elapsed / 1000}s`)\r\n  }\r\n\r\n  update(dt, time) {}\r\n\r\n  setupLights() {\r\n    this.skylight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.6)\r\n    this.skylight.color.setHSL(0.6, 1, 0.6)\r\n    this.skylight.groundColor.setHSL(0.095, 1, 0.75)\r\n    this.skylight.position.set(0, 50, 0)\r\n    this.add(this.skylight)\r\n\r\n    const size =\r\n      Math.max(\r\n        this.options.diorama.bounds.x,\r\n        this.options.diorama.bounds.y,\r\n        this.options.diorama.bounds.z\r\n      ) / 2\r\n\r\n    this.sun = new THREE.DirectionalLight(0xffffff, 1)\r\n    this.sun.color.setHSL(0.1, 1, 0.95)\r\n    this.sun.position.set(0.7, 1, 0.6)\r\n    this.sun.position.multiplyScalar(size)\r\n    this.sun.castShadow = true\r\n    this.sun.shadow.mapSize.width = 2048\r\n    this.sun.shadow.mapSize.height = 2048\r\n    this.sun.shadow.camera.left = -size * 1.5\r\n    this.sun.shadow.camera.right = size * 1.5\r\n    this.sun.shadow.camera.top = size * 1.5\r\n    this.sun.shadow.camera.bottom = -size * 1.5\r\n    this.sun.shadow.camera.near = 0.1\r\n    this.sun.shadow.camera.far = size * 3\r\n    this.add(this.sun)\r\n\r\n    if (window.DEBUG) {\r\n      const helper = new THREE.CameraHelper(this.sun.shadow.camera)\r\n      this.add(helper)\r\n    }\r\n\r\n    this.sky = new Sky()\r\n    this.sky.scale.setScalar(1000)\r\n    this.add(this.sky)\r\n\r\n    const uniforms = this.sky.material.uniforms\r\n\r\n    uniforms['turbidity'].value = 10\r\n    uniforms['rayleigh'].value = 2\r\n    uniforms['mieCoefficient'].value = 0.005\r\n    uniforms['mieDirectionalG'].value = 0.8\r\n\r\n    this.sky.material.uniforms['sunPosition'].value.copy(this.sun.position)\r\n\r\n    const pmremGenerator = new THREE.PMREMGenerator(this.webgl.renderer)\r\n    this.webgl.scene.environment = pmremGenerator.fromScene(this.sky).texture\r\n  }\r\n\r\n  createBase() {\r\n    // Base\r\n    const basePadding = 4\r\n    const baseHeight = 2\r\n    const geometry = new THREE.BoxGeometry(\r\n      this.options.diorama.bounds.x + basePadding,\r\n      baseHeight,\r\n      this.options.diorama.bounds.z + basePadding\r\n    )\r\n    const material = new THREE.MeshStandardMaterial({ color: new THREE.Color(0.4, 0.4, 0.4) })\r\n    const base = new THREE.Mesh(geometry, material)\r\n    base.translateY(-this.options.diorama.bounds.y / 2 - baseHeight / 2)\r\n    base.castShadow = true\r\n    base.receiveShadow = true\r\n    this.add(base)\r\n\r\n    // Floor plane\r\n    const floorSize = Math.max(this.options.diorama.bounds.x, this.options.diorama.bounds.z) * 2\r\n    const floorGeometry = new THREE.PlaneGeometry(floorSize, floorSize)\r\n    floorGeometry.rotateX(-Math.PI / 2)\r\n    floorGeometry.translate(0, -this.options.diorama.bounds.y / 2 - baseHeight, 0)\r\n    const floorMaterial = new THREE.ShadowMaterial({ opacity: 0.25 })\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial)\r\n    floor.receiveShadow = true\r\n    this.add(floor)\r\n  }\r\n\r\n  distributeObjects(classToDistribute, options, onObject) {\r\n    let bounds = new THREE.Box3().setFromObject(onObject)\r\n\r\n    const area = (bounds.max.x - bounds.min.x) * (bounds.max.z - bounds.min.z)\r\n    const numObjects = area * options.density\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.diorama.seed),\r\n      raycaster = new THREE.Raycaster()\r\n\r\n    for (let i = 0; i < numObjects; i++) {\r\n      options.seed = this.options.diorama.seed + i\r\n      let position = new THREE.Vector3(rng(), 0, rng())\r\n      position.multiply(new THREE.Vector3().subVectors(bounds.max, bounds.min))\r\n      position.add(new THREE.Vector3(-0.5, 1, -0.5).multiply(this.options.diorama.bounds))\r\n      raycaster.set(position, new THREE.Vector3(0, -1, 0))\r\n\r\n      let intersects = raycaster.intersectObjects(this.children, true)\r\n      let rayColor = 0xff0000\r\n      if (intersects.length > 0) {\r\n        rayColor = 0x0000ff\r\n        if (intersects[0].object === this.terrain.mesh) {\r\n          rayColor = 0x00ff00\r\n          position = intersects[0].point\r\n\r\n          const newObject = new classToDistribute(this.webgl, options)\r\n          newObject.position.set(position.x, position.y, position.z)\r\n          newObject.updateMatrixWorld()\r\n          this.add(newObject)\r\n        }\r\n      }\r\n\r\n      if (window.DEBUG) {\r\n        const arrow = new THREE.ArrowHelper(\r\n          raycaster.ray.direction,\r\n          raycaster.ray.origin,\r\n          this.options.diorama.bounds.y * 1.5,\r\n          rayColor,\r\n          1,\r\n          0.5\r\n        )\r\n        this.add(arrow)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function getDefaultDioramaOptions() {\r\n  const defaultDioramaOptions = {\r\n    seed: 5000,\r\n    bounds: new THREE.Vector3(48, 16, 32),\r\n    biome: 'temperate',\r\n    buildings: 0.1,\r\n    vegetation: 0.4,\r\n    water: {\r\n      enabled: true,\r\n      level: 0.25,\r\n      depth: 1,\r\n      width: 2,\r\n      falloff: 6,\r\n      sand: {\r\n        enabled: true,\r\n        width: 1,\r\n        falloff: 2,\r\n      },\r\n    },\r\n  }\r\n\r\n  // Load previous session settings if available\r\n  const sessionOptions = sessionStorage.getItem('dioramaOptions')\r\n  if (sessionOptions !== null) {\r\n    let parsedOptions = {}\r\n    try {\r\n      parsedOptions = JSON.parse(sessionOptions)\r\n    } catch (err) {\r\n      console.log('Error when parsing session options!')\r\n    }\r\n    Object.assign(defaultDioramaOptions, parsedOptions)\r\n  }\r\n\r\n  return defaultDioramaOptions\r\n}\r\n","import * as THREE from 'three'\r\nimport { Diorama } from '../components/Diorama'\r\nimport { isEmpty } from 'lodash'\r\n\r\n/** Default ranges for option sliders */\r\nconst ranges = {\r\n  options: {\r\n    seed: { max: 10000 },\r\n    buildings: { max: 1, step: 0.01 },\r\n    vegetation: { max: 1, step: 0.01 },\r\n  },\r\n  bounds: {\r\n    x: { min: 5, max: 60 },\r\n    y: { min: 5, max: 30 },\r\n    z: { min: 5, max: 60 },\r\n  },\r\n  water: {\r\n    level: { max: 1, step: 0.01 },\r\n    depth: { max: 10, step: 0.5 },\r\n    width: { min: 0.5, max: 20, step: 0.5 },\r\n    falloff: { min: 0.5, max: 20, step: 0.5 },\r\n  },\r\n  sand: {\r\n    width: { max: 10, step: 0.5 },\r\n    falloff: { max: 10, step: 0.5 },\r\n  },\r\n}\r\n\r\nclass InputControl {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.field = document.createElement('div')\r\n\r\n    this.label = document.createElement('label')\r\n    this.label.innerText = toDisplayString(options.name)\r\n    this.field.appendChild(this.label)\r\n\r\n    this.input = document.createElement('input')\r\n    this.input.onchange = () => this.propertyChanged()\r\n    this.field.appendChild(this.input)\r\n\r\n    options.parent.appendChild(this.field)\r\n  }\r\n\r\n  propertyChanged() {\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  setVisibility(visible) {\r\n    this.field.style.display = visible ? 'block' : 'none'\r\n  }\r\n}\r\n\r\nclass CheckBoxControl extends InputControl {\r\n  constructor(owner, options) {\r\n    super(owner, options)\r\n\r\n    this.input.setAttribute('type', 'checkbox')\r\n    this.input.checked = options.defaultValue == true\r\n  }\r\n\r\n  getValue() {\r\n    return this.input.checked\r\n  }\r\n}\r\n\r\nclass SliderControl extends InputControl {\r\n  constructor(owner, options) {\r\n    super(owner, options)\r\n\r\n    this.input.setAttribute('type', 'range')\r\n    this.input.setAttribute('min', options.min)\r\n    this.input.setAttribute('max', options.max)\r\n    this.input.setAttribute('step', options.step)\r\n    this.input.value = options.defaultValue\r\n  }\r\n\r\n  getValue() {\r\n    return parseFloat(this.input.value)\r\n  }\r\n}\r\n\r\nclass ControlGroup {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.div = document.createElement('div')\r\n    this.heading = document.createElement('h' + options.depth)\r\n    this.heading.innerText = toDisplayString(options.name)\r\n    this.div.appendChild(this.heading)\r\n\r\n    this.controls = {}\r\n\r\n    for (const [key, value] of Object.entries(options.optionsObject)) {\r\n      let childOptions = { name: key, defaultValue: value, parent: this.div }\r\n      switch (typeof value) {\r\n        case 'boolean':\r\n          this.controls[key] = new CheckBoxControl(this, childOptions)\r\n          break\r\n        case 'number':\r\n          Object.assign(childOptions, { min: 0, max: 100, step: 1 })\r\n          if (options.name in ranges && key in ranges[options.name]) {\r\n            Object.assign(childOptions, ranges[options.name][key])\r\n          }\r\n          this.controls[key] = new SliderControl(this, childOptions)\r\n          break\r\n        case 'object':\r\n          if (isEmpty(value) === false) {\r\n            Object.assign(childOptions, { optionsObject: value, depth: options.depth + 1 })\r\n            this.controls[key] = new ControlGroup(this, childOptions)\r\n          }\r\n          break\r\n      }\r\n    }\r\n\r\n    options.parent.appendChild(this.div)\r\n  }\r\n\r\n  propertyChanged() {\r\n    if ('enabled' in this.controls) {\r\n      this.setVisibility(this.controls.enabled.getValue())\r\n    }\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  getValue() {\r\n    let optionValues = {}\r\n    for (const [key, control] of Object.entries(this.controls)) {\r\n      optionValues[key] = control.getValue()\r\n    }\r\n    return optionValues\r\n  }\r\n\r\n  setVisibility(visible) {\r\n    for (const [key, control] of Object.entries(this.controls)) {\r\n      if (key !== 'enabled') {\r\n        this.controls[key].setVisibility(visible)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default class DioramaControls {\r\n  constructor(webgl, options) {\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    const controlsDiv = document.getElementById('controls')\r\n\r\n    this.controls = new ControlGroup(this, {\r\n      name: 'options',\r\n      optionsObject: this.options,\r\n      depth: 1,\r\n      parent: controlsDiv,\r\n    })\r\n  }\r\n\r\n  propertyChanged() {\r\n    if (this.webgl.scene.diorama !== undefined) {\r\n      this.webgl.scene.remove(this.webgl.scene.diorama)\r\n      this.webgl.scene.diorama = undefined\r\n    }\r\n\r\n    const dioramaOptions = this.controls.getValue()\r\n    sessionStorage.setItem('dioramaOptions', JSON.stringify(dioramaOptions))\r\n\r\n    this.webgl.scene.diorama = new Diorama(this.webgl, { diorama: dioramaOptions })\r\n    this.webgl.scene.add(this.webgl.scene.diorama)\r\n  }\r\n}\r\n\r\nfunction toDisplayString(name) {\r\n  return isEmpty(name) ? name : name[0].toUpperCase() + name.slice(1)\r\n}\r\n","import WebGLApp from './lib/WebGLApp'\r\nimport assets from './lib/AssetManager'\r\nimport { Diorama, getDefaultDioramaOptions } from './components/Diorama'\r\nimport DioramaControls from './ui/DioramaControls'\r\n\r\nwindow.DEBUG = window.location.search.includes('debug')\r\n\r\nconst canvas = document.querySelector('#app')\r\n\r\nconst webgl = new WebGLApp({\r\n  canvas,\r\n  alpha: true,\r\n  background: '#222',\r\n  backgroundAlpha: 1,\r\n  showFps: window.DEBUG,\r\n  orbitControls: true,\r\n})\r\n\r\nif (window.DEBUG) {\r\n  window.webgl = webgl\r\n}\r\n\r\nconst defaultDioramaOptions = getDefaultDioramaOptions()\r\n\r\nnew DioramaControls(webgl, defaultDioramaOptions)\r\n\r\n// Hide canvas until assets are loaded\r\nwebgl.canvas.style.visibility = 'hidden'\r\n\r\n// Load any queued assets\r\nassets.load({ renderer: webgl.renderer }).then(() => {\r\n  webgl.scene.diorama = new Diorama(webgl, { diorama: defaultDioramaOptions })\r\n  webgl.scene.add(webgl.scene.diorama)\r\n\r\n  webgl.canvas.style.visibility = ''\r\n\r\n  // Rotate camera target slightly below the center\r\n  webgl.orbitControls.target.set(0, -defaultDioramaOptions.bounds.y / 5, 0)\r\n\r\n  webgl.start()\r\n  webgl.draw()\r\n})\r\n"],"sourceRoot":""}