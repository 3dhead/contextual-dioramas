{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/CannonDebugRenderer.js","webpack:///./src/lib/WebGLApp.js","webpack:///./src/lib/loadTexture.js","webpack:///./src/lib/loadEnvMap.js","webpack:///./src/lib/AssetManager.js","webpack:///./src/components/ContextualObject.js","webpack:///./src/components/Building.js","webpack:///./src/components/ContextQuadtree.js","webpack:///./src/components/Rock.js","webpack:///./src/lib/meshUtils.js","webpack:///./src/components/Terrain.js","webpack:///./src/components/Tree.js","webpack:///./src/components/Water.js","webpack:///./src/components/Diorama.js","webpack:///./src/ui/DioramaControls.js","webpack:///./src/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","CannonDebugRenderer","scene","world","_classCallCheck","this","tmpVec0","CANNON","Vec3","tmpVec1","tmpVec2","tmpQuat0","_meshes","_material","THREE","color","wireframe","_sphereGeometry","_boxGeometry","_planeGeometry","_cylinderGeometry","bodies","meshes","shapeWorldPosition","shapeWorldQuaternion","meshIndex","body","shapes","shape","_updateMesh","mesh","quaternion","vmult","shapeOffsets","position","vadd","mult","shapeOrientations","copy","visible","remove","index","_typeMatch","_createMesh","_scaleMesh","material","geo","type","Shape","types","SPHERE","BOX","PLANE","CONVEXPOLYHEDRON","vertices","v","x","y","z","faces","face","a","b","computeBoundingSphere","computeFaceNormals","geometryId","id","TRIMESH","indices","getTriangleVertices","HEIGHTFIELD","xi","yi","k","getConvexTrianglePillar","pillarConvex","pillarOffset","ii","add","geometry","Sphere","Box","Plane","ConvexPolyhedron","Trimesh","Heightfield","radius","scale","set","halfExtents","multiplyScalar","WebGLApp","_this","_ref","arguments","undefined","_ref$background","background","_ref$backgroundAlpha","backgroundAlpha","_ref$fov","fov","_ref$near","near","_ref$far","far","options","_objectWithoutProperties","WebGLApp_classCallCheck","_updateListeners","writable","_tmpTarget","_lastTime","_width","WebGLApp_height","resize","_ref2","_ref2$width","width","_ref2$height","height","_ref2$pixelRatio","pixelRatio","renderer","getPixelRatio","setPixelRatio","setSize","camera","isPerspectiveCamera","aspect","updateProjectionMatrix","composer","traverse","obj","draw","saveScreenshot","_ref3","_ref3$width","_ref3$height","_ref3$fileName","fileName","dataURI","canvas","toDataURL","saveDataURI","update","dt","time","xrframe","orbitControls","step","cannonDebugRenderer","forEach","_classPrivateFieldLooseBase","fn","passes","pass","isLastElement","renderToScreen","render","start","isRunning","setAnimationLoop","animate","stop","now","stats","begin","Math","min","maxDeltaTime","end","_len","args","Array","_key","child","_objectSpread","antialias","alpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","shadowMap","enabled","sortObjects","domElement","setClearColor","xr","maxPixelRatio","gl","getContext","performance","addEventListener","touchHandler","createTouches","target","filtered","isDragging","on","ev","pos","postprocessing","EffectComposer","addPass","RenderPass","OrbitControls","showWorldWireframes","showFps","Stats","showPanel","document","appendChild","dom","controls","controlsState","State","hideControls","wrapGUI","expanded","closeControls","style","createElement","innerHTML","head","gpu","getGPUTier","glContext","tier","Number","isMobile","toLowerCase","includes","indexOf","innerWidth","innerHeight","devicePixelRatio","cursor","blob","dataURIToBlob","link","download","href","URL","createObjectURL","onclick","setTimeout","revokeObjectURL","removeAttribute","click","loadTexture","_x","_x2","_loadTexture","_callee","url","texture","image","regeneratorRuntime","wrap","_context","prev","next","encoding","setTextureParams","loadImage","crossorigin","sent","needsUpdate","initTexture","abrupt","t0","Error","concat","opt","flipY","mapping","format","isJPEG","search","repeat","wrapS","wrapT","minFilter","magFilter","generateMipmaps","size","renderTarget","outTexture","basePath","extension","urls","equirectangular","pmrem","pmremEquirectangular","highestPowerOfTwo","naturalHeight","fromEquirectangularTexture","dispose","prefix","replace","postfix","Promise","resolve","reject","HDRCubeTextureLoader","load","cubeMap","assignCubemapOptions","pmremGenerator","compileCubemapShader","fromCubemap","pmremCubemap","compileEquirectangularShader","cubeRenderTarget","fromEquirectangular","AssetManager","TypeError","AssetManager_classPrivateFieldLooseBase","_cache","_onProgressListeners","AssetManager_objectWithoutProperties","_getQueued","_queue","AssetManager_objectSpread","_extractType","find","item","ext","lastIndexOf","test","itemLoadingStart","Date","_loadItem","DEBUG","console","log","prettyMs","error","queue","total","_this2","loadingStart","pMap","_ref4","AssetManager_asyncToGenerator","mark","_callee2","percent","_context2","logError","_x3","_x4","concurrency","_asyncConcurrency","errors","_logs","filter","groupLog","_ref5","GLTFLoader","err","fetch","then","response","json","_loadEnvMap","loadEnvMap","arrayBuffer","text","_len2","_key2","_console","groupCollapsed","_console2","_toConsumableArray","groupEnd","lib_AssetManager","ContextualObject","webgl","ContextualObject_classCallCheck","_super","seedrandom","require","rng","seed","constructor","setRotationFromEuler","degToRad","randomAngle","materialOptions","variation","g","envMap","environment","roughness","castShadow","receiveShadow","className","distributionOptions","labels","baseDensity","sizeVariation","allowUnderwater","Building","Building_classCallCheck","bounds","translate","addMesh","grass","Quad","ContextQuadtree_classCallCheck","boundsSize","getSize","topLeft","topRight","bottomLeft","bottomRight","point","getPoint","containsPoint","isSmallestAllowedSize","halfX","max","halfY","clone","setColor","warn","_i","_quads","quad","getColor","drawDebug","baseColor","numSamples","sample","_i2","_sample","_step","_iterator","_createForOfIteratorHelper","done","tap","e","f","_step2","_iterator2","label","addLabels","minDensity","density","getLabelDensity","bestQuad","bestDensity","quadDensity","findQuadWithMinLabelDensity","maxDensity","findQuadWithMaxLabelDensity","_step3","requireAll","_iterator3","hasLabel","isArray","hasLabels","_i3","_quads2","positionHasLabels","_i4","_quads3","getLabels","box","center","setFromCenterAndSize","helper","Rock","Rock_classCallCheck","baseSize","terrainColor","lerp","isUnderwater","sand","generateSideMeshes","group","planeGeometry","xSegments","zSegments","lowestPoint","topVertices","getAttribute","array","computeBoundingBox","boundingBox","newHeight","side","xSide","sideGeometry","rotateY","PI","stride","Terrain","Terrain_classCallCheck","Terrain_assertThisInitialized","_bottomPadding","generateHeight","rotateX","heightData","water","waterCurve","getWaterCurve","modifyGeometryForWater","computeVertexNormals","generateTexture","map","sideMaterial","perlin","ImprovedNoise","quality","Float32Array","abs","noise","heightScale","Terrain_classPrivateFieldLooseBase","multiplier","context","imageData","fillStyle","fillRect","getImageData","halfHeight","waterLevel","level","normals","cliff","underwater","upVector","sandMax","falloff","clamp","normal","cliffSteepness","dot","blend","contextQuadtree","putImageData","canvasScaled","drawImage","points","getPoints","vertex","vertex2D","closest","closestPointToPoint","distance","distanceTo","getWaterVertexHeight","current","calculated","depth","lowest","raycaster","multiply","sub","intersects","intersectObject","hit","tempVec","minDist","xTest","zTest","line","xPlane","zPlane","endPoint","intersectLine","startPoint","Tree","Tree_classCallCheck","baseHeight","trunkVerticalOffset","trunkWidth","Water","Water_classCallCheck","Water_possibleConstructorReturn","rx","ry","rz","transparent","opacity","reflectivity","generateMesh","Water_assertThisInitialized","ALL_ASSET_CLASSES","Diorama","_THREE$Group","Diorama_inherits","Diorama_createSuper","Diorama_classCallCheck","diorama","halfZ","maxSize","quadBounds","setupLights","terrain","waterLineGeometry","setFromPoints","waterLine","Diorama_createForOfIteratorHelper","ASSET_CLASS","distributeObjects","createBase","depthTest","elapsed","skylight","setHSL","groundColor","sun","shadow","mapSize","left","right","top","bottom","RGBELoader","setDataType","setPath","toneMapping","toneMappingExposure","outputEncoding","base","translateY","floorSize","floorGeometry","floorMaterial","floor","classToDistribute","onMesh","setFromObject","numObjects","assetClasses","subVectors","meetsDistributionRequirements","intersectObjects","children","rayColor","getAverageColor","newObject","updateMatrixWorld","arrow","ray","direction","origin","_Object$entries","entries","_Object$entries$_i","_slicedToArray","keys","ranges","InputControl","owner","DioramaControls_classCallCheck","field","innerText","toDisplayString","input","onchange","propertyChanged","parent","display","CheckBoxControl","setAttribute","checked","defaultValue","SliderControl","_this3","_super2","parseFloat","AssetArrayGroup","div","heading","childOptions","optionsObject","DioramaControls_slicedToArray","assign","_Object$entries2","_Object$entries2$_i","getValue","ControlGroup","_Object$entries3","_Object$entries3$_i","DioramaControls_typeof","isEmpty_default","setVisibility","optionValues","_Object$entries4","_Object$entries4$_i","control","_i5","_Object$entries5","_Object$entries5$_i","DioramaControls","controlsDiv","getElementById","dioramaOptions","sessionStorage","setItem","JSON","stringify","toUpperCase","location","querySelector","defaultDioramaOptions","biome","assetClass","getAssetClassDefaults","sessionOptions","getItem","parsedOptions","parse","getDefaultDioramaOptions","visibility","assets"],"mappings":"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","file":"app.9dc693fe.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([285,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable no-underscore-dangle */\nimport * as THREE from 'three'\nimport CANNON from 'cannon'\n\n/**\n * Adds Three.js primitives into the scene where all the Cannon bodies and shapes are.\n * @class CannonDebugRenderer\n * @param {THREE.Scene} scene\n * @param {CANNON.World} world\n */\n\nexport default class CannonDebugRenderer {\n  tmpVec0 = new CANNON.Vec3()\n  tmpVec1 = new CANNON.Vec3()\n  tmpVec2 = new CANNON.Vec3()\n  tmpQuat0 = new CANNON.Vec3()\n\n  constructor(scene, world) {\n    this.scene = scene\n    this.world = world\n\n    this._meshes = []\n\n    this._material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true })\n    this._sphereGeometry = new THREE.SphereGeometry(1)\n    this._boxGeometry = new THREE.BoxGeometry(1, 1, 1)\n    this._planeGeometry = new THREE.PlaneGeometry(10, 10, 10, 10)\n    this._cylinderGeometry = new THREE.CylinderGeometry(1, 1, 10, 10)\n  }\n\n  update() {\n    const { bodies } = this.world\n    const meshes = this._meshes\n    const shapeWorldPosition = this.tmpVec0\n    const shapeWorldQuaternion = this.tmpQuat0\n\n    let meshIndex = 0\n\n    for (let i = 0; i !== bodies.length; i++) {\n      const body = bodies[i]\n\n      for (let j = 0; j !== body.shapes.length; j++) {\n        const shape = body.shapes[j]\n\n        this._updateMesh(meshIndex, body, shape)\n\n        const mesh = meshes[meshIndex]\n\n        if (mesh) {\n          // Get world position\n          body.quaternion.vmult(body.shapeOffsets[j], shapeWorldPosition)\n          body.position.vadd(shapeWorldPosition, shapeWorldPosition)\n\n          // Get world quaternion\n          body.quaternion.mult(body.shapeOrientations[j], shapeWorldQuaternion)\n\n          // Copy to meshes\n          mesh.position.copy(shapeWorldPosition)\n          mesh.quaternion.copy(shapeWorldQuaternion)\n\n          // Change the visiblity\n          if ('visible' in body) {\n            mesh.visible = body.visible\n          }\n        }\n\n        meshIndex += 1\n      }\n    }\n\n    for (let i = meshIndex; i < meshes.length; i++) {\n      const mesh = meshes[i]\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n    }\n\n    meshes.length = meshIndex\n  }\n\n  _updateMesh(index, body, shape) {\n    let mesh = this._meshes[index]\n    if (!this._typeMatch(mesh, shape)) {\n      if (mesh) {\n        this.scene.remove(mesh)\n      }\n      mesh = this._meshes[index] = this._createMesh(shape)\n    }\n    this._scaleMesh(mesh, shape)\n  }\n\n  _createMesh(shape) {\n    let mesh\n    const material = this._material\n\n    const geo = new THREE.Geometry()\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh = new THREE.Mesh(this._sphereGeometry, material)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh = new THREE.Mesh(this._boxGeometry, material)\n        break\n\n      case CANNON.Shape.types.PLANE:\n        mesh = new THREE.Mesh(this._planeGeometry, material)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        // Create mesh\n\n        // Add vertices\n        for (let i = 0; i < shape.vertices.length; i++) {\n          const v = shape.vertices[i]\n          geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z))\n        }\n\n        for (let i = 0; i < shape.faces.length; i++) {\n          const face = shape.faces[i]\n\n          // add triangles\n          const a = face[0]\n          for (let j = 1; j < face.length - 1; j++) {\n            const b = face[j]\n            const c = face[j + 1]\n            geo.faces.push(new THREE.Face3(a, b, c))\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        for (let i = 0; i < shape.indices.length / 3; i++) {\n          shape.getTriangleVertices(i, this.tmpVec0, this.tmpVec1, this.tmpVec2)\n          geo.vertices.push(\n            new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n            new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n            new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n          )\n          const j = geo.vertices.length - 3\n          geo.faces.push(new THREE.Face3(j, j + 1, j + 2))\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        for (let xi = 0; xi < shape.data.length - 1; xi++) {\n          for (let yi = 0; yi < shape.data[xi].length - 1; yi++) {\n            for (let k = 0; k < 2; k++) {\n              shape.getConvexTrianglePillar(xi, yi, k === 0)\n              this.tmpVec0.copy(shape.pillarConvex.vertices[0])\n              this.tmpVec1.copy(shape.pillarConvex.vertices[1])\n              this.tmpVec2.copy(shape.pillarConvex.vertices[2])\n              this.tmpVec0.vadd(shape.pillarOffset, this.tmpVec0)\n              this.tmpVec1.vadd(shape.pillarOffset, this.tmpVec1)\n              this.tmpVec2.vadd(shape.pillarOffset, this.tmpVec2)\n              geo.vertices.push(\n                new THREE.Vector3(this.tmpVec0.x, this.tmpVec0.y, this.tmpVec0.z),\n                new THREE.Vector3(this.tmpVec1.x, this.tmpVec1.y, this.tmpVec1.z),\n                new THREE.Vector3(this.tmpVec2.x, this.tmpVec2.y, this.tmpVec2.z)\n              )\n              const ii = geo.vertices.length - 3\n              geo.faces.push(new THREE.Face3(ii, ii + 1, ii + 2))\n            }\n          }\n        }\n        geo.computeBoundingSphere()\n        geo.computeFaceNormals()\n        mesh = new THREE.Mesh(geo, material)\n        shape.geometryId = geo.id\n        break\n      default:\n        break\n    }\n\n    if (mesh) {\n      this.scene.add(mesh)\n    }\n\n    return mesh\n  }\n\n  _typeMatch(mesh, shape) {\n    if (!mesh) {\n      return false\n    }\n    const geo = mesh.geometry\n    return (\n      (geo instanceof THREE.SphereGeometry && shape instanceof CANNON.Sphere) ||\n      (geo instanceof THREE.BoxGeometry && shape instanceof CANNON.Box) ||\n      (geo instanceof THREE.PlaneGeometry && shape instanceof CANNON.Plane) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.ConvexPolyhedron) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Trimesh) ||\n      (geo.id === shape.geometryId && shape instanceof CANNON.Heightfield)\n    )\n  }\n\n  _scaleMesh(mesh, shape) {\n    const { radius } = shape\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        mesh.scale.set(radius, radius, radius)\n        break\n\n      case CANNON.Shape.types.BOX:\n        mesh.scale.copy(shape.halfExtents)\n        mesh.scale.multiplyScalar(2)\n        break\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        mesh.scale.set(1, 1, 1)\n        break\n\n      case CANNON.Shape.types.TRIMESH:\n        mesh.scale.copy(shape.scale)\n        break\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        mesh.scale.set(1, 1, 1)\n        break\n      default:\n        break\n    }\n  }\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\r\n// really awesome dude, give him a follow!\r\n// https://github.com/mattdesl/threejs-app/blob/master/src/webgl/WebGLApp.js\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport createTouches from 'touches'\r\nimport dataURIToBlob from 'datauritoblob'\r\nimport Stats from 'stats.js'\r\nimport State from 'controls-state'\r\nimport wrapGUI from 'controls-gui'\r\nimport { getGPUTier } from 'detect-gpu'\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\r\nimport CannonDebugRenderer from './CannonDebugRenderer'\r\n\r\nexport default class WebGLApp {\r\n  #updateListeners = []\r\n  #tmpTarget = new THREE.Vector3()\r\n  #lastTime\r\n  #width\r\n  #height\r\n\r\n  constructor({\r\n    background = '#000',\r\n    backgroundAlpha = 1,\r\n    fov = 40,\r\n    near = 0.1,\r\n    far = 500,\r\n    ...options\r\n  } = {}) {\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n      alpha: false,\r\n      // enabled for saving screenshots of the canvas,\r\n      // may wish to disable this for perf reasons\r\n      preserveDrawingBuffer: true,\r\n      failIfMajorPerformanceCaveat: true,\r\n      ...options,\r\n    })\r\n\r\n    this.renderer.shadowMap.enabled = true\r\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\r\n    this.renderer.sortObjects = false\r\n    this.canvas = this.renderer.domElement\r\n\r\n    this.renderer.setClearColor(background, backgroundAlpha)\r\n\r\n    if (options.xr) {\r\n      this.renderer.xr.enabled = true\r\n    }\r\n\r\n    // save the fixed dimensions\r\n    this.#width = options.width\r\n    this.#height = options.height\r\n\r\n    // clamp pixel ratio for performance\r\n    this.maxPixelRatio = options.maxPixelRatio || 2\r\n    // clamp delta to stepping anything too far forward\r\n    this.maxDeltaTime = options.maxDeltaTime || 1 / 30\r\n\r\n    // setup a basic camera\r\n    this.camera = new THREE.PerspectiveCamera(fov, 1, near, far)\r\n\r\n    this.scene = new THREE.Scene()\r\n\r\n    this.gl = this.renderer.getContext()\r\n\r\n    this.time = 0\r\n    this.isRunning = false\r\n    this.#lastTime = performance.now()\r\n\r\n    // handle resize events\r\n    window.addEventListener('resize', this.resize)\r\n    window.addEventListener('orientationchange', this.resize)\r\n\r\n    // force an initial resize event\r\n    this.resize()\r\n\r\n    // __________________________ADDONS__________________________\r\n\r\n    // really basic touch handler that propagates through the scene\r\n    this.touchHandler = createTouches(this.canvas, {\r\n      target: this.canvas,\r\n      filtered: true,\r\n    })\r\n    this.isDragging = false\r\n    this.touchHandler.on('start', (ev, pos) => {\r\n      this.isDragging = true\r\n      this.traverse('onPointerDown', ev, pos)\r\n    })\r\n    this.touchHandler.on('move', (ev, pos) => this.traverse('onPointerMove', ev, pos))\r\n    this.touchHandler.on('end', (ev, pos) => {\r\n      this.isDragging = false\r\n      this.traverse('onPointerUp', ev, pos)\r\n    })\r\n\r\n    // expose a composer for postprocessing passes\r\n    if (options.postprocessing) {\r\n      this.composer = new EffectComposer(this.renderer)\r\n      this.composer.addPass(new RenderPass(this.scene, this.camera))\r\n    }\r\n\r\n    // set up a simple orbit controller\r\n    if (options.orbitControls) {\r\n      this.camera.position.set(30, 20, 60)\r\n      this.orbitControls = new OrbitControls(this.camera, this.renderer.domElement)\r\n      this.orbitControls.update()\r\n    }\r\n\r\n    // Attach the Cannon physics engine\r\n    if (options.world) {\r\n      this.world = options.world\r\n      if (options.showWorldWireframes) {\r\n        this.cannonDebugRenderer = new CannonDebugRenderer(this.scene, this.world)\r\n      }\r\n    }\r\n\r\n    // show the fps meter\r\n    if (options.showFps) {\r\n      this.stats = new Stats()\r\n      this.stats.showPanel(0)\r\n      document.body.appendChild(this.stats.dom)\r\n    }\r\n\r\n    // initialize the controls-state\r\n    if (options.controls) {\r\n      const controlsState = State(options.controls)\r\n      this.controls = options.hideControls\r\n        ? controlsState\r\n        : wrapGUI(controlsState, { expanded: !options.closeControls })\r\n\r\n      // add the custom controls-gui styles\r\n      if (!options.hideControls) {\r\n        const styles = `\r\n          [class^=\"controlPanel-\"] [class*=\"__field\"]::before {\r\n            content: initial !important;\r\n          }\r\n          [class^=\"controlPanel-\"] [class*=\"__labelText\"] {\r\n            text-indent: 6px !important;\r\n          }\r\n          [class^=\"controlPanel-\"] [class*=\"__field--button\"] > button::before {\r\n            content: initial !important;\r\n          }\r\n        `\r\n        const style = document.createElement('style')\r\n        style.type = 'text/css'\r\n        style.innerHTML = styles\r\n        document.head.appendChild(style)\r\n      }\r\n    }\r\n\r\n    // detect the gpu info\r\n    const gpu = getGPUTier({ glContext: this.renderer.getContext() })\r\n    this.gpu = {\r\n      name: gpu.type,\r\n      tier: Number(gpu.tier.slice(-1)),\r\n      isMobile: gpu.tier.toLowerCase().includes('mobile'),\r\n    }\r\n  }\r\n\r\n  get width() {\r\n    return this.#width || window.innerWidth\r\n  }\r\n\r\n  get height() {\r\n    return this.#height || window.innerHeight\r\n  }\r\n\r\n  get pixelRatio() {\r\n    return Math.min(this.maxPixelRatio, window.devicePixelRatio)\r\n  }\r\n\r\n  resize = ({ width = this.width, height = this.height, pixelRatio = this.pixelRatio } = {}) => {\r\n    // update pixel ratio if necessary\r\n    if (this.renderer.getPixelRatio() !== pixelRatio) {\r\n      this.renderer.setPixelRatio(pixelRatio)\r\n    }\r\n\r\n    // setup new size & update camera aspect if necessary\r\n    this.renderer.setSize(width, height)\r\n    if (this.camera.isPerspectiveCamera) {\r\n      this.camera.aspect = width / height\r\n    }\r\n    this.camera.updateProjectionMatrix()\r\n\r\n    // resize also the composer\r\n    if (this.composer) {\r\n      this.composer.setSize(pixelRatio * width, pixelRatio * height)\r\n    }\r\n\r\n    // recursively tell all child objects to resize\r\n    this.scene.traverse((obj) => {\r\n      if (typeof obj.resize === 'function') {\r\n        obj.resize({\r\n          width,\r\n          height,\r\n          pixelRatio,\r\n        })\r\n      }\r\n    })\r\n\r\n    // draw a frame to ensure the new size has been registered visually\r\n    this.draw()\r\n    return this\r\n  }\r\n\r\n  // convenience function to trigger a PNG download of the canvas\r\n  saveScreenshot = ({ width = 2560, height = 1440, fileName = 'image.png' } = {}) => {\r\n    // force a specific output size\r\n    this.resize({ width, height, pixelRatio: 1 })\r\n    this.draw()\r\n\r\n    const dataURI = this.canvas.toDataURL('image/png')\r\n\r\n    // reset to default size\r\n    this.resize()\r\n    this.draw()\r\n\r\n    // save\r\n    saveDataURI(fileName, dataURI)\r\n  }\r\n\r\n  update = (dt, time, xrframe) => {\r\n    if (this.orbitControls) {\r\n      this.orbitControls.update()\r\n\r\n      // reposition to orbit controls\r\n      //this.camera.up.fromArray(this.orbitControls.up)\r\n      //this.camera.position.fromArray(this.orbitControls.position)\r\n      //this.#tmpTarget.fromArray(this.orbitControls.target)\r\n      //this.camera.lookAt(this.#tmpTarget)\r\n    }\r\n\r\n    // recursively tell all child objects to update\r\n    this.scene.traverse((obj) => {\r\n      if (typeof obj.update === 'function') {\r\n        obj.update(dt, time, xrframe)\r\n      }\r\n    })\r\n\r\n    if (this.world) {\r\n      // update the Cannon physics engine\r\n      this.world.step(1 / 60, dt)\r\n\r\n      // update the debug wireframe renderer\r\n      if (this.cannonDebugRenderer) {\r\n        this.cannonDebugRenderer.update()\r\n      }\r\n\r\n      // recursively tell all child bodies to update\r\n      this.world.bodies.forEach((body) => {\r\n        if (typeof body.update === 'function') {\r\n          body.update(dt, time)\r\n        }\r\n      })\r\n    }\r\n\r\n    // call the update listeners\r\n    this.#updateListeners.forEach((fn) => fn(dt, time, xrframe))\r\n\r\n    return this\r\n  }\r\n\r\n  onUpdate(fn) {\r\n    this.#updateListeners.push(fn)\r\n  }\r\n\r\n  offUpdate(fn) {\r\n    const index = this.#updateListeners.indexOf(fn)\r\n\r\n    // return silently if the function can't be found\r\n    if (index === -1) {\r\n      return\r\n    }\r\n\r\n    this.#updateListeners.splice(index, 1)\r\n  }\r\n\r\n  draw = () => {\r\n    if (this.composer) {\r\n      // make sure to always render the last pass\r\n      this.composer.passes.forEach((pass, i, passes) => {\r\n        const isLastElement = i === passes.length - 1\r\n\r\n        if (isLastElement) {\r\n          pass.renderToScreen = true\r\n        } else {\r\n          pass.renderToScreen = false\r\n        }\r\n      })\r\n\r\n      this.composer.render()\r\n    } else {\r\n      this.renderer.render(this.scene, this.camera)\r\n    }\r\n    return this\r\n  }\r\n\r\n  start = () => {\r\n    if (this.isRunning) return\r\n    this.renderer.setAnimationLoop(this.animate)\r\n    this.isRunning = true\r\n    return this\r\n  }\r\n\r\n  stop = () => {\r\n    if (!this.isRunning) return\r\n    this.renderer.setAnimationLoop(null)\r\n    this.isRunning = false\r\n    return this\r\n  }\r\n\r\n  animate = (now, xrframe) => {\r\n    if (!this.isRunning) return\r\n\r\n    if (this.stats) this.stats.begin()\r\n\r\n    const dt = Math.min(this.maxDeltaTime, (now - this.#lastTime) / 1000)\r\n    this.time += dt\r\n    this.#lastTime = now\r\n    this.update(dt, this.time, xrframe)\r\n    this.draw()\r\n\r\n    if (this.stats) this.stats.end()\r\n  }\r\n\r\n  traverse = (fn, ...args) => {\r\n    this.scene.traverse((child) => {\r\n      if (typeof child[fn] === 'function') {\r\n        child[fn].apply(child, args)\r\n      }\r\n    })\r\n  }\r\n\r\n  get cursor() {\r\n    return this.canvas.style.cursor\r\n  }\r\n\r\n  set cursor(cursor) {\r\n    if (cursor) {\r\n      this.canvas.style.cursor = cursor\r\n    } else {\r\n      this.canvas.style.cursor = null\r\n    }\r\n  }\r\n}\r\n\r\nfunction saveDataURI(name, dataURI) {\r\n  const blob = dataURIToBlob(dataURI)\r\n\r\n  // force download\r\n  const link = document.createElement('a')\r\n  link.download = name\r\n  link.href = window.URL.createObjectURL(blob)\r\n  link.onclick = setTimeout(() => {\r\n    window.URL.revokeObjectURL(blob)\r\n    link.removeAttribute('href')\r\n  }, 0)\r\n\r\n  link.click()\r\n}\r\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadTexture.js\nimport * as THREE from 'three'\nimport loadImage from 'image-promise'\n\nexport default async function loadTexture(url, options) {\n  const texture = new THREE.Texture()\n  texture.name = url\n  texture.encoding = options.encoding || THREE.LinearEncoding\n  setTextureParams(url, texture, options)\n\n  try {\n    const image = await loadImage(url, { crossorigin: 'anonymous' })\n\n    texture.image = image\n    texture.needsUpdate = true\n    if (options.renderer) {\n      // Force texture to be uploaded to GPU immediately,\n      // this will avoid \"jank\" on first rendered frame\n      options.renderer.initTexture(texture)\n    }\n    return texture\n  } catch (err) {\n    throw new Error(`Could not load texture ${url}`)\n  }\n}\n\nfunction setTextureParams(url, texture, opt) {\n  if (typeof opt.flipY === 'boolean') texture.flipY = opt.flipY\n  if (typeof opt.mapping !== 'undefined') {\n    texture.mapping = opt.mapping\n  }\n  if (typeof opt.format !== 'undefined') {\n    texture.format = opt.format\n  } else {\n    // choose a nice default format\n    const isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data:image\\/jpeg/) === 0\n    texture.format = isJPEG ? THREE.RGBFormat : THREE.RGBAFormat\n  }\n  if (opt.repeat) texture.repeat.copy(opt.repeat)\n  texture.wrapS = opt.wrapS || THREE.ClampToEdgeWrapping\n  texture.wrapT = opt.wrapT || THREE.ClampToEdgeWrapping\n  texture.minFilter = opt.minFilter || THREE.LinearMipMapLinearFilter\n  texture.magFilter = opt.magFilter || THREE.LinearFilter\n  texture.generateMipmaps = opt.generateMipmaps !== false\n}\n","// Inspiration for this code goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/loadEnvMap.js\nimport * as THREE from 'three'\nimport highestPowerOfTwo from 'highest-power-two'\nimport { HDRCubeTextureLoader } from 'three/examples/jsm/loaders/HDRCubeTextureLoader'\nimport loadTexture from './loadTexture'\n\nexport default async function loadEnvMap(url, options) {\n  const renderer = options.renderer\n\n  if (!renderer) {\n    throw new Error(`Env map requires renderer to passed in the options for ${url}!`)\n  }\n\n  if (options.equirectangular) {\n    const texture = await loadTexture(url, { renderer })\n\n    if (options.pmrem) {\n      return pmremEquirectangular(texture, renderer)\n    } else {\n      const size = highestPowerOfTwo(texture.image.naturalHeight)\n      const renderTarget = new THREE.WebGLCubeRenderTarget(size, {\n        generateMipmaps: true,\n        minFilter: THREE.LinearMipmapLinearFilter,\n        magFilter: THREE.LinearFilter,\n      })\n\n      const outTexture = renderTarget.fromEquirectangularTexture(renderer, texture)\n\n      texture.dispose() // dispose original texture\n      texture.image.data = null // remove image reference\n\n      return outTexture\n    }\n  }\n\n  const basePath = url\n  const extension = options.extension || '.jpg'\n  const urls = generateCubeUrls(`${basePath.replace(/\\/$/, '')}/`, extension)\n\n  if (extension === '.hdr') {\n    // load a float HDR texture\n    return new Promise((resolve, reject) => {\n      new HDRCubeTextureLoader().load(\n        THREE.UnsignedByteType,\n        urls,\n        cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n        null,\n        () => reject(new Error(`Could not load env map: ${basePath}`))\n      )\n    })\n  }\n\n  // load a RGBM encoded texture\n  return new Promise((resolve, reject) => {\n    new THREE.CubeTextureLoader().load(\n      urls,\n      cubeMap => resolve(assignCubemapOptions(cubeMap, options)),\n      null,\n      () => reject(new Error(`Could not load env map: ${basePath}`))\n    )\n  })\n}\n\nfunction assignCubemapOptions(cubeMap, options) {\n  if (options.encoding) {\n    cubeMap.encoding = options.encoding\n  }\n  if (options.format) {\n    cubeMap.format = options.format\n  }\n  if (options.pmrem) {\n    cubeMap = pmremCubemap(cubeMap, options.renderer)\n  }\n  return cubeMap\n}\n\n// prefilter the environment map for irradiance\nfunction pmremEquirectangular(texture, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileEquirectangularShader()\n\n  const cubeRenderTarget = pmremGenerator.fromEquirectangular(texture)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  texture.dispose() // dispose original texture\n  texture.image.data = null // remove image reference\n\n  return cubeRenderTarget.texture\n}\n\n// prefilter the environment map for irradiance\nfunction pmremCubemap(cubeMap, renderer) {\n  const pmremGenerator = new THREE.PMREMGenerator(renderer)\n  pmremGenerator.compileCubemapShader()\n  const renderTarget = pmremGenerator.fromCubemap(cubeMap)\n\n  pmremGenerator.dispose() // dispose PMREMGenerator\n  cubeMap.dispose() // dispose original texture\n  cubeMap.image.data = null // remove image reference\n\n  return renderTarget.texture\n}\n\nfunction generateCubeUrls(prefix, postfix) {\n  return [\n    `${prefix}px${postfix}`,\n    `${prefix}nx${postfix}`,\n    `${prefix}py${postfix}`,\n    `${prefix}ny${postfix}`,\n    `${prefix}pz${postfix}`,\n    `${prefix}nz${postfix}`,\n  ]\n}\n","// Inspiration for this class goes to Matt DesLauriers @mattdesl,\n// really awesome dude, give him a follow!\n// https://github.com/mattdesl/threejs-app/blob/master/src/util/AssetManager.js\nimport pMap from 'p-map'\nimport prettyMs from 'pretty-ms'\nimport loadImage from 'image-promise'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport loadTexture from './loadTexture'\nimport loadEnvMap from './loadEnvMap'\n\nclass AssetManager {\n  #queue = []\n  #cache = {}\n  #onProgressListeners = []\n  #asyncConcurrency = 10\n  #logs = []\n\n  addProgressListener(fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('onProgress must be a function')\n    }\n    this.#onProgressListeners.push(fn)\n  }\n\n  // Add an asset to be queued, input: { url, type, ...options }\n  queue({ url, type, ...options }) {\n    if (!url) throw new TypeError('Must specify a URL or opt.url for AssetManager.queue()')\n    if (!this._getQueued(url)) {\n      this.#queue.push({ url, type: type || this._extractType(url), ...options })\n    }\n\n    return url\n  }\n\n  _getQueued(url) {\n    return this.#queue.find((item) => item.url === url)\n  }\n\n  _extractType(url) {\n    const ext = url.slice(url.lastIndexOf('.'))\n\n    switch (true) {\n      case /\\.(gltf|glb)$/i.test(ext):\n        return 'gltf'\n      case /\\.json$/i.test(ext):\n        return 'json'\n      case /\\.svg$/i.test(ext):\n        return 'svg'\n      case /\\.(jpe?g|png|gif|bmp|tga|tif)$/i.test(ext):\n        return 'image'\n      case /\\.(wav|mp3)$/i.test(ext):\n        return 'audio'\n      case /\\.(mp4|webm|ogg|ogv)$/i.test(ext):\n        return 'video'\n      default:\n        throw new Error(`Could not load ${url}, unknown file extension!`)\n    }\n  }\n\n  // Fetch a loaded asset by URL\n  get = (url) => {\n    if (!url) throw new TypeError('Must specify an URL for AssetManager.get()')\n\n    return this.#cache[url]\n  }\n\n  // Loads a single asset\n  async loadSingle({ renderer, ...item }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the loadSingle function.')\n    }\n\n    try {\n      const itemLoadingStart = Date.now()\n\n      this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n      if (window.DEBUG) {\n        console.log(\n          `📦 Loaded single asset %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n          'color:blue',\n          'color:black'\n        )\n      }\n\n      return item.url\n    } catch (err) {\n      delete this.#cache[item.url]\n      console.error(`📦 Asset ${item.url} was not loaded:\\n${err}`)\n    }\n  }\n\n  // Loads all queued assets\n  async load({ renderer }) {\n    // renderer is used to load textures and env maps,\n    // but require it always since it is an extensible pattern\n    if (!renderer) {\n      throw new Error('You must provide a renderer to the load function.')\n    }\n\n    const queue = this.#queue.slice()\n    this.#queue.length = 0 // clear queue\n\n    const total = queue.length\n    if (total === 0) {\n      // resolve first this functions and then call the progress listeners\n      setTimeout(() => this.#onProgressListeners.forEach((fn) => fn(1)), 0)\n      return\n    }\n\n    const loadingStart = Date.now()\n\n    await pMap(\n      queue,\n      async (item, i) => {\n        try {\n          const itemLoadingStart = Date.now()\n\n          this.#cache[item.url] = await this._loadItem({ renderer, ...item })\n\n          if (window.DEBUG) {\n            this.log(\n              `Loaded %c${item.url}%c in ${prettyMs(Date.now() - itemLoadingStart)}`,\n              'color:blue',\n              'color:black'\n            )\n          }\n        } catch (err) {\n          this.logError(`Asset ${item.url} was not loaded:\\n${err}`)\n        }\n\n        const percent = (i + 1) / total\n        this.#onProgressListeners.forEach((fn) => fn(percent))\n      },\n      { concurrency: this.#asyncConcurrency }\n    )\n\n    if (window.DEBUG) {\n      const errors = this.#logs.filter((log) => log.type === 'error')\n\n      if (errors.length === 0) {\n        this.groupLog(`📦 Assets loaded in ${prettyMs(Date.now() - loadingStart)} ⏱`)\n      } else {\n        this.groupLog(\n          `📦 %c Could not load ${errors.length} asset${errors.length > 1 ? 's' : ''} `,\n          'color:white;background:red;'\n        )\n      }\n    }\n  }\n\n  // Loads a single asset on demand, returning from\n  // cache if it exists otherwise adding it to the cache\n  // after loading.\n  _loadItem({ url, type, renderer, ...options }) {\n    if (url in this.#cache) {\n      return this.#cache[url]\n    }\n\n    switch (type) {\n      case 'gltf':\n        return new Promise((resolve, reject) => {\n          new GLTFLoader().load(url, resolve, null, (err) =>\n            reject(new Error(`Could not load GLTF asset ${url}:\\n${err}`))\n          )\n        })\n      case 'json':\n        return fetch(url).then((response) => response.json())\n      case 'env-map':\n        return loadEnvMap(url, { renderer, ...options })\n      case 'svg':\n      case 'image':\n        return loadImage(url, { crossorigin: 'anonymous' })\n      case 'texture':\n        return loadTexture(url, { renderer, ...options })\n      case 'audio':\n        // You might not want to load big audio files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.arrayBuffer())\n      case 'video':\n        // You might not want to load big video files and\n        // store them in memory, that might be inefficient.\n        // Rather load them outside of the queue\n        return fetch(url).then((response) => response.blob())\n      default:\n        throw new Error(`Could not load ${url}, the type ${type} is unknown!`)\n    }\n  }\n\n  log(...text) {\n    this.#logs.push({ type: 'log', text })\n  }\n\n  logError(...text) {\n    this.#logs.push({ type: 'error', text })\n  }\n\n  groupLog(...text) {\n    console.groupCollapsed(...text)\n    this.#logs.forEach((log) => {\n      console[log.type](...log.text)\n    })\n    console.groupEnd()\n\n    this.#logs.length = 0 // clear logs\n  }\n}\n\n// asset manager is a singleton, you can require it from\n// different files and use the same instance.\n// A plain js object would have worked just fine...\nexport default new AssetManager()\n","import * as THREE from 'three'\r\nimport { degToRad } from 'canvas-sketch-util/math'\r\n\r\nexport default class ContextualObject extends THREE.Group {\r\n  static className = null\r\n  static distributionOptions = {}\r\n  static labels = []\r\n  static baseDensity = 0\r\n  static randomAngle = new THREE.Vector3(0, 0, 0)\r\n  static sizeVariation = 0.5\r\n  static allowUnderwater = false\r\n\r\n  constructor(webgl, options) {\r\n    super(options)\r\n\r\n    this.type = 'ContextualObject'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    const seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.seed)\r\n\r\n    if (this.constructor.hasOwnProperty('randomAngle') === true) {\r\n      this.setRotationFromEuler(\r\n        new THREE.Euler(\r\n          (this.rng() - 0.5) * 2 * degToRad(this.constructor.randomAngle.x),\r\n          (this.rng() - 0.5) * 2 * degToRad(this.constructor.randomAngle.y),\r\n          (this.rng() - 0.5) * 2 * degToRad(this.constructor.randomAngle.z)\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  addMesh(geometry, materialOptions, variation = 0.1) {\r\n    materialOptions.color.r += (this.rng() - 0.5) * variation\r\n    materialOptions.color.g += (this.rng() - 0.5) * variation\r\n    materialOptions.color.b += (this.rng() - 0.5) * variation\r\n    materialOptions.envMap = this.webgl.scene.environment\r\n    if (materialOptions.roughness === undefined) {\r\n      materialOptions.roughness = 0.6\r\n    }\r\n    materialOptions.roughness += (this.rng() - 0.5) * variation\r\n\r\n    const material = new THREE.MeshPhysicalMaterial(materialOptions)\r\n\r\n    const mesh = new THREE.Mesh(geometry, material)\r\n    mesh.castShadow = true\r\n    mesh.receiveShadow = true\r\n\r\n    this.add(mesh)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport ContextualObject from './ContextualObject'\r\n\r\nexport default class Building extends ContextualObject {\r\n  static className = 'Building'\r\n  static distributionOptions = { grass: 1 }\r\n  static labels = ['building']\r\n  static baseDensity = 0.001\r\n\r\n  constructor(webgl, options) {\r\n    super(webgl, options)\r\n\r\n    this.type = 'Building'\r\n\r\n    const geometry = new THREE.BoxGeometry(\r\n      this.options.bounds.x * 0.25,\r\n      this.options.bounds.y * 0.25,\r\n      this.options.bounds.z * 0.25\r\n    )\r\n    geometry.translate(0, this.options.bounds.y * 0.25 * 0.5, 0)\r\n\r\n    const color = new THREE.Color(0.5, 0.4, 0.3)\r\n    this.addMesh(geometry, { color: color })\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nconst MIN_QUAD_SIZE = 2\r\n\r\nexport default class Quad {\r\n  constructor(webgl, bounds) {\r\n    this.webgl = webgl\r\n\r\n    this.bounds = bounds\r\n    this.boundsSize = new THREE.Vector2(0, 0)\r\n    this.bounds.getSize(this.boundsSize)\r\n\r\n    this.labels = {}\r\n    this.color = null\r\n\r\n    this.topLeft = null\r\n    this.topRight = null\r\n    this.bottomLeft = null\r\n    this.bottomRight = null\r\n  }\r\n\r\n  isSmallestAllowedSize() {\r\n    return this.boundsSize.x <= MIN_QUAD_SIZE && this.boundsSize.y <= MIN_QUAD_SIZE\r\n  }\r\n\r\n  setColor(color, position) {\r\n    const point = this.getPoint(position)\r\n    if (this.bounds.containsPoint(point) === false) {\r\n      console.warn(`setColor: Bounds did not contain position [${position.x}, ${position.y}]!`)\r\n      return\r\n    }\r\n\r\n    if (this.isSmallestAllowedSize() === true) {\r\n      this.color = color\r\n      return\r\n    }\r\n\r\n    const halfX = (this.bounds.min.x + this.bounds.max.x) / 2,\r\n      halfY = (this.bounds.min.y + this.bounds.max.y) / 2\r\n\r\n    if (halfX >= point.x) {\r\n      // Top left\r\n      if (halfY >= point.y) {\r\n        if (this.topLeft === null) {\r\n          this.topLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min,\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5)\r\n            )\r\n          )\r\n        }\r\n        this.topLeft.setColor(color, point)\r\n      }\r\n      // Bottom left\r\n      else {\r\n        if (this.bottomLeft === null) {\r\n          this.bottomLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2(this.bounds.min.x, (this.bounds.min.y + this.bounds.max.y) / 2),\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.max.y)\r\n            )\r\n          )\r\n        }\r\n        this.bottomLeft.setColor(color, point)\r\n      }\r\n    } else {\r\n      // Top right\r\n      if (halfY >= point.y) {\r\n        if (this.topRight === null) {\r\n          this.topRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.min.y),\r\n              new THREE.Vector2(this.bounds.max.x, (this.bounds.min.y + this.bounds.max.y) / 2)\r\n            )\r\n          )\r\n        }\r\n        this.topRight.setColor(color, point)\r\n      }\r\n      // Bottom right\r\n      else {\r\n        if (this.bottomRight === null) {\r\n          this.bottomRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5),\r\n              this.bounds.max\r\n            )\r\n          )\r\n        }\r\n        this.bottomRight.setColor(color, point)\r\n      }\r\n    }\r\n  }\r\n\r\n  getColor(position) {\r\n    const point = this.getPoint(position)\r\n    if (this.bounds.containsPoint(point) === true) {\r\n      if (this.isSmallestAllowedSize() === true) {\r\n        return this.color\r\n      }\r\n      const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n      for (const quad of quads) {\r\n        if (quad !== null && quad.bounds.containsPoint(point) === true) {\r\n          return quad.getColor(point)\r\n        }\r\n      }\r\n    } else {\r\n      console.warn(`getColor: Bounds did not contain position [${point.x}, ${point.y}]!`)\r\n    }\r\n\r\n    if (window.DEBUG) {\r\n      this.drawDebug(0xff00ff)\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  getAverageColor(position) {\r\n    // TODO: Make this recursive (fake mip-mapping with a \"mip level\" parameter)?\r\n    const point = this.getPoint(position)\r\n    const baseColor = this.getColor(point)\r\n    if (baseColor === null) {\r\n      return null\r\n    }\r\n\r\n    let r = 0,\r\n      g = 0,\r\n      b = 0,\r\n      numSamples = 0\r\n\r\n    const sample = [-1, 0, 1]\r\n    for (const x of sample) {\r\n      for (const y of sample) {\r\n        let color = baseColor\r\n        if (x != 0 && y != 0) {\r\n          const tap = new THREE.Vector2(point.x + MIN_QUAD_SIZE * x, point.y + MIN_QUAD_SIZE * y)\r\n          if (this.bounds.containsPoint(tap) === true) {\r\n            color = this.getColor(tap)\r\n          }\r\n          if (color === null) {\r\n            color = baseColor\r\n          }\r\n        }\r\n        r += color.r\r\n        g += color.g\r\n        b += color.b\r\n        numSamples++\r\n      }\r\n    }\r\n\r\n    return new THREE.Color(\r\n      (baseColor.r + r) / numSamples,\r\n      (baseColor.g + g) / numSamples,\r\n      (baseColor.b + b) / numSamples\r\n    )\r\n  }\r\n\r\n  addLabels(labels, position) {\r\n    const point = this.getPoint(position)\r\n\r\n    if (this.bounds.containsPoint(point) === false) {\r\n      console.warn(`addLabels: Bounds did not contain position [${point.x}, ${point.y}]!`)\r\n      return\r\n    }\r\n\r\n    for (const label of labels) {\r\n      if (label in this.labels) {\r\n        this.labels[label] += 1\r\n      } else {\r\n        this.labels[label] = 1\r\n      }\r\n    }\r\n\r\n    if (this.isSmallestAllowedSize()) {\r\n      return\r\n    }\r\n\r\n    const halfX = (this.bounds.min.x + this.bounds.max.x) / 2,\r\n      halfY = (this.bounds.min.y + this.bounds.max.y) / 2\r\n\r\n    if (halfX >= point.x) {\r\n      // Top left\r\n      if (halfY >= point.y) {\r\n        if (this.topLeft === null) {\r\n          this.topLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min,\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5)\r\n            )\r\n          )\r\n        }\r\n        this.topLeft.addLabels(labels, point)\r\n      }\r\n      // Bottom left\r\n      else {\r\n        if (this.bottomLeft === null) {\r\n          this.bottomLeft = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2(this.bounds.min.x, (this.bounds.min.y + this.bounds.max.y) / 2),\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.max.y)\r\n            )\r\n          )\r\n        }\r\n        this.bottomLeft.addLabels(labels, point)\r\n      }\r\n    } else {\r\n      // Top right\r\n      if (halfY >= point.y) {\r\n        if (this.topRight === null) {\r\n          this.topRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              new THREE.Vector2((this.bounds.min.x + this.bounds.max.x) / 2, this.bounds.min.y),\r\n              new THREE.Vector2(this.bounds.max.x, (this.bounds.min.y + this.bounds.max.y) / 2)\r\n            )\r\n          )\r\n        }\r\n        this.topRight.addLabels(labels, point)\r\n      }\r\n      // Bottom right\r\n      else {\r\n        if (this.bottomRight === null) {\r\n          this.bottomRight = new Quad(\r\n            this.webgl,\r\n            new THREE.Box2(\r\n              this.bounds.min.clone().add(this.bounds.max).multiplyScalar(0.5),\r\n              this.bounds.max\r\n            )\r\n          )\r\n        }\r\n        this.bottomRight.addLabels(labels, point)\r\n      }\r\n    }\r\n  }\r\n\r\n  findQuadWithMinLabelDensity(label, minDensity) {\r\n    let density = this.getLabelDensity(label)\r\n    if (density <= 0) {\r\n      return null\r\n    }\r\n    if (density >= minDensity) {\r\n      return this\r\n    }\r\n\r\n    if (label in this.labels) {\r\n      let bestQuad = null,\r\n        bestDensity = 0,\r\n        quadDensity = 0\r\n      const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n      quads.forEach((quad) => {\r\n        if (quad !== null) {\r\n          quadDensity = quad.getLabelDensity(label)\r\n          if (quadDensity > bestDensity) {\r\n            bestQuad = quad\r\n            bestDensity = quadDensity\r\n          }\r\n        }\r\n      })\r\n      return bestQuad.findQuadWithMinLabelDensity(label, minDensity)\r\n    }\r\n    return null\r\n  }\r\n\r\n  findQuadWithMaxLabelDensity(label, maxDensity) {\r\n    let density = this.getLabelDensity(label)\r\n    if (density <= maxDensity) {\r\n      console.log(`Found quad with density ${density} for ${label}`)\r\n      return this\r\n    }\r\n    console.log(`This one had ${density} for ${label}, looking in children`)\r\n\r\n    if (label in this.labels) {\r\n      let bestQuad = null,\r\n        bestDensity = maxDensity,\r\n        quadDensity = 0\r\n      const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n      quads.forEach((quad) => {\r\n        if (quad !== null) {\r\n          quadDensity = quad.getLabelDensity(label)\r\n          if (quadDensity < bestDensity) {\r\n            bestQuad = quad\r\n            bestDensity = quadDensity\r\n          }\r\n        }\r\n      })\r\n      return bestQuad.findQuadWithMaxLabelDensity(label, maxDensity)\r\n    }\r\n    return null\r\n  }\r\n\r\n  getLabelDensity(label) {\r\n    if (label in this.labels === true) {\r\n      return this.labels[label] / (this.boundsSize.x * this.boundsSize.y) // TODO: Divide by ratio of 1x1m\r\n    }\r\n    return 0\r\n  }\r\n\r\n  hasLabels(labels, requireAll = false) {\r\n    for (const label of labels) {\r\n      const hasLabel = label in this.labels === true\r\n      if (requireAll === true && hasLabel === false) {\r\n        return false\r\n      } else if (requireAll === false && hasLabel === true) {\r\n        return true\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  positionHasLabels(position, labels) {\r\n    if (Array.isArray(labels) === false) {\r\n      return false\r\n    }\r\n\r\n    let point = this.getPoint(position)\r\n\r\n    if (this.bounds.containsPoint(point) === false || this.hasLabels(labels) === false) {\r\n      return false\r\n    }\r\n\r\n    const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n    for (const quad of quads) {\r\n      if (quad !== null && quad.bounds.containsPoint(point)) {\r\n        return quad.positionHasLabels(point, labels)\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  getLabels(position) {\r\n    const point = this.getPoint(position)\r\n\r\n    if (this.bounds.containsPoint(point) === false) {\r\n      return []\r\n    }\r\n\r\n    if (this.isSmallestAllowedSize() === true) {\r\n      return this.labels\r\n    }\r\n\r\n    const quads = [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft]\r\n    for (const quad of quads) {\r\n      if (quad !== null && quad.bounds.containsPoint(point)) {\r\n        return quad.getLabels(point)\r\n      }\r\n    }\r\n\r\n    return this.labels\r\n  }\r\n\r\n  getPoint(position) {\r\n    if (hasOwnProperty.call(position, 'z')) {\r\n      return new THREE.Vector2(position.x, position.z)\r\n    }\r\n    return position\r\n  }\r\n\r\n  drawDebug(color) {\r\n    const box = new THREE.Box3(),\r\n      center = new THREE.Vector3(\r\n        (this.bounds.min.x + this.bounds.max.x) / 2,\r\n        10,\r\n        (this.bounds.min.y + this.bounds.max.y) / 2\r\n      ),\r\n      end = new THREE.Vector3(this.boundsSize.x, 1, this.boundsSize.y)\r\n    box.setFromCenterAndSize(center, end)\r\n    const helper = new THREE.Box3Helper(box, color)\r\n    this.webgl.scene.add(helper)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport ContextualObject from './ContextualObject'\r\n\r\nexport default class Rock extends ContextualObject {\r\n  static className = 'Rock'\r\n  static distributionOptions = { sand: 1, grass: 0.2 }\r\n  static labels = ['rock']\r\n  static baseDensity = 0.1\r\n  static randomAngle = new THREE.Vector3(15, 90, 15)\r\n  static baseSize = 0.8\r\n  static allowUnderwater = true\r\n\r\n  constructor(webgl, options) {\r\n    super(webgl, options)\r\n\r\n    this.type = 'Rock'\r\n\r\n    this.size =\r\n      this.constructor.baseSize +\r\n      (this.rng() - 0.5) * this.constructor.baseSize * this.constructor.sizeVariation\r\n\r\n    const geometry = new THREE.SphereGeometry(this.size, 4, 4)\r\n    const color = new THREE.Color(0.4, 0.36, 0.32)\r\n    if (this.options.terrainColor !== null) {\r\n      color.lerp(this.options.terrainColor, 0.5)\r\n    }\r\n    const roughness = this.options.isUnderwater === true ? 0.4 : 0.6\r\n    this.addMesh(geometry, { color: color, roughness: roughness }, 0.05)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\n\r\nexport default function generateSideMeshes(\r\n  group,\r\n  planeGeometry,\r\n  material,\r\n  xSegments,\r\n  zSegments,\r\n  lowestPoint\r\n) {\r\n  const topVertices = planeGeometry.getAttribute('position').array\r\n  planeGeometry.computeBoundingBox()\r\n  let bounds = new THREE.Vector3(0, 0, 0)\r\n  planeGeometry.boundingBox.getSize(bounds)\r\n  let newHeight = 0\r\n\r\n  // +X, +Z, -X, -Z\r\n  for (let side = 0; side < 4; side++) {\r\n    const xSide = side % 2 == 1\r\n    const sideGeometry = new THREE.PlaneBufferGeometry(\r\n      xSide ? bounds.x : bounds.z,\r\n      xSide ? bounds.z : bounds.x,\r\n      xSide ? xSegments : zSegments,\r\n      1\r\n    )\r\n    if (xSide) {\r\n      sideGeometry.translate(0, 0, bounds.z / 2)\r\n    } else {\r\n      sideGeometry.rotateY(-Math.PI / 2)\r\n      sideGeometry.translate(-bounds.x / 2, 0, 0)\r\n    }\r\n\r\n    const vertices = sideGeometry.getAttribute('position').array,\r\n      stride = xSide ? xSegments : zSegments\r\n    for (let i = 0, l = vertices.length / 3 / 2; i < l; i++) {\r\n      // Top row, match plane geometry\r\n      if (xSide) {\r\n        if (side < 2) {\r\n          newHeight = topVertices[(i + (xSegments + 1) * zSegments) * 3 + 1]\r\n        } else {\r\n          newHeight = topVertices[i * 3 + 1]\r\n        }\r\n      } else {\r\n        if (side < 2) {\r\n          newHeight = topVertices[i * (xSegments + 1) * 3 + 1]\r\n        } else {\r\n          newHeight = topVertices[(i * (xSegments + 1) + xSegments) * 3 + 1]\r\n        }\r\n      }\r\n      vertices[i * 3 + 1] = newHeight\r\n\r\n      // Bottom row, lowestPoint\r\n      vertices[(i + stride + 1) * 3 + 1] = lowestPoint\r\n    }\r\n\r\n    const mesh = new THREE.Mesh(sideGeometry, material)\r\n    if (side > 1) {\r\n      if (xSide) {\r\n        mesh.scale.z = -1\r\n      } else {\r\n        mesh.scale.x = -1\r\n      }\r\n    }\r\n\r\n    mesh.castShadow = true\r\n    mesh.receiveShadow = true\r\n\r\n    group.add(mesh)\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport { ImprovedNoise } from 'three/examples/jsm/math/ImprovedNoise.js'\r\nimport generateSideMeshes from '../lib/meshUtils'\r\nimport { lerp } from 'canvas-sketch-util/math'\r\n\r\nexport default class Terrain extends THREE.Group {\r\n  #bottomPadding = 2\r\n\r\n  constructor(webgl, options) {\r\n    super(options)\r\n\r\n    this.type = 'Terrain'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    this.generateHeight(this.options.bounds.x, this.options.bounds.z)\r\n\r\n    const geometry = new THREE.PlaneBufferGeometry(\r\n      this.options.bounds.x,\r\n      this.options.bounds.z,\r\n      this.options.bounds.x - 1,\r\n      this.options.bounds.z - 1\r\n    )\r\n    geometry.rotateX(-Math.PI / 2)\r\n\r\n    let vertices = geometry.getAttribute('position').array\r\n    for (let i = 0, l = vertices.length / 3; i < l; i++) {\r\n      vertices[i * 3 + 1] = this.heightData[i]\r\n    }\r\n\r\n    if (this.options.water.enabled === true) {\r\n      this.waterCurve = this.getWaterCurve(geometry)\r\n      this.modifyGeometryForWater(geometry)\r\n    }\r\n    geometry.computeVertexNormals()\r\n\r\n    const texture = new THREE.CanvasTexture(\r\n      this.generateTexture(geometry, this.options.bounds.x, this.options.bounds.z)\r\n    )\r\n    texture.wrapS = THREE.ClampToEdgeWrapping\r\n    texture.wrapT = THREE.ClampToEdgeWrapping\r\n\r\n    const material = new THREE.MeshPhysicalMaterial({\r\n      map: texture,\r\n      envMap: this.webgl.scene.environment,\r\n      roughness: 0.6,\r\n    })\r\n\r\n    this.mesh = new THREE.Mesh(geometry, material)\r\n\r\n    this.mesh.castShadow = true\r\n    this.mesh.receiveShadow = true\r\n\r\n    this.add(this.mesh)\r\n\r\n    const sideMaterial = new THREE.MeshPhysicalMaterial({\r\n      color: 0x554928,\r\n      envMap: this.webgl.scene.environment,\r\n      roughness: 0.6,\r\n    })\r\n    generateSideMeshes(\r\n      this,\r\n      geometry,\r\n      sideMaterial,\r\n      this.options.bounds.x - 1,\r\n      this.options.bounds.z - 1,\r\n      -this.options.bounds.y / 2\r\n    )\r\n  }\r\n\r\n  generateHeight(width, height) {\r\n    let size = width * height,\r\n      perlin = new ImprovedNoise(),\r\n      quality = 1,\r\n      seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed),\r\n      z = rng()\r\n\r\n    this.heightData = new Float32Array(size)\r\n\r\n    for (let j = 0; j < 4; j++) {\r\n      for (let i = 0; i < size; i++) {\r\n        let x = i % width,\r\n          y = ~~(i / width)\r\n        this.heightData[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75)\r\n      }\r\n\r\n      quality *= 5\r\n    }\r\n\r\n    // Normalize height\r\n    let min = 10000,\r\n      max = -10000\r\n    for (let i = 0; i < size; i++) {\r\n      if (this.heightData[i] < min) {\r\n        min = this.heightData[i]\r\n      }\r\n      if (this.heightData[i] > max) {\r\n        max = this.heightData[i]\r\n      }\r\n    }\r\n\r\n    const heightScale = (this.options.bounds.y - this.#bottomPadding - 2) / this.options.bounds.y,\r\n      multiplier = this.options.bounds.y / max\r\n    for (let i = 0; i < size; i++) {\r\n      this.heightData[i] =\r\n        ((this.heightData[i] - min) * multiplier -\r\n          this.options.bounds.y * 0.5 +\r\n          this.#bottomPadding) *\r\n        heightScale\r\n    }\r\n  }\r\n\r\n  generateTexture(geometry, width, height) {\r\n    var canvas, context, image, imageData\r\n\r\n    canvas = document.createElement('canvas')\r\n    canvas.width = width\r\n    canvas.height = height\r\n\r\n    context = canvas.getContext('2d')\r\n    context.fillStyle = '#000'\r\n    context.fillRect(0, 0, width, height)\r\n\r\n    image = context.getImageData(0, 0, canvas.width, canvas.height)\r\n    imageData = image.data\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(this.options.seed)\r\n\r\n    const halfHeight = this.options.bounds.y / 2,\r\n      waterLevel = lerp(-halfHeight, halfHeight, this.options.water.level),\r\n      vertices = geometry.getAttribute('position').array,\r\n      normals = geometry.getAttribute('normal').array,\r\n      grass = new THREE.Color(0.19 + rng() * 0.05, 0.35 + rng() * 0.05, 0.11 + rng() * 0.05),\r\n      sand = new THREE.Color(0.41 + rng() * 0.05, 0.31 + rng() * 0.05, 0.15 + rng() * 0.05),\r\n      cliff = new THREE.Color(0.28 + rng() * 0.05, 0.31 + rng() * 0.05, 0.29 + rng() * 0.05),\r\n      underwater = new THREE.Color(0.05 + rng() * 0.05, 0.08 + rng() * 0.05, 0.08 + rng() * 0.05),\r\n      upVector = new THREE.Vector3(0, 1, 0),\r\n      minCliffSteepness = 0.15,\r\n      maxCliffSteepness = 0.2\r\n\r\n    for (let i = 0, l = vertices.length / 3; i < l; i++) {\r\n      let color = grass.clone(),\r\n        labels = ['grass']\r\n      if (this.options.water.enabled) {\r\n        const height = vertices[i * 3 + 1]\r\n        if (height < waterLevel) {\r\n          color = underwater.clone()\r\n          labels = ['sand']\r\n        }\r\n        if (this.options.water.sand.enabled === true) {\r\n          const sandMax = this.options.water.sand.width + this.options.water.sand.falloff\r\n          if (height <= waterLevel - this.options.water.sand.width) {\r\n            // UNDERWATER TO SAND\r\n            const t = Math.clamp(height / (waterLevel - height), 0, 1)\r\n            color.lerp(sand, t)\r\n          } else if (sandMax > 0.001) {\r\n            if (height <= waterLevel + this.options.water.sand.width) {\r\n              // SOLID SAND\r\n              color = sand.clone()\r\n              labels = ['sand']\r\n            } else if (this.options.water.sand.falloff > 0.001) {\r\n              // SAND TO GRASS\r\n              const t = Math.clamp(\r\n                (height - waterLevel - this.options.water.sand.width) /\r\n                  this.options.water.sand.falloff,\r\n                0,\r\n                1\r\n              )\r\n              color = sand.clone().lerp(grass, t)\r\n              if (t <= 0.33) {\r\n                labels = ['sand']\r\n              } else if (t <= 0.67) {\r\n                labels.push('sand')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      const normal = new THREE.Vector3(normals[i * 3], normals[i * 3 + 1], normals[i * 3 + 2]),\r\n        cliffSteepness = 1 - Math.abs(normal.dot(upVector))\r\n      // 1 = vertical, 0 = horizontal\r\n      if (cliffSteepness > minCliffSteepness) {\r\n        const blend = Math.min(\r\n          1,\r\n          (cliffSteepness - minCliffSteepness) / (maxCliffSteepness - minCliffSteepness)\r\n        )\r\n        color.lerp(cliff, blend)\r\n        if (blend >= 0.67) {\r\n          labels = ['cliff']\r\n        } else if (blend > 0.33) {\r\n          labels.push('cliff')\r\n        }\r\n      }\r\n\r\n      if (height < waterLevel) {\r\n        labels.push = ['water']\r\n      }\r\n\r\n      imageData[i * 4] = color.r * 255 * (1 - rng() * 0.1)\r\n      imageData[i * 4 + 1] = color.g * 255 * (1 - rng() * 0.1)\r\n      imageData[i * 4 + 2] = color.b * 255 * (1 - rng() * 0.1)\r\n\r\n      // Add terrain context labels\r\n      const position = new THREE.Vector2(vertices[i * 3], vertices[i * 3 + 2])\r\n      this.options.contextQuadtree.addLabels(labels, position)\r\n      this.options.contextQuadtree.setColor(color, position)\r\n    }\r\n\r\n    context.putImageData(image, 0, 0)\r\n\r\n    const canvasScaled = document.createElement('canvas')\r\n    canvasScaled.width = width * 4\r\n    canvasScaled.height = height * 4\r\n\r\n    context = canvasScaled.getContext('2d')\r\n    context.scale(4, 4)\r\n    context.drawImage(canvas, 0, 0)\r\n\r\n    image = context.getImageData(0, 0, canvasScaled.width, canvasScaled.height)\r\n    imageData = image.data\r\n\r\n    // Add some noise\r\n    for (var i = 0, l = imageData.length; i < l; i += 4) {\r\n      var v = ~~((rng() - 0.5) * 8)\r\n\r\n      imageData[i] += v\r\n      imageData[i + 1] += v\r\n      imageData[i + 2] += v\r\n    }\r\n\r\n    context.putImageData(image, 0, 0)\r\n\r\n    return canvasScaled\r\n  }\r\n\r\n  modifyGeometryForWater(geometry) {\r\n    const points = this.waterCurve.getPoints(10)\r\n    let vertices = geometry.getAttribute('position').array\r\n    let test = new THREE.Vector3(0, 0, 0),\r\n      target = new THREE.Vector3(0, 0, 0)\r\n    for (let i = 0, l = vertices.length / 3; i < l; i++) {\r\n      const vertex = new THREE.Vector3(vertices[i * 3], vertices[i * 3 + 1], vertices[i * 3 + 2])\r\n      const vertex2D = new THREE.Vector2(vertex.x, vertex.z)\r\n      let closest = 100000\r\n      for (let p = 0; p < points.length - 1; p++) {\r\n        const line = new THREE.Line3(points[p], points[p + 1])\r\n        line.closestPointToPoint(vertex, true, test)\r\n        let distance = vertex2D.distanceTo(new THREE.Vector2(test.x, test.z))\r\n        if (distance < closest) {\r\n          closest = distance\r\n          target = test.clone()\r\n        }\r\n      }\r\n      const distance = vertex2D.distanceTo(new THREE.Vector2(target.x, target.z))\r\n      if (distance < this.options.water.width / 2 + this.options.water.falloff) {\r\n        vertices[i * 3 + 1] = this.getWaterVertexHeight(distance, target.y, vertices[i * 3 + 1])\r\n      }\r\n    }\r\n  }\r\n\r\n  getWaterVertexHeight(distance, target, current) {\r\n    const t = Math.clamp(\r\n      (distance - this.options.water.width / 2) / this.options.water.falloff,\r\n      0,\r\n      1\r\n    )\r\n    const calculated = lerp(target - this.options.water.depth, current, t)\r\n    const lowest = -this.options.bounds.y / 2 + 1\r\n    return Math.max(lowest, calculated)\r\n  }\r\n\r\n  getRandomPointOnTerrain() {\r\n    const raycaster = new THREE.Raycaster()\r\n    let position = new THREE.Vector3(this.rng(), 0, this.rng())\r\n    position.multiply(this.options.bounds)\r\n    position.y = this.options.bounds.y\r\n    position.sub(new THREE.Vector3(0.5, 0.5, 0.5).multiply(this.options.bounds))\r\n    raycaster.set(position, new THREE.Vector3(0, -1, 0))\r\n    const intersects = raycaster.intersectObject(this.mesh)\r\n    if (intersects.length > 0) {\r\n      return { hit: true, position: intersects[0].point }\r\n    }\r\n    return { hit: false, position: null }\r\n  }\r\n\r\n  getWaterCurve(geometry) {\r\n    var points = [new THREE.Vector3(0, 100000, 0), new THREE.Vector3(0, 100000, 0)],\r\n      tempVec = new THREE.Vector3()\r\n    const vertices = geometry.getAttribute('position').array,\r\n      minDist = Math.min(this.options.bounds.x, this.options.bounds.z) / 4\r\n    for (let i = 0; i < vertices.length / 3; i++) {\r\n      for (let j = 0; j < points.length; j++) {\r\n        tempVec.x = vertices[i * 3]\r\n        tempVec.y = vertices[i * 3 + 1]\r\n        tempVec.z = vertices[i * 3 + 2]\r\n        if (tempVec.y < points[j].y) {\r\n          if (j == 0 || tempVec.distanceTo(points[j - 1]) > minDist) {\r\n            points[j].x = tempVec.x\r\n            points[j].y = tempVec.y\r\n            points[j].z = tempVec.z\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const xTest = this.options.bounds.x / 2,\r\n      zTest = this.options.bounds.z / 2\r\n    const line = new THREE.Line3(\r\n      points[0].clone().add(points[1].clone().sub(points[0]).multiplyScalar(-10)),\r\n      points[0].clone().add(points[1].clone().sub(points[0]).multiplyScalar(10))\r\n    )\r\n\r\n    let xPlane = new THREE.Plane(new THREE.Vector3(0, 0, 1), zTest)\r\n    let zPlane = new THREE.Plane(new THREE.Vector3(1, 0, 0), xTest)\r\n\r\n    let endPoint = new THREE.Vector3(0, 0, 0)\r\n    if (\r\n      xPlane.intersectLine(line, endPoint) !== undefined ||\r\n      zPlane.intersectLine(line, endPoint) !== undefined\r\n    ) {\r\n      points[1] = endPoint\r\n    }\r\n\r\n    xPlane = new THREE.Plane(new THREE.Vector3(0, 0, -1), zTest)\r\n    zPlane = new THREE.Plane(new THREE.Vector3(-1, 0, 0), xTest)\r\n\r\n    let startPoint = new THREE.Vector3(0, 0, 0)\r\n    if (\r\n      xPlane.intersectLine(line, startPoint) !== undefined ||\r\n      zPlane.intersectLine(line, startPoint) !== undefined\r\n    ) {\r\n      points[0] = startPoint\r\n    }\r\n\r\n    // Flatten the water\r\n    if (points[0].y > points[1].y) {\r\n      points[0].y = lerp(points[0].y, points[1].y, 0.75)\r\n    } else {\r\n      points[1].y = lerp(points[1].y, points[0].y, 0.75)\r\n    }\r\n\r\n    // Don't let the curve go below the floor\r\n    const lowest = -this.options.bounds.y / 2 + 1\r\n    for (let p = 0; p < points.length; p++) {\r\n      points[p].y = Math.max(lowest, points[p].y)\r\n    }\r\n\r\n    return new THREE.CatmullRomCurve3([points[0], points[1]])\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport ContextualObject from './ContextualObject'\r\n\r\nexport default class Tree extends ContextualObject {\r\n  static className = 'Tree'\r\n  static distributionOptions = { grass: 1 }\r\n  static labels = ['vegetation', 'tree']\r\n  static baseDensity = 0.05\r\n  static randomAngle = new THREE.Vector3(4, 0, 4)\r\n  static baseHeight = 4\r\n\r\n  constructor(webgl, options) {\r\n    super(webgl, options)\r\n\r\n    this.type = 'Tree'\r\n\r\n    this.height =\r\n      this.constructor.baseHeight +\r\n      (this.rng() - 0.5) * this.constructor.baseHeight * this.constructor.sizeVariation\r\n\r\n    // Foliage\r\n    const trunkVerticalOffset = 0.1 + this.rng() * 0.1\r\n    let geometry = new THREE.CylinderGeometry(0.01, this.height * 0.25, this.height, 32, 4, false)\r\n    geometry.translate(0, this.height * (0.5 + trunkVerticalOffset), 0)\r\n\r\n    let color = new THREE.Color(0.15, 0.24, 0.12)\r\n    this.addMesh(geometry, { color: color }, 0.05)\r\n\r\n    // Trunk\r\n    const trunkWidth = this.height * 0.05\r\n    geometry = new THREE.CylinderGeometry(trunkWidth, trunkWidth, this.height / 4, 32, 1, true)\r\n    geometry.translate(0, (this.height * trunkVerticalOffset) / 2, 0)\r\n\r\n    color = new THREE.Color(0.28, 0.21, 0.12)\r\n    this.addMesh(geometry, { color: color })\r\n  }\r\n}\r\n","import * as THREE from 'three'\r\nimport generateSideMeshes from '../lib/meshUtils'\r\nimport { lerp } from 'canvas-sketch-util/math'\r\n\r\nexport default class Water extends THREE.Group {\r\n  constructor(webgl, options, waterCurve) {\r\n    super(options)\r\n\r\n    this.type = 'WaterMesh'\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n    this.waterCurve = waterCurve\r\n\r\n    if (this.options.water.level <= 0.001) {\r\n      return\r\n    }\r\n\r\n    const seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.seed)\r\n    const rx = this.rng() * 0.05,\r\n      ry = this.rng() * 0.05,\r\n      rz = this.rng() * 0.05,\r\n      color = new THREE.Color(0.06 + rx, 0.08 + ry, 0.07 + rz),\r\n      material = new THREE.MeshPhysicalMaterial({\r\n        color: color,\r\n        transparent: true,\r\n        opacity: 0.8,\r\n        roughness: 0.01,\r\n        reflectivity: 1,\r\n        envMap: this.webgl.scene.environment,\r\n      }),\r\n      geometry = this.generateMesh()\r\n\r\n    this.mesh = new THREE.Mesh(geometry, material)\r\n\r\n    this.mesh.castShadow = false\r\n    this.mesh.receiveShadow = false\r\n\r\n    this.add(this.mesh)\r\n\r\n    generateSideMeshes(this, geometry, material, 1, 1, -this.options.bounds.y / 2)\r\n  }\r\n\r\n  generateMesh() {\r\n    const geometry = new THREE.PlaneBufferGeometry(\r\n      this.options.bounds.x,\r\n      this.options.bounds.z,\r\n      1,\r\n      1\r\n    )\r\n    geometry.rotateX(-Math.PI / 2)\r\n\r\n    const points = this.waterCurve.getPoints(10)\r\n    const halfHeight = this.options.bounds.y / 2\r\n    let vertices = geometry.getAttribute('position').array\r\n    for (let i = 0, j = 0, l = vertices.length / 3; i < l; i++, j += 3) {\r\n      vertices[j] *= 0.999\r\n      vertices[j + 1] = lerp(-halfHeight, halfHeight, this.options.water.level)\r\n      vertices[j + 2] *= 0.999\r\n    }\r\n\r\n    return geometry\r\n  }\r\n}\r\n","import { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader.js'\r\nimport * as THREE from 'three'\r\nimport Building from './Building'\r\nimport ContextualObject from './ContextualObject'\r\nimport Quad from './ContextQuadtree'\r\nimport Rock from './Rock'\r\nimport Terrain from './Terrain'\r\nimport Tree from './Tree'\r\nimport Water from './Water'\r\n\r\nconst ALL_ASSET_CLASSES = [Building, Tree, Rock]\r\n\r\nexport class Diorama extends THREE.Group {\r\n  constructor(webgl, options) {\r\n    const start = Date.now()\r\n    super(options)\r\n\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    this.type = 'Diorama'\r\n\r\n    if (this.options.diorama.seed === undefined || this.options.diorama.seed === null) {\r\n      this.options.diorama.seed = 0\r\n    }\r\n\r\n    console.log(\r\n      `Creating new diorama (seed=${options.diorama.seed}, bounds=[${options.diorama.bounds.x}, ${options.diorama.bounds.y}, ${options.diorama.bounds.z}])`\r\n    )\r\n\r\n    const halfX = this.options.diorama.bounds.x / 2,\r\n      halfZ = this.options.diorama.bounds.z / 2\r\n    const maxSize = Math.max(halfX, halfZ)\r\n    const quadBounds = new THREE.Box2(\r\n      new THREE.Vector2(-maxSize, -maxSize),\r\n      new THREE.Vector2(maxSize, maxSize)\r\n    )\r\n    this.options.diorama.contextQuadtree = new Quad(webgl, quadBounds)\r\n\r\n    this.setupLights()\r\n\r\n    let seedrandom = require('seedrandom')\r\n    this.rng = seedrandom(this.options.diorama.seed)\r\n\r\n    this.terrain = new Terrain(this.webgl, this.options.diorama)\r\n    this.add(this.terrain)\r\n\r\n    this.water = null\r\n    if (this.options.diorama.water.enabled === true) {\r\n      this.water = new Water(this.webgl, this.options.diorama, this.terrain.waterCurve)\r\n      this.add(this.water)\r\n\r\n      if (window.DEBUG) {\r\n        const points = this.terrain.waterCurve.getPoints(10)\r\n        const waterLineGeometry = new THREE.BufferGeometry().setFromPoints(points)\r\n        const material = new THREE.LineBasicMaterial({ color: 0xff00ff })\r\n        const waterLine = new THREE.Line(waterLineGeometry, material)\r\n        this.add(waterLine)\r\n      }\r\n    }\r\n\r\n    for (const ASSET_CLASS of ALL_ASSET_CLASSES) {\r\n      this.distributeObjects(ASSET_CLASS)\r\n    }\r\n\r\n    this.createBase()\r\n\r\n    if (window.DEBUG) {\r\n      let geometry = new THREE.BoxGeometry(\r\n        this.options.diorama.bounds.x,\r\n        this.options.diorama.bounds.y,\r\n        this.options.diorama.bounds.z\r\n      )\r\n      let wireframe = new THREE.WireframeGeometry(geometry)\r\n\r\n      this.wireframe = new THREE.LineSegments(wireframe)\r\n      this.wireframe.material.depthTest = true\r\n      this.wireframe.material.opacity = 0.2\r\n      this.wireframe.material.transparent = true\r\n      this.add(this.wireframe)\r\n    }\r\n\r\n    const elapsed = Date.now() - start\r\n    console.log(`Generated in ${elapsed / 1000}s`)\r\n  }\r\n\r\n  update(dt, time) {}\r\n\r\n  setupLights() {\r\n    this.skylight = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.8)\r\n    this.skylight.color.setHSL(0.56, 0.7, 0.6)\r\n    this.skylight.groundColor.setHSL(0.095, 0.5, 0.5)\r\n    this.skylight.position.set(0, 50, 0)\r\n    this.add(this.skylight)\r\n\r\n    const size =\r\n      Math.max(\r\n        this.options.diorama.bounds.x,\r\n        this.options.diorama.bounds.y,\r\n        this.options.diorama.bounds.z\r\n      ) / 2\r\n\r\n    this.sun = new THREE.DirectionalLight(0xffffff, 1)\r\n    this.sun.color.setHSL(0.1, 1, 0.95)\r\n    this.sun.position.set(-0.5, 1, 0.375)\r\n    this.sun.position.multiplyScalar(size)\r\n    this.sun.castShadow = true\r\n    this.sun.shadow.mapSize.width = 1024\r\n    this.sun.shadow.mapSize.height = 1024\r\n    this.sun.shadow.camera.left = -size * 1.5\r\n    this.sun.shadow.camera.right = size * 1.5\r\n    this.sun.shadow.camera.top = size * 1.5\r\n    this.sun.shadow.camera.bottom = -size * 1.5\r\n    this.sun.shadow.camera.near = 0.1\r\n    this.sun.shadow.camera.far = size * 3\r\n    this.add(this.sun)\r\n\r\n    if (window.DEBUG) {\r\n      const helper = new THREE.CameraHelper(this.sun.shadow.camera)\r\n      this.add(helper)\r\n    }\r\n\r\n    const pmremGenerator = new THREE.PMREMGenerator(this.webgl.renderer)\r\n    pmremGenerator.compileEquirectangularShader()\r\n\r\n    const scene = this.webgl.scene\r\n\r\n    new RGBELoader()\r\n      .setDataType(THREE.UnsignedByteType)\r\n      .setPath('textures/equirectangular/')\r\n      .load('cloud_layers_1k.hdr', function (texture) {\r\n        const envMap = pmremGenerator.fromEquirectangular(texture).texture\r\n\r\n        scene.environment = envMap\r\n\r\n        texture.dispose()\r\n        pmremGenerator.dispose()\r\n      })\r\n\r\n    this.webgl.renderer.toneMapping = THREE.ACESFilmicToneMapping\r\n    this.webgl.renderer.toneMappingExposure = 0.25\r\n    this.webgl.renderer.outputEncoding = THREE.sRGBEncoding\r\n  }\r\n\r\n  createBase() {\r\n    // Base\r\n    const basePadding = 4\r\n    const baseHeight = 2\r\n    const geometry = new THREE.BoxGeometry(\r\n      this.options.diorama.bounds.x + basePadding,\r\n      baseHeight,\r\n      this.options.diorama.bounds.z + basePadding\r\n    )\r\n    const material = new THREE.MeshPhysicalMaterial({\r\n      color: new THREE.Color(0.2, 0.2, 0.2),\r\n      envMap: this.webgl.scene.environment,\r\n      roughness: 0.25,\r\n    })\r\n    const base = new THREE.Mesh(geometry, material)\r\n    base.translateY(-this.options.diorama.bounds.y / 2 - baseHeight / 2)\r\n    base.castShadow = true\r\n    base.receiveShadow = true\r\n    this.add(base)\r\n\r\n    // Floor plane\r\n    const floorSize = Math.max(this.options.diorama.bounds.x, this.options.diorama.bounds.z) * 2\r\n    const floorGeometry = new THREE.PlaneGeometry(floorSize, floorSize)\r\n    floorGeometry.rotateX(-Math.PI / 2)\r\n    floorGeometry.translate(0, -this.options.diorama.bounds.y / 2 - baseHeight, 0)\r\n    const floorMaterial = new THREE.ShadowMaterial({ opacity: 0.25 })\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial)\r\n    floor.receiveShadow = true\r\n    this.add(floor)\r\n  }\r\n\r\n  /**\r\n   * Distributes objects based on their contextual requirements.\r\n   * @param {ContextualObject} classToDistribute The class of Contextual Object to distribute\r\n   * @param {THREE.Mesh} onMesh Mesh to distribute objects on - if not specified, the terrain mesh is used\r\n   */\r\n  distributeObjects(classToDistribute, onMesh = undefined) {\r\n    if (onMesh === undefined) {\r\n      onMesh = this.terrain.mesh\r\n    }\r\n\r\n    const bounds = new THREE.Box3().setFromObject(onMesh),\r\n      className = classToDistribute.prototype.constructor.className\r\n\r\n    let numObjects = (bounds.max.x - bounds.min.x) * (bounds.max.z - bounds.min.z)\r\n\r\n    if (className in this.options.diorama.assetClasses) {\r\n      numObjects *= this.options.diorama.assetClasses[className]\r\n    }\r\n\r\n    if (hasOwnProperty.call(classToDistribute, 'baseDensity')) {\r\n      numObjects *= classToDistribute.baseDensity\r\n    } else {\r\n      console.warn(`Class '${className}' had no baseDensity property!`)\r\n    }\r\n\r\n    numObjects = Math.floor(numObjects)\r\n\r\n    const seedrandom = require('seedrandom'),\r\n      rng = seedrandom(className + this.options.diorama.seed),\r\n      raycaster = new THREE.Raycaster()\r\n\r\n    const options = { bounds: this.options.diorama.bounds }\r\n    for (let i = 0; i < numObjects; i++) {\r\n      let position = new THREE.Vector3(rng(), 0, rng())\r\n      position.multiply(new THREE.Vector3().subVectors(bounds.max, bounds.min))\r\n      position.add(new THREE.Vector3(-0.5, 1, -0.5).multiply(this.options.diorama.bounds))\r\n      raycaster.set(position, new THREE.Vector3(0, -1, 0))\r\n\r\n      const labels = this.options.diorama.contextQuadtree.getLabels(position)\r\n      if (this.meetsDistributionRequirements(classToDistribute, rng, labels) === false) {\r\n        // This location doesn't meet our object's requirements\r\n        continue\r\n      }\r\n\r\n      let intersects = raycaster.intersectObjects(this.children, true)\r\n      let rayColor = 0xff0000\r\n      if (intersects.length > 0) {\r\n        rayColor = 0x0000ff\r\n\r\n        options.isUnderwater = false\r\n        if (classToDistribute.allowUnderwater === true && this.water !== null) {\r\n          if (intersects[0].object === this.water.mesh) {\r\n            // TODO: Maybe need a bounds against water level check for if the object is *entirely* underwater?\r\n            options.isUnderwater = true\r\n            intersects[0] = intersects[1] // Skip the water hit\r\n          }\r\n        }\r\n\r\n        if (intersects[0].object === onMesh) {\r\n          rayColor = 0x00ff00\r\n          position = intersects[0].point\r\n\r\n          options.seed = this.options.diorama.seed + i\r\n          options.labels = this.options.diorama.contextQuadtree.getLabels(position)\r\n          options.terrainColor = this.options.diorama.contextQuadtree.getAverageColor(position)\r\n          const newObject = new classToDistribute(this.webgl, options)\r\n          newObject.position.set(position.x, position.y, position.z)\r\n          newObject.updateMatrixWorld()\r\n          this.add(newObject)\r\n\r\n          if (hasOwnProperty.call(classToDistribute, 'labels')) {\r\n            if (classToDistribute.labels.length > 0) {\r\n              this.options.diorama.contextQuadtree.addLabels(classToDistribute.labels, position)\r\n            } else {\r\n              console.warn(`No labels defined for class ${newObject.type}`)\r\n            }\r\n          } else {\r\n            console.warn(`Failed to find labels property on class ${newObject.type}`)\r\n          }\r\n        }\r\n      }\r\n\r\n      if (window.DEBUG) {\r\n        const arrow = new THREE.ArrowHelper(\r\n          raycaster.ray.direction,\r\n          raycaster.ray.origin,\r\n          this.options.diorama.bounds.y * 1.5,\r\n          rayColor,\r\n          1,\r\n          0.5\r\n        )\r\n        this.add(arrow)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true if a label array meets requirements set by the ContextualObject class, otherwise false\r\n   * @param {ContextualObject} objectClass The class of Contextual Object to check\r\n   * @param {seedrandom.prng} rng Seeded random number generator object\r\n   * @param {string[]} labels Array of labels representing the context to check against\r\n   * @returns Value representing if the requirements were met\r\n   */\r\n  meetsDistributionRequirements(object, rng, labels) {\r\n    for (const [key, value] of Object.entries(object.distributionOptions)) {\r\n      if (Object.keys(labels).includes(key) === true) {\r\n        if (rng() <= value) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nexport function getDefaultDioramaOptions() {\r\n  const defaultDioramaOptions = {\r\n    seed: 2655,\r\n    bounds: new THREE.Vector3(48, 16, 32),\r\n    biome: 'temperate',\r\n    assetClasses: getAssetClassDefaults(),\r\n    water: {\r\n      enabled: true,\r\n      level: 0.25,\r\n      depth: 1,\r\n      width: 2,\r\n      falloff: 6,\r\n      sand: {\r\n        enabled: true,\r\n        width: 1,\r\n        falloff: 2,\r\n      },\r\n    },\r\n  }\r\n\r\n  function getAssetClassDefaults() {\r\n    const result = {}\r\n    for (const assetClass of ALL_ASSET_CLASSES) {\r\n      result[assetClass.prototype.constructor.className] = 1\r\n    }\r\n    return result\r\n  }\r\n\r\n  // Load previous session settings if available\r\n  const sessionOptions = sessionStorage.getItem('dioramaOptions')\r\n  if (sessionOptions !== null) {\r\n    let parsedOptions = {}\r\n    try {\r\n      parsedOptions = JSON.parse(sessionOptions)\r\n    } catch (err) {\r\n      console.log('Error when parsing session options!')\r\n    }\r\n    Object.assign(defaultDioramaOptions, parsedOptions)\r\n  }\r\n\r\n  return defaultDioramaOptions\r\n}\r\n","import * as THREE from 'three'\r\nimport { Diorama } from '../components/Diorama'\r\nimport { isEmpty } from 'lodash'\r\n\r\n/** Default ranges for option sliders */\r\nconst ranges = {\r\n  options: {\r\n    seed: { max: 10000 },\r\n  },\r\n  bounds: {\r\n    x: { min: 5, max: 60 },\r\n    y: { min: 5, max: 30 },\r\n    z: { min: 5, max: 60 },\r\n  },\r\n  water: {\r\n    level: { max: 1, step: 0.01 },\r\n    depth: { max: 10, step: 0.5 },\r\n    width: { min: 0.5, max: 20, step: 0.5 },\r\n    falloff: { min: 0.5, max: 20, step: 0.5 },\r\n  },\r\n  sand: {\r\n    width: { max: 10, step: 0.5 },\r\n    falloff: { max: 10, step: 0.5 },\r\n  },\r\n}\r\n\r\nclass InputControl {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.field = document.createElement('div')\r\n\r\n    this.label = document.createElement('label')\r\n    this.label.innerText = toDisplayString(options.name)\r\n    this.field.appendChild(this.label)\r\n\r\n    this.input = document.createElement('input')\r\n    this.input.onchange = () => this.propertyChanged()\r\n    this.field.appendChild(this.input)\r\n\r\n    options.parent.appendChild(this.field)\r\n  }\r\n\r\n  propertyChanged() {\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  setVisibility(visible) {\r\n    this.field.style.display = visible ? 'block' : 'none'\r\n  }\r\n}\r\n\r\nclass CheckBoxControl extends InputControl {\r\n  constructor(owner, options) {\r\n    super(owner, options)\r\n\r\n    this.input.setAttribute('type', 'checkbox')\r\n    this.input.checked = options.defaultValue == true\r\n  }\r\n\r\n  getValue() {\r\n    return this.input.checked\r\n  }\r\n}\r\n\r\nclass SliderControl extends InputControl {\r\n  constructor(owner, options) {\r\n    super(owner, options)\r\n\r\n    this.input.setAttribute('type', 'range')\r\n    this.input.setAttribute('min', options.min)\r\n    this.input.setAttribute('max', options.max)\r\n    this.input.setAttribute('step', options.step)\r\n    this.input.value = options.defaultValue\r\n  }\r\n\r\n  getValue() {\r\n    return parseFloat(this.input.value)\r\n  }\r\n}\r\n\r\nclass AssetArrayGroup {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.div = document.createElement('div')\r\n    this.heading = document.createElement('h' + options.depth)\r\n    this.heading.innerText = 'Assets'\r\n    this.div.appendChild(this.heading)\r\n\r\n    this.controls = {}\r\n\r\n    const childOptions = {\r\n      parent: this.div,\r\n      min: 0,\r\n      max: 5,\r\n      step: 0.1,\r\n    }\r\n    for (const [key, value] of Object.entries(options.optionsObject)) {\r\n      Object.assign(childOptions, {\r\n        name: key + 's',\r\n        defaultValue: value,\r\n      })\r\n      this.controls[key] = new SliderControl(this, childOptions)\r\n    }\r\n\r\n    options.parent.appendChild(this.div)\r\n  }\r\n\r\n  propertyChanged() {\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  getValue() {\r\n    const options = {}\r\n    for (const [key, value] of Object.entries(this.controls)) {\r\n      options[key] = value.getValue()\r\n    }\r\n    return options\r\n  }\r\n}\r\n\r\nclass ControlGroup {\r\n  constructor(owner, options) {\r\n    this.owner = owner\r\n    this.options = options\r\n\r\n    this.div = document.createElement('div')\r\n    this.heading = document.createElement('h' + options.depth)\r\n    this.heading.innerText = toDisplayString(options.name)\r\n    this.div.appendChild(this.heading)\r\n\r\n    this.controls = {}\r\n\r\n    for (const [key, value] of Object.entries(options.optionsObject)) {\r\n      let childOptions = { name: key, defaultValue: value, parent: this.div }\r\n      switch (typeof value) {\r\n        case 'boolean':\r\n          this.controls[key] = new CheckBoxControl(this, childOptions)\r\n          break\r\n        case 'number':\r\n          Object.assign(childOptions, { min: 0, max: 100, step: 1 })\r\n          if (options.name in ranges && key in ranges[options.name]) {\r\n            Object.assign(childOptions, ranges[options.name][key])\r\n          }\r\n          this.controls[key] = new SliderControl(this, childOptions)\r\n          break\r\n        case 'object':\r\n          if (isEmpty(value) === false) {\r\n            Object.assign(childOptions, { optionsObject: value, depth: options.depth + 1 })\r\n            if (key === 'assetClasses') {\r\n              this.controls[key] = new AssetArrayGroup(this, childOptions)\r\n            } else {\r\n              this.controls[key] = new ControlGroup(this, childOptions)\r\n            }\r\n          }\r\n          break\r\n      }\r\n    }\r\n\r\n    options.parent.appendChild(this.div)\r\n  }\r\n\r\n  propertyChanged() {\r\n    if ('enabled' in this.controls) {\r\n      this.setVisibility(this.controls.enabled.getValue())\r\n    }\r\n    this.owner.propertyChanged()\r\n  }\r\n\r\n  getValue() {\r\n    let optionValues = {}\r\n    for (const [key, control] of Object.entries(this.controls)) {\r\n      optionValues[key] = control.getValue()\r\n    }\r\n    return optionValues\r\n  }\r\n\r\n  setVisibility(visible) {\r\n    for (const [key, control] of Object.entries(this.controls)) {\r\n      if (key !== 'enabled') {\r\n        this.controls[key].setVisibility(visible)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default class DioramaControls {\r\n  constructor(webgl, options) {\r\n    this.webgl = webgl\r\n    this.options = options\r\n\r\n    const controlsDiv = document.getElementById('controls')\r\n\r\n    this.controls = new ControlGroup(this, {\r\n      name: 'options',\r\n      optionsObject: this.options,\r\n      depth: 1,\r\n      parent: controlsDiv,\r\n    })\r\n  }\r\n\r\n  propertyChanged() {\r\n    if (this.webgl.scene.diorama !== undefined) {\r\n      this.webgl.scene.remove(this.webgl.scene.diorama)\r\n      this.webgl.scene.diorama = undefined\r\n    }\r\n\r\n    const dioramaOptions = this.controls.getValue()\r\n    sessionStorage.setItem('dioramaOptions', JSON.stringify(dioramaOptions))\r\n\r\n    this.webgl.scene.diorama = new Diorama(this.webgl, { diorama: dioramaOptions })\r\n    this.webgl.scene.add(this.webgl.scene.diorama)\r\n  }\r\n}\r\n\r\nfunction toDisplayString(name) {\r\n  return isEmpty(name) ? name : name[0].toUpperCase() + name.slice(1)\r\n}\r\n","import WebGLApp from './lib/WebGLApp'\r\nimport assets from './lib/AssetManager'\r\nimport { Diorama, getDefaultDioramaOptions } from './components/Diorama'\r\nimport DioramaControls from './ui/DioramaControls'\r\n\r\nwindow.DEBUG = window.location.search.includes('debug')\r\n\r\nconst canvas = document.querySelector('#app')\r\n\r\nconst webgl = new WebGLApp({\r\n  canvas,\r\n  alpha: true,\r\n  background: '#ABC',\r\n  backgroundAlpha: 1,\r\n  showFps: window.DEBUG,\r\n  orbitControls: true,\r\n})\r\n\r\nif (window.DEBUG) {\r\n  window.webgl = webgl\r\n}\r\n\r\nconst defaultDioramaOptions = getDefaultDioramaOptions()\r\n\r\nnew DioramaControls(webgl, defaultDioramaOptions)\r\n\r\n// Hide canvas until assets are loaded\r\nwebgl.canvas.style.visibility = 'hidden'\r\n\r\n// Load any queued assets\r\nassets.load({ renderer: webgl.renderer }).then(() => {\r\n  webgl.scene.diorama = new Diorama(webgl, { diorama: defaultDioramaOptions })\r\n  webgl.scene.add(webgl.scene.diorama)\r\n\r\n  webgl.canvas.style.visibility = ''\r\n\r\n  // Rotate camera target slightly below the center\r\n  webgl.orbitControls.target.set(0, -defaultDioramaOptions.bounds.y / 5, 0)\r\n\r\n  webgl.start()\r\n  webgl.draw()\r\n})\r\n"],"sourceRoot":""}